<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_05) on Wed Jan 19 15:21:48 EST 2005 -->
<TITLE>
Index
</TITLE>


<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="Index";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="#_A_">A</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_I_">I</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_P_">P</A> <A HREF="#_Q_">Q</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <HR>
<A NAME="_A_"><!-- --></A><H2>
<B>A</B></H2>
<DL>
<DT><A HREF="Tensor1d.html#add(Tensor1d)"><B>add(Tensor1d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>addition
<DT><A HREF="Tensor2d.html#add(Tensor2d)"><B>add(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>addition
<DT><A HREF="Tensor3d.html#add(Tensor3d)"><B>add(Tensor3d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>addition
</DL>
<HR>
<A NAME="_C_"><!-- --></A><H2>
<B>C</B></H2>
<DL>
<DT><A HREF="Function1d.html#compress(int, int)"><B>compress(int, int)</B></A> - 
Method in class <A HREF="Function1d.html" title="class in ">Function1d</A>
<DD>change from scaling function basis to multi-wavelet basis (s -> d)
        tree is filled out with s[0][0] and d
<DT><A HREF="Tensor1d.html#copy()"><B>copy()</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Copy
<DT><A HREF="Tensor2d.html#copy()"><B>copy()</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Copy
<DT><A HREF="Tensor3d.html#copy()"><B>copy()</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Copy
</DL>
<HR>
<A NAME="_D_"><!-- --></A><H2>
<B>D</B></H2>
<DL>
<DT><A HREF="Range2d.html#d"><B>d</B></A> - 
Variable in class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>&nbsp;
<DT><A HREF="Range3d.html#d"><B>d</B></A> - 
Variable in class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>&nbsp;
<DT><A HREF="MadFn1d.html#dtest1"><B>dtest1</B></A> - 
Static variable in class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>
<DD>derivative of test1
<DT><A HREF="MadFn1d.html#dtest2"><B>dtest2</B></A> - 
Static variable in class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>
<DD>derivative of test2
<DT><A HREF="MadFn1d.html#dtest3"><B>dtest3</B></A> - 
Static variable in class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>
<DD>derivative of test3
</DL>
<HR>
<A NAME="_E_"><!-- --></A><H2>
<B>E</B></H2>
<DL>
<DT><A HREF="Range1d.html#e"><B>e</B></A> - 
Variable in class <A HREF="Range1d.html" title="class in ">Range1d</A>
<DD>&nbsp;
<DT><A HREF="Tensor1d.html#emul(Tensor1d)"><B>emul(Tensor1d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>inplace elementwise multiply
<DT><A HREF="Tensor2d.html#emul(Tensor2d)"><B>emul(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>elementwise multiply
<DT><A HREF="Tensor3d.html#emul(Tensor3d)"><B>emul(Tensor3d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>elementwise multiply
</DL>
<HR>
<A NAME="_F_"><!-- --></A><H2>
<B>F</B></H2>
<DL>
<DT><A HREF="Fn1d.html" title="interface in "><B>Fn1d</B></A> - interface <A HREF="Fn1d.html" title="interface in ">Fn1d</A>.<DD>Interface for one-dimensional analytic functions f(x)<DT><A HREF="Function1d.html" title="class in "><B>Function1d</B></A> - class <A HREF="Function1d.html" title="class in ">Function1d</A>.<DD>Multiresolution representation of 1-d functions using a multiwavelet
    basis (similar to discontinuous spectral element with a hierarchal
    decomposition).<DT><A HREF="Fn1d.html#f(double)"><B>f(double)</B></A> - 
Method in interface <A HREF="Fn1d.html" title="interface in ">Fn1d</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_G_"><!-- --></A><H2>
<B>G</B></H2>
<DL>
<DT><A HREF="Tensor1d.html#gaxpy(double, Tensor1d, double)"><B>gaxpy(double, Tensor1d, double)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>inplace gaxpy of this and other, modifies this, this = alpha*this + beta*other
<DT><A HREF="Tensor2d.html#gaxpy(double, Tensor2d, double)"><B>gaxpy(double, Tensor2d, double)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>gaxpy of this and other, modifies this, this = alpha*this + beta*other
<DT><A HREF="Tensor3d.html#gaxpy(double, Tensor3d, double)"><B>gaxpy(double, Tensor3d, double)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>gaxpy of this and other, modifies this, this = alpha*this + beta*other
<DT><A HREF="Tensor1d.html#get(int)"><B>get(int)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>get element (i)
<DT><A HREF="Tensor2d.html#get(int, int)"><B>get(int, int)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>get element (i,j)
<DT><A HREF="Tensor3d.html#get(int, int, int)"><B>get(int, int, int)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>get element (i,j,k)
<DT><A HREF="Tensor1d.html#getArray()"><B>getArray()</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>get array assoc with Tensor1d
<DT><A HREF="Tensor2d.html#getArray()"><B>getArray()</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>get array assoc with Tensor2d
<DT><A HREF="Tensor3d.html#getArray()"><B>getArray()</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>get array assoc with Tensor3d
<DT><A HREF="TwoScaleCoeffs.html#getCoeffs(int)"><B>getCoeffs(int)</B></A> - 
Static method in class <A HREF="TwoScaleCoeffs.html" title="class in ">TwoScaleCoeffs</A>
<DD>Return the two scale coeffs for k.
<DT><A HREF="Tensor2d.html#getDim0()"><B>getDim0()</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>get dim0 size
<DT><A HREF="Tensor3d.html#getDim0()"><B>getDim0()</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>get dim0 size
<DT><A HREF="Tensor2d.html#getDim1()"><B>getDim1()</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>get dim1 size
<DT><A HREF="Tensor3d.html#getDim1()"><B>getDim1()</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>get dim1 size
<DT><A HREF="Tensor3d.html#getDim2()"><B>getDim2()</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>get dim2 size
<DT><A HREF="Quadrature.html#getGLPoints(int)"><B>getGLPoints(int)</B></A> - 
Static method in class <A HREF="Quadrature.html" title="class in ">Quadrature</A>
<DD>Return Gauss-Legendre points for k.
<DT><A HREF="Quadrature.html#getGLWeights(int)"><B>getGLWeights(int)</B></A> - 
Static method in class <A HREF="Quadrature.html" title="class in ">Quadrature</A>
<DD>Return Gauss-Legendre weights for k.
<DT><A HREF="TwoScaleCoeffs.html#getMaxK()"><B>getMaxK()</B></A> - 
Static method in class <A HREF="TwoScaleCoeffs.html" title="class in ">TwoScaleCoeffs</A>
<DD>Return maximum k.
<DT><A HREF="Tensor1d.html#getN()"><B>getN()</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>get size
<DT><A HREF="Tensor1d.html#getTensor1d(int, int)"><B>getTensor1d(int, int)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Get this[s:e] into new Tensor1d
<DT><A HREF="Tensor1d.html#getTensor1d(Range1d)"><B>getTensor1d(Range1d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Get this[range] into new Tensor1d
<DT><A HREF="Tensor2d.html#getTensor2d(int, int, int, int)"><B>getTensor2d(int, int, int, int)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Get elements from this[s0:e0][s1:e1]
<DT><A HREF="Tensor2d.html#getTensor2d(Range2d)"><B>getTensor2d(Range2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Get elements from this[range.d[0].s:range.d[0].e][range.d[1].s:range.d[1].e]
<DT><A HREF="Tensor3d.html#getTensor2d(Range3d)"><B>getTensor2d(Range3d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Get elements from this[range.d[0].s:range.d[0].e][range.d[1].s:range.d[1].e]
        [range.d[2].s:range.d[2].e]
<DT><A HREF="Tensor3d.html#getTensor3d(int, int, int, int, int, int)"><B>getTensor3d(int, int, int, int, int, int)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Get elements from this[s0:e0][s1:e1][s2:e2]
</DL>
<HR>
<A NAME="_I_"><!-- --></A><H2>
<B>I</B></H2>
<DL>
<DT><A HREF="Tensor1d.html#inner(Tensor1d)"><B>inner(Tensor1d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Inner product of this and other.
</DL>
<HR>
<A NAME="_M_"><!-- --></A><H2>
<B>M</B></H2>
<DL>
<DT><A HREF="MadFn1d.html" title="class in "><B>MadFn1d</B></A> - class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>.<DD>Test function for Function1d class<DT><A HREF="MadFn1d.html#MadFn1d()"><B>MadFn1d()</B></A> - 
Constructor for class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>
<DD>&nbsp;
<DT><A HREF="Function1d.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="Function1d.html" title="class in ">Function1d</A>
<DD>&nbsp;
<DT><A HREF="Range1d.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="Range1d.html" title="class in ">Range1d</A>
<DD>&nbsp;
<DT><A HREF="Range2d.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>&nbsp;
<DT><A HREF="Range3d.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>&nbsp;
<DT><A HREF="Tensor1d.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>&nbsp;
<DT><A HREF="Tensor2d.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>&nbsp;
<DT><A HREF="Tensor3d.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>&nbsp;
<DT><A HREF="TwoScaleCoeffs.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="TwoScaleCoeffs.html" title="class in ">TwoScaleCoeffs</A>
<DD>&nbsp;
<DT><A HREF="Tensor2d.html#mul(Tensor2d)"><B>mul(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Matrix Multiply  result = this * other
</DL>
<HR>
<A NAME="_N_"><!-- --></A><H2>
<B>N</B></H2>
<DL>
<DT><A HREF="Tensor1d.html#normf()"><B>normf()</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Frobenius norm of this
<DT><A HREF="Tensor2d.html#normf()"><B>normf()</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Frobenius norm of this
<DT><A HREF="Tensor3d.html#normf()"><B>normf()</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Frobenius norm of this
</DL>
<HR>
<A NAME="_P_"><!-- --></A><H2>
<B>P</B></H2>
<DL>
<DT><A HREF="TwoScaleCoeffs.html#phi(double, int)"><B>phi(double, int)</B></A> - 
Static method in class <A HREF="TwoScaleCoeffs.html" title="class in ">TwoScaleCoeffs</A>
<DD>Evaluate the shifted normalized Legendre polynomials up to the
       given order at x defined on [0,1].
<DT><A HREF="TwoScaleCoeffs.html#pn(double, int)"><B>pn(double, int)</B></A> - 
Static method in class <A HREF="TwoScaleCoeffs.html" title="class in ">TwoScaleCoeffs</A>
<DD>Evaluate the Legendre polynomials up to the given order at x
       defined on [-1,1]
<DT><A HREF="Function1d.html#project(int, int)"><B>project(int, int)</B></A> - 
Method in class <A HREF="Function1d.html" title="class in ">Function1d</A>
<DD>s[n][l] = integral(phi[n][l](x) * f(x))
        for box (n,l) project f(x) using quadrature rule
        into scaling function basis
</DL>
<HR>
<A NAME="_Q_"><!-- --></A><H2>
<B>Q</B></H2>
<DL>
<DT><A HREF="Quadrature.html" title="class in "><B>Quadrature</B></A> - class <A HREF="Quadrature.html" title="class in ">Quadrature</A>.<DD>tabulation of gauss legendre quadrature rules on [0,1]
   solely for the purpose of making the 1d example standalone<DT><A HREF="Quadrature.html#Quadrature()"><B>Quadrature()</B></A> - 
Constructor for class <A HREF="Quadrature.html" title="class in ">Quadrature</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_R_"><!-- --></A><H2>
<B>R</B></H2>
<DL>
<DT><A HREF="Range1d.html" title="class in "><B>Range1d</B></A> - class <A HREF="Range1d.html" title="class in ">Range1d</A>.<DD>&nbsp;<DT><A HREF="Range1d.html#Range1d(int)"><B>Range1d(int)</B></A> - 
Constructor for class <A HREF="Range1d.html" title="class in ">Range1d</A>
<DD>Construct a Range1d length n = [0,n)
<DT><A HREF="Range1d.html#Range1d(int, int)"><B>Range1d(int, int)</B></A> - 
Constructor for class <A HREF="Range1d.html" title="class in ">Range1d</A>
<DD>Construct a Range1d [start,end)
<DT><A HREF="Range2d.html" title="class in "><B>Range2d</B></A> - class <A HREF="Range2d.html" title="class in ">Range2d</A>.<DD>&nbsp;<DT><A HREF="Range2d.html#Range2d(int)"><B>Range2d(int)</B></A> - 
Constructor for class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>Construct a Range2d length n = ([0,n),[0,n))
<DT><A HREF="Range2d.html#Range2d(int, int)"><B>Range2d(int, int)</B></A> - 
Constructor for class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>Construct a Range2d ([0,n0),[0,n1))
<DT><A HREF="Range2d.html#Range2d(int, int, int, int)"><B>Range2d(int, int, int, int)</B></A> - 
Constructor for class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>Construct a Range2d ([s0,e0),[s1,e1))
<DT><A HREF="Range2d.html#Range2d(Range1d, Range1d)"><B>Range2d(Range1d, Range1d)</B></A> - 
Constructor for class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>Construct a Range2d ([r0.s,r0.e),[r1.s,r1.e))
<DT><A HREF="Range3d.html" title="class in "><B>Range3d</B></A> - class <A HREF="Range3d.html" title="class in ">Range3d</A>.<DD>&nbsp;<DT><A HREF="Range3d.html#Range3d(int)"><B>Range3d(int)</B></A> - 
Constructor for class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>Construct a Range3d length n = ([0,n),[0,n),[0,n))
<DT><A HREF="Range3d.html#Range3d(int, int, int)"><B>Range3d(int, int, int)</B></A> - 
Constructor for class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>Construct a Range3d ([0,d0),[0,d1),[0,d2))
<DT><A HREF="Range3d.html#Range3d(int, int, int, int, int, int)"><B>Range3d(int, int, int, int, int, int)</B></A> - 
Constructor for class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>Construct a Range3d ([s0,e0),[s1,e1),[s2,e2))
<DT><A HREF="Range3d.html#Range3d(Range1d, Range1d, Range1d)"><B>Range3d(Range1d, Range1d, Range1d)</B></A> - 
Constructor for class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>Construct a Range3d ([r0.s,r0.e),[r1.s,r1.e),[r2.s,r2.e))
<DT><A HREF="Tensor2d.html#rand(int)"><B>rand(int)</B></A> - 
Static method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>rand
<DT><A HREF="Tensor3d.html#rand(int)"><B>rand(int)</B></A> - 
Static method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>rand
<DT><A HREF="Function1d.html#reconstruct(int, int)"><B>reconstruct(int, int)</B></A> - 
Method in class <A HREF="Function1d.html" title="class in ">Function1d</A>
<DD>change from multi-wavelet basis to scaling function basis (d -> s)
        tree just has s at leaves
<DT><A HREF="Function1d.html#refine(int, int)"><B>refine(int, int)</B></A> - 
Method in class <A HREF="Function1d.html" title="class in ">Function1d</A>
<DD>refine numerical representation of f(x) to desired tolerance
</DL>
<HR>
<A NAME="_S_"><!-- --></A><H2>
<B>S</B></H2>
<DL>
<DT><A HREF="SD1dTree.html" title="class in "><B>SD1dTree</B></A> - class <A HREF="SD1dTree.html" title="class in ">SD1dTree</A>.<DD>&nbsp;<DT><A HREF="SD1dTree.html#SD1dTree()"><B>SD1dTree()</B></A> - 
Constructor for class <A HREF="SD1dTree.html" title="class in ">SD1dTree</A>
<DD>Constructor
<DT><A HREF="SD1dTree.html#SD1dTree(int, int)"><B>SD1dTree(int, int)</B></A> - 
Constructor for class <A HREF="SD1dTree.html" title="class in ">SD1dTree</A>
<DD>Constructor
<DT><A HREF="Range1d.html#s"><B>s</B></A> - 
Variable in class <A HREF="Range1d.html" title="class in ">Range1d</A>
<DD>&nbsp;
<DT><A HREF="Tensor1d.html#scale(double)"><B>scale(double)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>inplace scale this by alpha, modifies this, this = alpha*this
<DT><A HREF="Tensor2d.html#scale(double)"><B>scale(double)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>scale this by alpha, modifies this, this = alpha*this
<DT><A HREF="Tensor3d.html#scale(double)"><B>scale(double)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>scale this by alpha, modifies this, this = alpha*this
<DT><A HREF="Tensor1d.html#set(int, double)"><B>set(int, double)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Set element this[i] to val
<DT><A HREF="Tensor1d.html#set(int, int, double)"><B>set(int, int, double)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Set elements of this[s:e] to val
<DT><A HREF="Tensor2d.html#set(int, int, double)"><B>set(int, int, double)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Set element this[i][j] to val
<DT><A HREF="Tensor2d.html#set(int, int, int, int, double)"><B>set(int, int, int, int, double)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Set elements of this[start to end-1] to val
<DT><A HREF="Tensor3d.html#set(int, int, int, double)"><B>set(int, int, int, double)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Set element this[i][j][k] to val
<DT><A HREF="Tensor3d.html#set(int, int, int, int, int, int, double)"><B>set(int, int, int, int, int, int, double)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Set elements of this[start to end-1] to val
<DT><A HREF="Tensor1d.html#setFill(double)"><B>setFill(double)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Set all elements to value
<DT><A HREF="Tensor2d.html#setFill(double)"><B>setFill(double)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Set all to val
<DT><A HREF="Tensor3d.html#setFill(double)"><B>setFill(double)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Set all to val
<DT><A HREF="Tensor1d.html#setTensor1d(int, int, Tensor1d)"><B>setTensor1d(int, int, Tensor1d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Set elements of this[s:e] from other[0:e-s]
<DT><A HREF="Tensor1d.html#setTensor1d(Range1d, Tensor1d)"><B>setTensor1d(Range1d, Tensor1d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Set elements of this[range] from other[0:len(range)]
<DT><A HREF="Tensor2d.html#setTensor2d(int, int, int, int, Tensor2d)"><B>setTensor2d(int, int, int, int, Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Set elements of this[s0:e0][s1:e1] from other[0:e0-s0][0:e1-s1]
<DT><A HREF="Tensor2d.html#setTensor2d(Range2d, Tensor2d)"><B>setTensor2d(Range2d, Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Set elements of this[s0:e0][s1:e1] from other[0:e0-s0][0:e1-s1]
<DT><A HREF="Tensor2d.html#setTensor2d(int, int, int, int, double[][])"><B>setTensor2d(int, int, int, int, double[][])</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Set elements of this[s0:e0][s1:e1] from other[0:e0-s0][0:e1-s1]
<DT><A HREF="Tensor3d.html#setTensor3d(int, int, int, int, int, int, Tensor3d)"><B>setTensor3d(int, int, int, int, int, int, Tensor3d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Set elements of this[s0:e0][s1:e1][s2:e2] from other[0:e0-s0][0:e1-s1][0:e2-s2]
<DT><A HREF="Tensor3d.html#setTensor3d(Range3d, Tensor3d)"><B>setTensor3d(Range3d, Tensor3d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Set elements of this[s0:e0][s1:e1][s2:e2] from other[0:e0-s0][0:e1-s1][0:e2-s2]
<DT><A HREF="Range1d.html#split()"><B>split()</B></A> - 
Method in class <A HREF="Range1d.html" title="class in ">Range1d</A>
<DD>Split in half r0 = [s,s+(e-s)/2) and r1 = [s+(e-s)/2,e)
<DT><A HREF="Range2d.html#split()"><B>split()</B></A> - 
Method in class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>Split each dimension
<DT><A HREF="Range3d.html#split()"><B>split()</B></A> - 
Method in class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>Split each dimension
<DT><A HREF="Tensor1d.html#sub(Tensor1d)"><B>sub(Tensor1d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>subtraction
<DT><A HREF="Tensor2d.html#sub(Tensor2d)"><B>sub(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Subtraction
<DT><A HREF="Tensor3d.html#sub(Tensor3d)"><B>sub(Tensor3d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Subtraction
<DT><A HREF="Function1d.html#summarize(int)"><B>summarize(int)</B></A> - 
Method in class <A HREF="Function1d.html" title="class in ">Function1d</A>
<DD>Mostly for debugging, print summary of coefficients,
        optionally printing the norm of each block
</DL>
<HR>
<A NAME="_T_"><!-- --></A><H2>
<B>T</B></H2>
<DL>
<DT><A HREF="Tensor1d.html" title="class in "><B>Tensor1d</B></A> - class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>.<DD>Tensor1d class implements one-dimensional tensor/vector operations<DT><A HREF="Tensor1d.html#Tensor1d(int)"><B>Tensor1d(int)</B></A> - 
Constructor for class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Construct a Tensor1d of length n filled with zeroes
<DT><A HREF="Tensor1d.html#Tensor1d(int, double)"><B>Tensor1d(int, double)</B></A> - 
Constructor for class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Construct a Tensor1d of length n filled with val
<DT><A HREF="Tensor1d.html#Tensor1d(double[])"><B>Tensor1d(double[])</B></A> - 
Constructor for class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Construct a Tensor1d from a 1-d array.
<DT><A HREF="Tensor2d.html" title="class in "><B>Tensor2d</B></A> - class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>.<DD>Tensor2d class implements two-dimensional tensor/matrix operations<DT><A HREF="Tensor2d.html#Tensor2d(int)"><B>Tensor2d(int)</B></A> - 
Constructor for class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Construct a Tensor2d of length n filled with zeroes
<DT><A HREF="Tensor2d.html#Tensor2d(int, double)"><B>Tensor2d(int, double)</B></A> - 
Constructor for class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Construct a Tensor2d of length n filled with zeroes
<DT><A HREF="Tensor2d.html#Tensor2d(int, int)"><B>Tensor2d(int, int)</B></A> - 
Constructor for class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Construct a Tensor2d of (n x m)  filled with zeroes
<DT><A HREF="Tensor2d.html#Tensor2d(int, int, double)"><B>Tensor2d(int, int, double)</B></A> - 
Constructor for class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Construct a Tensor2d of (n x m) filled with val
<DT><A HREF="Tensor2d.html#Tensor2d(double[][])"><B>Tensor2d(double[][])</B></A> - 
Constructor for class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Construct a Tensor2d from a 2-d array.
<DT><A HREF="Tensor3d.html" title="class in "><B>Tensor3d</B></A> - class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>.<DD>Tensor3d class implements three-dimensional tensor/matrix operations<DT><A HREF="Tensor3d.html#Tensor3d(int)"><B>Tensor3d(int)</B></A> - 
Constructor for class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Construct a Tensor3d of length n filled with zeroes
<DT><A HREF="Tensor3d.html#Tensor3d(int, double)"><B>Tensor3d(int, double)</B></A> - 
Constructor for class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Construct a Tensor3d of length n filled with zeroes
<DT><A HREF="Tensor3d.html#Tensor3d(int, int, int)"><B>Tensor3d(int, int, int)</B></A> - 
Constructor for class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Construct a Tensor3d of (d0 x d1 x d2) filled with zeroes
<DT><A HREF="Tensor3d.html#Tensor3d(int, int, int, double)"><B>Tensor3d(int, int, int, double)</B></A> - 
Constructor for class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Construct a Tensor3d of (d0 x d1 x d2) filled with val
<DT><A HREF="Tensor3d.html#Tensor3d(double[][][])"><B>Tensor3d(double[][][])</B></A> - 
Constructor for class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Construct a Tensor3d from a 3-d array.
<DT><A HREF="TwoScaleCoeffs.html" title="class in "><B>TwoScaleCoeffs</B></A> - class <A HREF="TwoScaleCoeffs.html" title="class in ">TwoScaleCoeffs</A>.<DD>Tabulation of the twoscale coefficients, and a routine to compute the
scaling functions (Legendre polyn scaled and shifted to the unit
interval) solely to make the 1d example standalone.<DT><A HREF="TwoScaleCoeffs.html#TwoScaleCoeffs()"><B>TwoScaleCoeffs()</B></A> - 
Constructor for class <A HREF="TwoScaleCoeffs.html" title="class in ">TwoScaleCoeffs</A>
<DD>&nbsp;
<DT><A HREF="MadFn1d.html#test1"><B>test1</B></A> - 
Static variable in class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>
<DD>gaussian with square normalized to 1
<DT><A HREF="MadFn1d.html#test2"><B>test2</B></A> - 
Static variable in class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>
<DD>superposition of multiple gaussians
<DT><A HREF="MadFn1d.html#test3"><B>test3</B></A> - 
Static variable in class <A HREF="MadFn1d.html" title="class in ">MadFn1d</A>
<DD>a more interesting (singular and oscillating) function
         ...
<DT><A HREF="Range1d.html#toString()"><B>toString()</B></A> - 
Method in class <A HREF="Range1d.html" title="class in ">Range1d</A>
<DD>&nbsp;
<DT><A HREF="Range2d.html#toString()"><B>toString()</B></A> - 
Method in class <A HREF="Range2d.html" title="class in ">Range2d</A>
<DD>&nbsp;
<DT><A HREF="Range3d.html#toString()"><B>toString()</B></A> - 
Method in class <A HREF="Range3d.html" title="class in ">Range3d</A>
<DD>&nbsp;
<DT><A HREF="Tensor1d.html#toString()"><B>toString()</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>convert Tensor1d to a String
<DT><A HREF="Tensor2d.html#toString()"><B>toString()</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>convert Tensor1d to a String
<DT><A HREF="Tensor3d.html#toString()"><B>toString()</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>convert Tensor3d to a String
<DT><A HREF="Tensor1d.html#transform(Tensor2d)"><B>transform(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor1d.html" title="class in ">Tensor1d</A>
<DD>Transform this by other.
<DT><A HREF="Tensor2d.html#transform(Tensor2d)"><B>transform(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Transform this by other.
<DT><A HREF="Tensor3d.html#transform(Tensor2d)"><B>transform(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Transform this by other.
<DT><A HREF="Tensor2d.html#transform_slow(Tensor2d)"><B>transform_slow(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Transform this by other.
<DT><A HREF="Tensor3d.html#transform_slow(Tensor2d)"><B>transform_slow(Tensor2d)</B></A> - 
Method in class <A HREF="Tensor3d.html" title="class in ">Tensor3d</A>
<DD>Transform this by other.
<DT><A HREF="Tensor2d.html#transpose()"><B>transpose()</B></A> - 
Method in class <A HREF="Tensor2d.html" title="class in ">Tensor2d</A>
<DD>Transpose
</DL>
<HR>
<A HREF="#_A_">A</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_I_">I</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_P_">P</A> <A HREF="#_Q_">Q</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> 

<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
