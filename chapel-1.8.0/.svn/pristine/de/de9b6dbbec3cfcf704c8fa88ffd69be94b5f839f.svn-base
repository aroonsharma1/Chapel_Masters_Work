performance: should not create a new array descriptor when declaring an array alias

Upon 'var B => A' (where A could be an array expression),
only the pointer assignment of A._value to B._value should be generated.

Right now B gets the result of A._value.newAlias()
(which includes a call to dsiReindex()).

Here are some issues to consider.

* As of now, the reference count needs to be incremented.

* If A is privatized, B should be, too. Basically, B should contain A's pid.

* In this scenario, A and B will share the same domain and distribution
descriptors.

* To achieve this, maybe all we need to do is change the definition
of _array.newAlias() ?
