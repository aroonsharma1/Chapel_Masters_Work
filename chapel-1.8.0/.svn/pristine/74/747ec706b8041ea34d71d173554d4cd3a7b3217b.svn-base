2013-02-14 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/benchmarks/mantevo/Makefile.am,
	  test/test_signal.c: these clean-locals seem to break distcheck;
	  also eliminate unused/superseded test

2013-02-14 14:16  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am: barrier.h need to be part of the
	  distribution

2013-02-14 13:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_feb.h, include/qt_syncvar.h, src/eurekas.c,
	  src/feb.c, src/syncvar.c: create lock-less versions of
	  feb/syncvar callback/iteration functions, specifically for eurekas

2013-02-14 11:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/log_arrivaldetector.c: avoid (the appearance
	  of) leaks

2013-02-14 10:54  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit c8b53206b650b55164ff42f88d670e5cd7fd528b Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Thu Feb 14 09:39:05 2013 -0700

2013-02-14 09:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: scribble length is wrong

2013-02-14 09:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/context.c, src/qthread.c: more sanity asserts

2013-02-14 09:54  Allan Porterfield <akp@bronto.europa.renci.org>

	* src/qthread.c: don't call kernel level MSR operation unless
	  running at RCRTOOL_LEVEL=2

2013-02-13 16:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: remove extraneous qt_team_profile()
	  function

2013-02-13 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/mpool.c: There appears to be some kind of bug in the TLS code
	  here; that or there is a bug in 32-bit TLS variables on some
	  platforms. Either way, the non-TLS version is just as fast
	  (sometimes faster) and a LOT cleaner.

2013-02-13 16:55  Allan Porterfield <akp@bronto.europa.renci.org>

	* include/qt_qthread_struct.h, src/barrier/feb.c,
	  src/barrier/sinc.c, src/interfaces/rose/xomp.c,
	  src/qloop.c, src/rcrtool/qt_rcrtool.c: d_struct.h -- fix ifdef
	  nesting -- omp affinity can exist outside rose extensions feb.c --
	  make some calls used in xomp external sinc.c  -- add some required
	  missing functions xomp.c -- fix for new barriers - start on getting
	  rcrtool to use correct number of threads qloop.c -- fix number of
	  software threads started for non-rcrtool runs -- future fix for rcr
	  runs qt_rcrtool.c -- cleanup

2013-02-13 11:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/shufflesheps.h: fix mindist detection bug

2013-02-13 11:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2.c: uncrustified

2013-02-13 11:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2.c: debugging printouts in libnumaV2

2013-02-13 10:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: silence a warning when spawncache is disabled

2013-02-12 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: work around variable
	  expansion in autoconf

2013-02-12 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: potentially a much faster way
	  of doing mfence on mic

2013-02-11 15:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: fix single-threaded shepherd behavior

2013-02-11 15:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/patterns/allpairs.c: use memory scribbling

2013-02-11 13:17  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: add an easy way to set debug flags:
	  --enable-debugging (beats fiddling with quotes on the command-line)

2013-02-11 13:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c: remove the appearance of a leak (found with
	  DUMA)

2013-02-11 12:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: cast to avoid problems with varargs

2013-02-11 11:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/qt_dictionary.c: destroy dictionary and iterators,
	  to remove the appearance of leaks

2013-02-11 10:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/mpool.c: this problem, as it turns out, is not APPLE-only

2013-02-11 10:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp.c, src/affinity/libnuma.c,
	  src/affinity/libnumaV2.c, src/affinity/tilera.c: respect the
	  assert condition in sort_sheps() - do not call it if nshepherds ==
	  1

2013-02-11 08:28  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 8680a28ace709cbb690b30d7b5f178086b0320c7 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Sun Feb 10 15:27:35 2013 -0700

2013-02-10 15:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: postpone late cleanup funcs even more

2013-02-10 15:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/mpool.c: misread the realloc man page

2013-02-10 13:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spawncache.c: need qt_atomics.h

2013-02-10 13:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: remove duma.h

2013-02-08 09:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/subteams.c: avoid the appearance of leaks by
	  deallocating the timer before exiting

2013-02-07 14:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/mpool.c: rework handling of thread-specific pool cache to
	  avoid leaking in most cases (only applies to using
	  compiler-intrinsic thread-local-data)

2013-02-07 14:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: move mpool subsystem initialization to after
	  figuring out how many threads there are/will-be

2013-02-07 13:58  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/barrier.c: destroy the timer, to avoid the
	  appearance of leaks

2013-02-07 13:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: formatting and labelling API_FUNC

2013-02-07 13:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: fix sinc memory leak (found by DUMA)

2013-02-07 13:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: fix a precond memory leak (found by DUMA)

2013-02-07 13:17  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 75d3ca2608fb9c2c0edfce95373c932ff0e15bbe Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Thu Feb 7 13:09:57 2013 -0700

2013-02-07 12:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/shepherds.c: revert bd00dfe09c2af0ecb23f7156dceb6b022afe4229;
	  this was the wrong solution (adds too much logic)

2013-02-07 12:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/shufflesheps.h: add a sort_sheps function, for
	  ordering AND randomizing within the order

2013-02-07 12:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/shepherds.c: optimize array references by caching distance in
	  local variable

2013-02-07 12:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c, src/eurekas.c, src/teams.c: uses qt_debug.h

2013-02-07 11:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hazardptrs.h, src/hazardptrs.c: compatibility with
	  DUMA (free gets macro'd to something else)

2013-02-07 10:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/syncvar_prodcons.c: wait on the consumer; that is the
	  last task

2013-02-07 10:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: avoid allocating an ADDRRES if there are no precond
	  tasks involved in a given feb

2013-02-07 09:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: fix FEB leak introduced by trying to be efficient with
	  precond spawns

2013-02-07 09:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_spawncache.h, src/spawncache.c: fix the O(P)
	  spawncache leak; bug found by DUMA

2013-02-06 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/shepherds.c: another very old logic bug found by DUMA

2013-02-06 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_templates.hpp: use a vector deallocator
	  (ancient bug found by DUMA)

2013-02-05 16:46  solivi <solivi@sandia.gov>

	* scripts/build.pl: remove loxley from rose test config

2013-02-06 11:31  Kyle <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4, configure.ac: Detect GCC
	  4.x minor versions, so that I can bonk when compiling with Apple
	  GCC 4.0 on PPC

2013-02-04 17:36  Dylan Stark <dylan.stark@gmail.com>

	* src/spr.c: Cleans up put and get handle intialization.

2013-02-04 15:24  solivi <solivi@sandia.gov>

	* scripts/build.pl: added extra config flags for rose in testing
	  script

2013-02-04 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: stricter testing

2013-02-04 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: add warning about Apple's 5658 compiler

2013-01-28 12:49  Dylan Stark <dylan.stark@gmail.com>

	* src/interfaces/chapel/Makefile.inc,
	  src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: Updates Chapel tasking
	  layer shim to work with current Chapel trunk.

2013-02-06 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/shepherds.c: another very old logic bug found by DUMA

2013-02-06 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_templates.hpp: use a vector deallocator
	  (ancient bug found by DUMA)

2013-02-06 11:50  Kyle <kbwheel@sandia.gov>

	* : commit e9527551100bc2710b0f817c35a157d42fef9c86 Author: Kyle
	  <kbwheel@sandia.gov> Date:   Wed Feb 6 11:31:09 2013 -0700

2013-02-05 16:46  solivi <solivi@sandia.gov>

	* scripts/build.pl: remove loxley from rose test config

2013-02-04 17:36  Dylan Stark <dylan.stark@gmail.com>

	* src/spr.c: Cleans up put and get handle intialization.

2013-02-04 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 4c9f4e6ec7ff363bdd85fb8cc46cd0e45c0e23e5 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Mon Feb 4 17:06:47 2013 -0700

2013-02-04 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: add warning about Apple's 5658 compiler

2013-02-04 15:24  solivi <solivi@sandia.gov>

	* scripts/build.pl: added extra config flags for rose in testing
	  script

2013-02-04 11:53  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 1bf8cf4a41c10c71133750dedded4aefdb19c695 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Sun Feb 3 15:35:17 2013 -0700

2013-01-28 12:49  Dylan Stark <dylan.stark@gmail.com>

	* src/interfaces/chapel/Makefile.inc,
	  src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: Updates Chapel tasking
	  layer shim to work with current Chapel trunk.

2013-01-30 08:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: fix eureka race condition that was causing
	  sporadic failures. I figured out on the plane that critical
	  sections were slightly unfinished - at the end of a critical
	  section, it needs to check whether a eureka occurred *during* the
	  critical section

2013-01-30 08:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: minor formatting change

2013-01-24 10:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix floating point exceptions due to incorrect
	  initialization of context when doing direct-swap

2013-01-23 15:41  Dylan Stark <dylan.stark@gmail.com>

	* src/net/net.c: Triggers clean exit for non-zero ranks.

2013-01-23 15:41  Dylan Stark <dylan.stark@gmail.com>

	* test/argparsing.h: Adds warning about silencing iprintf().

2013-01-23 15:39  Dylan Stark <dylan.stark@gmail.com>

	* test/multinode/spr_init.c: Add verbose check.

2013-01-23 08:37  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: support MPICC and MPICXX environment variables

2013-01-22 17:10  Dylan Stark <dstark@sandia.gov>

	* configure.ac: Makes not having MPI wrappers an error when
	  configuring with --with-multinode-runtime=mpi.

2013-01-22 16:52  Kyle Wheeler <kyle-envariable@memoryhole.net>

	* configure.ac: try to fix multinode-mpi setup

2013-01-18 08:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: protect spawncache access

2013-01-16 09:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: uncrustified

2013-01-16 09:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: properly initialize worker info when
	  nbshepherds has been specified

2013-01-16 09:15  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit b53d898a69802a78a9e7bd3cafab7c0c63a27c25 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Tue Jan 15 16:43:12 2013 -0700

2013-01-15 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit ed2ab6061824d09d05eaa107763570ab7b25d022 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Tue Jan 15 15:41:25 2013 -0700

2013-01-15 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: unparseable envariables is an unignorable
	  failure

2013-01-15 15:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: properly handle QT_WORKER_UNIT values that
	  are caches (actually COUNT the caches, what a concept!)

2013-01-15 15:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: more accurately reflect the
	  SHEPHERD_BOUNDARY default behavior

2013-01-15 11:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: direct-swap detects and handles new-task
	  limitation more gracefully

2013-01-15 11:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, include/qt_threadqueues.h,
	  src/qloop.c, src/qthread.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: basic direct-swap (only
	  works in limited circumstances, i.e. when the most recent thing in
	  the spawncache is a new task)

2013-01-15 08:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/rose_extensions.h,
	  src/interfaces/rose/xomp.c, src/qthread.c, src/workers.c: fix
	  ROSE/XOMP warnings

2013-01-13 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: pull rlimit code out into a macro (enhances code
	  readability)

2013-01-13 10:21  Kyle Wheeler <kbwheel@sandia.gov>

	* config/.gitignore: new autotools

2013-01-13 10:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_asserts.h: extra parens never hurt anyone

2013-01-13 10:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: deal with short writes in debug printouts
	  (this can be the case when debug output is piped to something else)

2013-01-10 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 8ea0d6e2b7eab2713ccd4388ccc10fd4b74054cd Author: Dylan
	  Stark <dstark@sandia.gov> Date:   Tue Jan 8 11:01:54 2013 -0700

2013-01-08 10:53  Dylan Stark <dstark@sandia.gov>

	* test/argparsing.h: Adds optional `SILENT_ARGPARSING` macro.  This disables printing of "ARG = VALUE" output.

2013-01-09 10:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/uts_tbb.cc,
	  test/benchmarks/uts/time_uts_tbb.cc: remove warnings by declaring
	  text strings as const

2013-01-08 16:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spr.c: some additional sanity checking

2013-01-08 15:09  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 4f5457ee5af10c88aafd32b4051795345b641d6c Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Tue Jan 8 15:07:47 2013 -0700

2013-01-08 10:04  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac, scripts/build.pl: lock_profile does not exist (how
	  long has this been the case?)

2013-01-07 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_halo_swap_all.c,
	  test/benchmarks/generic/time_stencil_feb.c,
	  test/benchmarks/generic/time_stencil_pre.c: update to use new
	  barrier api

2013-01-07 16:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/Makefile.am, test/features/barrier.c,
	  test/features/feb_barrier.c: test now has the appropriate name
	  (reflects api unification)

2013-01-07 16:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/feb_barrier.c: fix the way I use barriers to avoid
	  >n tasks being involved at any given instant

2013-01-07 15:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/barrier/sinc.c: enter with ID can be slightly more efficient

2013-01-04 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/barrier/feb.c: make feb barrier resizeable

2013-01-04 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_barrier.h, include/qt_qthread_struct.h,
	  include/qthread/Makefile.am, include/qthread/barrier.h,
	  include/qthread/feb_barrier.h,
	  include/qthread/sinc_barrier.h, src/Makefile.am,
	  src/barrier/feb.c, src/barrier/log.c, src/barrier/sinc.c,
	  src/interfaces/rose/xomp.c, src/qloop.c, src/qthread.c,
	  src/rcrtool/maestro_sched.c: unify sinc barriers into the barrier
	  api

2013-01-04 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac, src/Makefile.am, src/qthread.c: make choosing a
	  barrier style similar to the way other things work

2013-01-04 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/basics/Makefile.am,
	  test/benchmarks/Makefile.am,
	  test/benchmarks/mantevo/Makefile.am,
	  test/benchmarks/rose_bots/Makefile.am,
	  test/features/Makefile.am, test/multinode/Makefile.am,
	  test/stress/Makefile.am: avoid warnings on newer autoconf
	  versions

2013-01-04 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/barrier/feb.c, src/barrier/log.c,
	  src/interfaces/rose/xomp.c, src/qthread.c: allow to toggle back
	  and forth between log barrier and feb barrier

2013-01-04 15:38  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: duplicate check for function

2013-01-04 14:46  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac, include/Makefile.am, include/qt_barrier.h,
	  include/qt_feb_barrier.h, include/qthread/barrier.h,
	  src/Makefile.am, src/barrier.c, src/barrier/feb.c,
	  src/barrier/log.c, src/barrier/sinc.c, src/feb_barrier.c,
	  src/interfaces/rose/Makefile.inc,
	  src/interfaces/rose/log_arrivaldetector.c,
	  src/interfaces/rose/xomp.c, src/qthread.c,
	  src/sinc_barrier.c, test/features/Makefile.am,
	  test/features/feb_barrier.c: unify the barrier API

2013-01-04 14:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: new SYNCVAR initializer constants

2013-01-04 14:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spawncache.c: deal with unallocated spawncaches

2013-01-04 13:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: fix typo

2013-01-04 13:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: forgot the INIT statement

2013-01-04 13:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: gcc 4.7 seems to think that with the
	  cast, the initializer is no longer constant, and so cannot be used
	  for initialization of global values

2013-01-04 10:44  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit ac375219f3285b5ec5544542b3b647f801107022 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Fri Jan 4 10:44:36 2013 -0700

2013-01-04 10:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qloop.c, src/syncvar.c: use
	  compound-literals for static initialization, which makes them
	  applicable in all cases, rather than requiring a const variable
	  somewhere

2013-01-04 10:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/barrier.c: use static initializers for initialization

2013-01-02 14:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: rearrange parenthesis
	  to be more clear

2013-01-02 14:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: remove unused profiling value

2013-01-02 14:16  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.hpp: fix the way accumulate is called

2013-01-02 14:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mantevo/Makefile.am: make buildextra more
	  reliable

2013-01-02 14:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mantevo/hpccg/main.cpp: discover the correct
	  value of tcount

2013-01-02 14:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mantevo/hpccg/ddot.cpp: use dincr instead of
	  trying to manually reproduce it

2013-01-02 12:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/benchmarks/mantevo/Makefile.am,
	  test/benchmarks/mantevo/hpccg/Makefile.am,
	  test/benchmarks/mantevo/hpccg_openmp/Makefile.am,
	  test/benchmarks/rose_bots/Makefile.am: build and clean
	  mantevo/bots benchmarks properly

2013-01-02 11:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h,
	  src/threadqueues/sherwood_threadqueues.c: improve steal profiling

2013-01-02 10:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, src/threadqueues/sherwood_threadqueues.c: remove
	  the "disable workstealing" idea because it relies on the
	  scalability of broadcasting a cacheline invalidation

2013-01-02 10:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix state management of simple tasks

2013-01-02 10:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/stress/task_spawn.c: make it clearer in the output what is
	  going on

2013-01-02 10:03  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: better control of profiling options (no silently
	  ignoring mispelled options)

2012-12-20 10:45  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: fix minor compiler warning

2012-12-20 10:43  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit f6fd9662a58c65e927f7ade0e0e1e80166defe8e Author: Emily
	  Wheeler <kyle-envariable@memoryhole.net> Date:   Thu Dec 20
	  10:27:03 2012 -0600

2012-12-19 14:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: potential...

2012-12-19 11:01  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_eurekas.h, src/eurekas.c, src/qthread.c: TLS must be
	  manually initialized in order to be safely accessed from a signal
	  handler

2012-12-18 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: stack size issue, apparently

2012-12-17 17:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: more critical sections protecting printf

2012-12-17 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initialize task preconds value, because it is used
	  in a conditional later

2012-12-17 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spawncache.c: no need to use a void*

2012-12-17 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mantevo/Makefile.am: only build hpccg_openmp when
	  ROSE extensions are enabled

2012-12-17 14:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am: build lulesh as part of benchmark
	  build

2012-12-13 11:46  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 968bc1f837c579d35587b940da70684ead984514 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Thu Dec 13 11:46:33 2012 -0700

2012-12-13 13:13  Stephen Olivier <olivier@cs.unc.edu>

	* configure.ac, test/benchmarks/rose_lulesh/Makefile.am,
	  test/benchmarks/rose_lulesh/libxomp.h,
	  test/benchmarks/rose_lulesh/rose_lulesh.cpp: added ROSE/OpenMP
	  version of LuLesh to benchmarks

2012-12-13 09:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mantevo/hpccg_openmp/Makefile.am: fix link order
	  for hpccg_openmp

2012-12-13 09:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mantevo/Makefile.am: build hpccg_openmp as part
	  of the regular benchmarks build

2012-12-13 09:42  Kyle Wheeler <kbwheel@sandia.gov>

	*
	  test/benchmarks/mantevo/hpccg_openmp/rose_read_HPC_row.cp
	  p: fix minor compiler warning

2012-12-13 09:27  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 83eb0b18a42209f2613ac22cbbb233740580d152 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Thu Dec 13 09:24:18 2012 -0700

2012-12-13 09:22  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assert.m4: fix assert-checking in
	  cross-compile

2012-12-12 18:51  Stephen Olivier <olivier@mmq.hpc.renci.org>

	* configure.ac, include/qthread/omp_defines.h,
	  test/benchmarks/mantevo/hpccg_openmp/HPCCG.hpp,
	  test/benchmarks/mantevo/hpccg_openmp/HPC_Sparse_Matrix.hp
	  p, test/benchmarks/mantevo/hpccg_openmp/HPC_sparsemv.hpp,
	  test/benchmarks/mantevo/hpccg_openmp/Makefile.am,
	  test/benchmarks/mantevo/hpccg_openmp/compute_residual.hpp
	  , test/benchmarks/mantevo/hpccg_openmp/ddot.hpp,
	  test/benchmarks/mantevo/hpccg_openmp/exchange_externals.h
	  pp,
	  test/benchmarks/mantevo/hpccg_openmp/generate_matrix.hpp,
	  test/benchmarks/mantevo/hpccg_openmp/hpccg_openmp,
	  test/benchmarks/mantevo/hpccg_openmp/libxomp.h,
	  test/benchmarks/mantevo/hpccg_openmp/make_local_matrix.hp
	  p, test/benchmarks/mantevo/hpccg_openmp/mytimer.cpp,
	  test/benchmarks/mantevo/hpccg_openmp/mytimer.hpp,
	  test/benchmarks/mantevo/hpccg_openmp/read_HPC_row.hpp,
	  test/benchmarks/mantevo/hpccg_openmp/rose_HPCCG.cpp,
	  test/benchmarks/mantevo/hpccg_openmp/rose_HPC_sparsemv.cp
	  p,
	  test/benchmarks/mantevo/hpccg_openmp/rose_compute_residua
	  l.cpp,
	  test/benchmarks/mantevo/hpccg_openmp/rose_ddot.cpp,
	  test/benchmarks/mantevo/hpccg_openmp/rose_generate_matrix
	  .cpp, test/benchmarks/mantevo/hpccg_openmp/rose_main.cpp,
	  test/benchmarks/mantevo/hpccg_openmp/rose_read_HPC_row.cp
	  p, test/benchmarks/mantevo/hpccg_openmp/rose_waxpby.cpp,
	  test/benchmarks/mantevo/hpccg_openmp/waxpby.hpp: added OpenMP
	  version of HPCCG via ROSE

2012-12-11 10:01  Dylan Stark <dstark@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: Updates
	  chpl_task_getNumRunningTasks() to use new WORKER_OCCUPATION state.

2012-12-11 09:56  Dylan Stark <dstark@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: Updates
	  chpl_task_getNumQueuedTasks() to use new NODE_BUSYNESS state.

2012-12-11 09:50  Dylan Stark <dstark@sandia.gov>

	* src/qthread.c: Moves stack size info printing to after the guard
	  pages bump.

2012-12-10 16:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mantevo/hpccg/Makefile.am: use wallclock time,
	  not rusage, to time HPCCG runs

2012-12-10 12:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/qthread_readstate.c: fix NODE_BUSYNESS test, and
	  explain fix (spinner might be dequeued but not yet executing

2012-12-10 12:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mutexfifo_threadqueues.c: fix advisory_queuelen
	  handling

2012-12-10 11:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, src/spawncache.c: debug messages

2012-12-10 08:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: lf-febs only need a single hash

2012-12-08 10:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/Makefile.am, test/basics/qthread_readstate.c: should
	  test the output of qthread_readstate, at least minimally

2012-12-08 10:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: the "BUSYNESS" options make more sense when
	  including whether the worker is currently running something

2012-12-08 10:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: Define
	  WORKER_OCCUPATION as a state we can query.  Essentially, this
	  answers the question posed by Chapel: how many tasks are currently
	  executing? Of course, like all of these states, the answer is quite
	  possibly wrong, and even potentially VERY expensive to calculate,
	  but that's the risk you run when asking broad, over-arching
	  questions about a large dynamic system.

2012-12-08 07:31  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: lf-febs are not fast enough (~1% slower in
	  non-contended cases), and still seem to have some subtle race
	  conditions, so they should not be the default

2012-12-07 20:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: NODE_BUSYNESS

2012-12-07 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/multinode.h: whitespace

2012-12-07 16:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spr.c: copy and paste strikes again

2012-12-07 16:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/spr.h, src/spr.c: fix duplicate definition of
	  spr_get_handle_s and cast to call functions

2012-12-07 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/spr.h, include/spr_innards.h, src/spr.c: make the
	  handle data structures for spr opaque

2012-12-07 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/net/net.h: even more build fixes (happy birthday Kurtis)

2012-12-07 15:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/net/portals4/portals4.c: fix more warnings

2012-12-07 15:30  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit fa8631bcf49fb171f5d17728d8b53cb222123b53 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Fri Dec 7 15:29:11 2012 -0700

2012-12-07 10:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: use ASSERT_ONLY instead of DEBUG_ONLY

2012-12-07 10:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/barrier.c: fix compile now that initialization moved

2012-12-07 08:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c: shrink thread_state to
	  just the necessary number of bits

2012-12-07 08:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: stop being a coward: fix the actual
	  problem! Put t3 back in! (which I did)

2012-12-07 08:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: fix potential race condition on some schedulers...
	  probably the wrong solution, but shouldn't be a harmful solution

2012-12-07 08:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: add reserved flag placeholders

2012-12-07 08:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/lf_hashmap.c: remove technically inaccurate assertion

2012-12-06 12:56  alina.g.simion <alina.g.simion@gmail.com>

	* : commit e81d16258a278a5932684b3b7e47e5c704ecd6cc Author:
	  alina.g.simion <alina.g.simion@gmail.com> Date:   Thu Dec 6
	  12:55:39 2012 -0600

2012-12-06 11:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/net/net.c: missing qt_hash.h

2012-12-05 23:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/syncvar.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: uncrustification

2012-12-05 23:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_feb.h,
	  include/qt_filters.h, include/qt_syncvar.h,
	  include/qt_threadqueues.h, src/eurekas.c, src/feb.c,
	  src/syncvar.c, src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: making task-filter
	  stuff more readable through the use of an enum

2012-12-05 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: thankfully, this sleep() in the eureka
	  test appears unnecessary

2012-12-05 15:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: ditch the t3 variable; no good comes from
	  that (certain rare assassination race conditions exposed for
	  massively sharing the same return value)

2012-12-05 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: fix parent_eureka test on single-threaded
	  shepherds without specified homes, it relies on workstealing

2012-12-05 15:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: something wonky was
	  going on when using the NEMESIS dequeue in the filter; added a
	  similar function for use when the queue is guaranteed to be
	  single-access

2012-12-05 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: a little more info (shepherd id) in debug output

2012-12-05 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: uncrustified

2012-12-05 14:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fork_team_to macro

2012-11-29 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: update

2012-11-29 15:03  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: avoid expanding the API
	  in favor of convenience macros

2012-11-29 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit d266c3e9d15b521339ea2ad3f58fdce7d24b6285 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Thu Nov 29 14:28:07 2012 -0700

2012-11-29 14:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: fix a bug in filtering
	  logic

2012-11-29 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: use TLS_GET/TLS_SET macros

2012-11-29 14:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/syncvar.c: check for missed eurekas after waking
	  up from a synchronization operation

2012-11-29 09:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: misspelled this #ifdef; fixed qthread_flushsc

2012-11-29 09:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix debug-level setting via API

2012-11-28 10:48  Dylan Stark <dylan.stark@gmail.com>

	* include/qt_feb.h, include/qt_syncvar.h, src/feb.c,
	  src/syncvar.c: Makes qthread_{feb,syncvar}_callback() public API
	  function.

2012-11-27 16:11  Dylan Stark <dylan.stark@gmail.com>

	* src/interfaces/chapel/Makefile.inc: Cleans up non-multinode
	  Chapel compilation.

2012-11-26 16:54  alina.g.simion <alina.g.simion@gmail.com>

	* : commit ab55b7bc9418e66342c1068c273f5573f0d90d84 Author:
	  alina.g.simion <alina.g.simion@gmail.com> Date:   Mon Nov 26
	  16:52:40 2012 -0600

2012-11-26 13:49  Dylan Stark <dstark@sandia.gov>

	* include/qthread/qthread.h: Adds
	  qthread_fork_syncvar_copyargs_to() prototype.

2012-11-26 13:46  Dylan Stark <dstark@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: Adds syncvar header.

2012-11-26 13:44  Dylan Stark <dstark@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: Updates use of FEB
	  callback for new interface.

2012-11-26 10:27  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: even more obscure
	  compilers

2012-11-26 10:11  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: fix detection of EKOPath
	  compiler, which now masquerades as GCC

2012-11-26 09:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp.c, src/affinity/no.c,
	  src/affinity/plpa.c, src/affinity/tilera.c,
	  src/compat_atomics.c,
	  src/ds/dictionary/dictionary_trie.c, src/envariables.c,
	  src/eurekas.c, src/futurelib.c, src/hazardptrs.c,
	  src/net/net.c, src/net/portals4/portals4.c,
	  src/qthread.c, src/sinc_barrier.c,
	  src/syscalls/nanosleep.c, src/syscalls/usleep.c,
	  src/teams.c, src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c: sort out the use of
	  qassert and qt_asserts.h

2012-11-26 09:05  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assert.m4, configure.ac: check for a working
	  assert()

2012-11-26 07:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnuma.c: fix libnuma compile

2012-11-26 07:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, include/qthread_innards.h,
	  src/qloop.c: fix ROSE compile

2012-11-26 07:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: fix compile in single-threaded mode

2012-11-26 07:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/compat_atomics.c, src/qthread.c: fix compile in compat mode

2012-11-26 06:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_initialized.h,
	  include/qthread_innards.h, src/eurekas.c, src/feb.c,
	  src/feb_barrier.c, src/qloop.c, src/shepherds.c,
	  src/syncvar.c, src/teams.c, src/workers.c: qt_initialized.h

2012-11-26 06:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_affinity.h, src/affinity/hwloc.c,
	  src/affinity/lgrp.c, src/affinity/libnuma.c,
	  src/affinity/libnumaV2.c, src/affinity/mach.c,
	  src/affinity/no.c, src/affinity/plpa.c,
	  src/affinity/tilera.c,
	  src/ds/dictionary/dictionary_simple.c, src/feb_barrier.c,
	  src/interfaces/chapel/comm-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.c, src/net/net.c,
	  src/qthread.c, src/sinc_barrier.c, src/spr.c,
	  src/sst/futurelib-sst.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: a little more header
	  cleanup

2012-11-26 06:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: header organization

2012-11-26 06:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: header organization

2012-11-26 06:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/feb.c, src/qthread.c,
	  src/syncvar.c: move LOCKING_STRIPES to a more appropriate
	  location (the feb subsystem)

2012-11-26 06:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: qthread_innards.h unnecessary

2012-11-26 06:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/sinc_barrier.h: API_FUNC should not be used in
	  installed headers

2012-11-26 06:00  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 780fdff4b76fdccbedadb88c6e72c62853638d37 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Mon Nov 26 06:00:39 2012 -0700

2012-11-25 11:56  Kyle Wheeler <kyle-envariable@memoryhole.net>

	* test/features/.gitignore: ignore eureka binary

2012-11-25 06:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2.c: libnumaV2 requires asserts

2012-11-24 14:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/barrier.c, src/feb_barrier.c,
	  src/interfaces/rose/Makefile.inc, src/qt_barrier.c,
	  src/qt_feb_barrier.c, src/qt_sinc_barrier.c,
	  src/sinc_barrier.c: rename barrier source files, to make more
	  consistent sense

2012-11-24 13:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c, src/qloop.c,
	  src/qt_sinc_barrier.c, src/rcrtool/maestro_sched.c: 
	  qt_sinc_barrier.h rename

2012-11-24 07:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am,
	  include/qthread/qt_sinc_barrier.h,
	  include/qthread/sinc_barrier.h: skip the qt_ prefix on headers in
	  the qthread directory

2012-11-21 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac: better distcheck options

2012-11-21 18:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: add rose_sinc_barrier.h

2012-11-21 16:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/hashmap.c, src/qt_c_hash.c: rename
	  qt_c_hash.c to hashmap.c

2012-11-21 16:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/lf_hashmap.c, src/qt_lf_hash.c: rename
	  qt_lf_hash.c to lf_hash.c

2012-11-21 16:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/mpool.c, src/qt_mpool.c: rename qt_mpool.c
	  file to mpool.c

2012-11-21 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_feb.h,
	  include/qt_internal_feb.h, include/qt_internal_syncvar.h,
	  include/qt_syncvar.h, src/eurekas.c, src/feb.c,
	  src/interfaces/chapel/tasks-qthreads.c, src/qthread.c,
	  src/syncvar.c: rename qt_internal_*.h headers to be more sensible

2012-11-21 15:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_profiling.h, src/feb.c, src/syncvar.c: fix compile
	  when threadc profiling is turned on

2012-11-21 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_output_macros.h,
	  src/qthread.c: spin output macros off into their own header file

2012-11-21 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix the argument type

2012-11-21 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: uncrustified

2012-11-21 15:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/syncvar.c: move syncvar
	  datastructures out of qlib

2012-11-21 15:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use the syncvar callback function

2012-11-21 15:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: internal variables can be static

2012-11-21 15:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: need the syncvar header

2012-11-21 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/qthread.c, src/syncvar.c: syncvar/feb startup
	  shutdown contained

2012-11-21 15:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_internal_feb.h, include/qt_internal_syncvar.h,
	  src/feb.c, src/qthread.c, src/syncvar.c: start moving syncvars to
	  be self-contained

2012-11-21 15:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_internal_feb.h, include/qthread_innards.h,
	  src/eurekas.c, src/feb.c: move FEB datastructures entirely into
	  feb.c (and out of qlib); avoid unnecessary pointer dereferences

2012-11-21 11:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_internal_feb.h, src/feb.c,
	  src/interfaces/chapel/tasks-qthreads.c, src/qthread.c: reduce the
	  exposure of FEB data hashes

2012-11-21 10:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_feb_barrier.h,
	  include/qthread/feb_barrier.h, include/qthread_innards.h,
	  src/qt_feb_barrier.c, src/qthread.c: move
	  qt_feb_barrier_internal_init() to its own internal header

2012-11-21 10:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove unused functions

2012-11-21 10:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: remove unused function declarations

2012-11-21 09:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: remove stray comment

2012-11-21 09:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_spawn_macros.h,
	  include/qthread_innards.h, src/interfaces/rose/xomp.c,
	  src/qthread.c: removing more internal fork/spawn convenience
	  functions in favor of macros over qthread_spawn()

2012-11-21 09:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/futurelib.c, src/qthread.c: make
	  futurelib use qthread_spawn directly, instead of calling proxy
	  functions

2012-11-21 09:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/futurelib.c,
	  src/qthread.c, src/sst/futurelib-sst.c,
	  src/sst/qthread-sst.c: remove qthread_fork_future_to in favor of
	  directly calling qthread_spawn

2012-11-21 09:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, include/qthread_innards.h,
	  src/ds/qarray.c: move shep_to_node to a more rational include
	  file

2012-11-21 09:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: use qt_qthread_mgmt.h
	  since I need to free qthread_t's

2012-11-21 09:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, src/sst/qthread-sst.c: remove
	  qthread_assertnotfuture

2012-11-21 09:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/futurelib.c,
	  src/qthread.c, src/sst/futurelib-sst.c,
	  src/sst/qthread-sst.c: remove qthread_isfuture() in favor of
	  being direct

2012-11-21 09:14  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: qthread_thread_free() was moved

2012-11-21 09:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/futurelib.c,
	  src/qthread.c, src/sst/futurelib-sst.c,
	  src/sst/qthread-sst.c: remove qthread_assertnotfuture()

2012-11-21 09:01  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_eurekas.h,
	  include/qt_qthread_mgmt.h, include/qt_subsystems.h,
	  include/qthread_innards.h, src/affinity/hwloc.c,
	  src/affinity/lgrp.c, src/affinity/libnuma.c,
	  src/affinity/libnumaV2.c, src/eurekas.c, src/feb.c,
	  src/hazardptrs.c, src/io.c, src/net/net.c,
	  src/qt_feb_barrier.c, src/qt_lf_hash.c, src/qt_mpool.c,
	  src/qthread.c, src/shepherds.c, src/spawncache.c,
	  src/syncvar.c, src/syscalls/accept.c,
	  src/syscalls/connect.c, src/syscalls/nanosleep.c,
	  src/syscalls/poll.c, src/syscalls/pread.c,
	  src/syscalls/pwrite.c, src/syscalls/read.c,
	  src/syscalls/select.c, src/syscalls/sleep.c,
	  src/syscalls/system.c, src/syscalls/user_defined.c,
	  src/syscalls/usleep.c, src/syscalls/wait4.c,
	  src/syscalls/write.c, src/teams.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c, src/touch.c: 
	  straightening out qthread_innards.h, trying to make it less of a
	  catch-all

2012-11-21 07:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_prefetch.h,
	  include/qthread_prefetch.h, src/fastcontext/context.c,
	  src/qt_c_hash.c, src/qthread.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: rename
	  qthread_prefetch.h to be more consistent with include file naming

2012-11-21 07:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_expect.h,
	  include/qthread_expect.h, src/qloop.c, src/qt_mpool.c,
	  src/qthread.c, src/sincs/donecount.c,
	  src/sincs/donecount_cas.c, src/sincs/snzi.c, src/teams.c,
	  src/threadqueues/sherwood_threadqueues.c: rename qthread_expect.h
	  to be more consistent with include file naming

2012-11-21 07:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_asserts.h,
	  include/qt_debug.h, include/qt_threadqueue_stack.h,
	  include/qthread_asserts.h, include/qthread_innards.h,
	  src/affinity/mach.c, src/aligned_alloc.c,
	  src/ds/dictionary/dictionary_shavit.c,
	  src/ds/dictionary/dictionary_simple.c, src/ds/qarray.c,
	  src/ds/qdqueue.c, src/ds/qlfqueue.c, src/ds/qpool.c,
	  src/interfaces/rose/log_arrivaldetector.c, src/io.c,
	  src/patterns/allpairs.c, src/patterns/wavefront.c,
	  src/qalloc.c, src/qloop.c, src/qt_barrier.c,
	  src/qt_c_hash.c, src/qt_feb_barrier.c, src/qt_lf_hash.c,
	  src/qt_mpool.c, src/qt_sinc_barrier.c,
	  src/qtimer/gettime.c, src/qutil.c,
	  src/rcrtool/qt_rcrtool.c, src/shepherds.c,
	  src/sincs/donecount.c, src/sincs/donecount_cas.c,
	  src/sincs/original.c, src/sincs/snzi.c, src/spawncache.c,
	  src/spr.c, src/syscalls/accept.c, src/syscalls/connect.c,
	  src/syscalls/nanosleep.c, src/syscalls/poll.c,
	  src/syscalls/pread.c, src/syscalls/pwrite.c,
	  src/syscalls/read.c, src/syscalls/select.c,
	  src/syscalls/sleep.c, src/syscalls/system.c,
	  src/syscalls/user_defined.c, src/syscalls/usleep.c,
	  src/syscalls/wait4.c, src/syscalls/write.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c, src/workers.c: rename
	  qthread_asserts.h to be more consistent with include file naming

2012-11-20 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  test/features/eureka.c: this should fix the eureka tests for
	  these other schedulers

2012-11-20 17:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c: spreading the new macros

2012-11-20 17:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c: use new cond macros

2012-11-20 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, src/io.c,
	  src/threadqueues/nemesis_threadqueues.c: use macros, and adjust
	  pthread_cond_wait usage to work with eurekas

2012-11-20 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: use pre-fab macro

2012-11-16 13:27  alina.g.simion <alina.g.simion@gmail.com>

	* src/qthread.c: Interface function for user custom agg and const
	  functions

2012-11-15 22:30  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.ac, configure.in: stop the autoconf warnings

2012-11-15 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: the agg stuff does too
	  much allocation and deallocation to leave in the critical path

2012-11-15 16:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/teams.c: correct ifdef for unpooled operation

2012-11-15 15:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_teams.h, src/qthread.c, src/teams.c: fix subteams bug
	  introduced by b88a3254db894317e8cf97eb7744e48f4b93b1d0

2012-11-15 10:12  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 1df7503702229d3957718a3be94fc33292c11df6 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Thu Nov 15 10:10:47 2012 -0700

2012-11-14 19:16  alina.g.simion <alina.g.simion@gmail.com>

	* src/qthread.c: Add missing method lost in merge

2012-11-14 17:31  alina.g.simion <alina.g.simion@gmail.com>

	* : commit edc7e7c2acfa561dd44b6664a8523539afc03ed8 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Wed Nov 14 09:48:12 2012 -0700

2012-11-14 09:37  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_team_eureka.3: document
	  qt_team_eureka()

2012-11-14 09:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/eurekas.c: qt_team_eureka() should
	  return void

2012-11-14 09:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/teams.c: remove unnecessary function call

2012-11-14 09:04  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_team_id.3,
	  man/man3/qt_team_parent_id.3: document qt_team_parent_id

2012-11-14 09:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix the parent team tagging

2012-11-14 08:50  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am: install qt_team_id man page

2012-11-13 12:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, man/man3/qt_team_id.3,
	  src/teams.c: standardize behavior of qt_team_id()

2012-11-13 12:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: folding

2012-11-13 12:19  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_teams.h, include/qthread/qthread.h,
	  src/teams.c, test/basics/test_subteams.c,
	  test/basics/test_teams.c: ditch qt_team_id_t in order to mimic
	  qthread_id() semantics

2012-11-13 07:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: more testing

2012-11-12 11:19  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_qthread_mgmt.h,
	  include/qt_teams.h, src/Makefile.am, src/eurekas.c,
	  src/qthread.c, src/teams.c: move team and eureka functions into
	  more appropriate and/or specific files

2012-11-08 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: be (slightly) more verbose in errors

2012-11-08 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4: fix cmpxchg16b detection; I was
	  doing the alignment wrong

2012-11-07 13:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mtsfifo_threadqueues.c: eurekas work with
	  mtsfifo

2012-11-07 13:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: properly identify second parent

2012-11-07 13:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h, src/eurekas.c: signal-handler-safe
	  asserts

2012-11-07 13:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: ASSERT_ONLY()

2012-11-07 11:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: some more handy debug printouts

2012-11-07 11:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: no assassinating the real mccoy

2012-11-06 09:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: tidy and clean up management of the "current"
	  pointer

2012-11-06 09:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/eurekas.c: might as well make the assumption explicit

2012-11-06 08:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c: move runtime barrier
	  pointer into the runtime data section (keep qthread_t down to a
	  cacheline)

2012-11-05 11:46  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 061f698ef4ead1df3295d353d464f878590499af Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Mon Nov 5 11:44:45 2012 -0700

2012-11-05 11:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_teams.h: Include the right header for building on
	  linux

2012-11-05 10:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: eurekas work with
	  nemesis

2012-11-05 10:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mutexfifo_threadqueues.c: remove old,
	  unnecessary code

2012-11-05 10:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_eurekas.h, src/eurekas.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: extend eureka api for
	  scheduler safety

2012-11-05 10:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_eurekas.h,
	  src/Makefile.am, src/eurekas.c, src/qthread.c,
	  src/threadqueues/sherwood_threadqueues.c: move eurekas into a
	  self-contained file

2012-11-05 10:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, include/qt_teams.h: relocate the
	  teams stuff to make more sense, organizationally

2012-11-02 10:44  Allan Porterfield <akp@jill.hpc.renci.org>

	* src/interfaces/rose/xomp.c, src/qloop.c,
	  src/threadqueues/loxley_threadqueues.c: fixing typos changing
	  OpenMP startup to go though fork to allow back_to_master to work
	  correctly add qthread_yield after fork to prevent extra timeout in
	  every OpenMP parallel loop fix off by one errors in nested barriers

2012-11-01 16:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, src/threadqueues/sherwood_threadqueues.c: sherwood
	  stealing now behaves itself around eurekas

2012-11-01 12:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c: mutexfifo now supports
	  eurekas; and eurekas can now be deferred to some limited degree by
	  the scheduler (does not yet work in a work-starved situation)

2012-11-01 07:44  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/eureka.c: one more status printout

2012-11-01 07:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: initial eureka support;
	  needs work dealing with partially de-queued tasks during the eureka
	  moment

2012-11-01 07:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove eureka printfs

2012-10-31 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 73569d06a98c84e8f3d91958fb001c1db2895afc Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Wed Oct 31 15:49:05 2012 -0600

2012-10-31 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, test/features/eureka.c: eurekas for
	  single-threaded shepherds

2012-10-31 15:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: do not compile
	  qt_threadqueue_enqueue_cache() when spawncache is disabled

2012-10-31 15:24  Dylan Stark <dylan.stark@gmail.com>

	* src/qthread.c: Removes leftover printf().

2012-10-31 15:17  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit eea4570dc0521d296f9f4d4e73f135cff05dd98e Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Wed Oct 31 15:16:58 2012 -0600

2012-10-30 09:18  Dylan Stark <dylan.stark@gmail.com>

	* src/interfaces/chapel/comm-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.c: Adds initial profiling
	  support for Chapel interface.

2012-10-29 16:05  Dylan Stark <dylan.stark@gmail.com>

	* configure.in: Adds configuration support for SPR and Chapel
	  profiling.

2012-10-31 10:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: intercepted

2012-10-31 10:07  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: Eureka announcement

2012-10-31 10:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: making the watcher clean the team should actually
	  be quite simple... right?

2012-10-31 09:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: destroy blocked tasks

2012-10-31 09:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: folding markers

2012-10-31 09:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: handle syncvars in feb printing callbacks

2012-10-31 08:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove redundant code

2012-10-30 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_spawncache.h, include/qt_threadqueues.h,
	  src/qthread.c, src/spawncache.c,
	  src/threadqueues/sherwood_threadqueues.c: eureka can now filter
	  the spawncache

2012-10-30 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* .gitignore: ignore duplicate swap files

2012-10-30 14:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, include/qthread/qthread.h,
	  src/qthread.c, test/features/eureka.c: support for critical
	  sections (including nested support); this makes it possible to do
	  things like printf() inside eureka-able code, as long as printf is
	  appropriately protected

2012-10-30 14:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: this debug line should ALWAYS be printed

2012-10-29 14:40  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit af05ec6d29c19797f1a98b00d58c7477dcd28466 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Thu Oct 25 09:41:06 2012 -0600

2012-10-24 16:44  Kyle Wheeler <kyle-envariable@memoryhole.net>

	* autogen.sh, configure.in: backwards compatibility with old
	  versions of libtool (i.e. older than 1.9b)

2012-10-24 12:23  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 35dcda672830bbe2dd017afe5340bb778a3c18f5 Merge: e6992d3
	  8d80b1c Author: Allan Porterfield <akp@bronto.europa.renci.org>
	  Date:   Mon Oct 22 16:10:28 2012 -0400

2012-10-22 15:52  Allan Porterfield <akp@jill.hpc.renci.org>

	* src/qloop.c, src/rcrtool/maestro_sched.c: fixing problems nesting
	  counting barriers

2012-10-22 09:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: fix nemesis compile

2012-06-22 15:47  Dylan Stark <dylan.stark@gmail.com>

	* configure.in, include/net/net.h, include/qt_debug.h,
	  include/qthread/multinode.h, include/qthread/spr.h,
	  include/spr_innards.h,
	  src/interfaces/chapel/Makefile.inc,
	  src/interfaces/chapel/chpl-comm-heap-macros.h,
	  src/interfaces/chapel/comm-qthreads.c,
	  src/interfaces/chapel/comm-qthreads.h,
	  src/interfaces/chapel/tasks-qthreads.c, src/net/net.c,
	  src/net/portals4/portals4.c, src/spr.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  test/multinode/Makefile.am,
	  test/multinode/env_qthread_initialize.c,
	  test/multinode/qthread_fork_remote.c,
	  test/multinode/spawn.c: Starts off chapel comm shim.

2012-10-17 11:24  Allan Porterfield <akp@bronto.europa.renci.org>

	* src/qloop.c: fix compile problem with rose and not RCRtool

2012-10-16 15:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_teams.h, src/qthread.c: use
	  macros to name signals

2012-10-16 15:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, test/features/eureka.c: Eurekas can now filter the
	  threadqueue

2012-10-16 15:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h,
	  src/threadqueues/sherwood_threadqueues.c: add a
	  threadqueue_filter function

2012-10-16 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: pull assassination into
	  its own function, so that tasks can be assassinated from elsewhere

2012-10-16 13:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: formatting

2012-10-16 12:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: warning to remember to implement this

2012-10-16 12:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c,
	  test/features/eureka.c: Eureka progress; now correctly destroys
	  actively running tasks and occupies the task-leader position.

2012-10-16 12:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: new task/team flags for convenience

2012-10-16 12:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: enable resetting sincs with outstanding
	  submits (useful for teams)

2012-10-16 10:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_spawncache.h, include/qt_threadqueues.h,
	  include/qthread/qthread.h, src/qthread.c,
	  src/spawncache.c,
	  src/threadqueues/sherwood_threadqueues.c: create the ability to
	  flush the spawncache

2012-10-16 11:53  Allan Porterfield <akp@jill.hpc.renci.org>

	* src/interfaces/rose/xomp.c: fix merge warning

2012-10-16 11:49  Allan Porterfield <akp@bronto.europa.renci.org>

	* : commit bdf5a74d7885bc1c7805ace146c9a58df83a5d65 Author: Allan
	  Porterfield <akp@jill.hpc.renci.org> Date:   Tue Oct 16 11:44:57
	  2012 -0400

2012-10-12 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/features/Makefile.am, test/features/eureka.c,
	  test/test_signal.c: Begin qt_team_eureka() implementation

2012-10-11 17:55  alina.g.simion <alina.g.simion@gmail.com>

	* : commit 174020b31d3e7b7732401a96d35d542c540547d4 Author:
	  alina.g.simion <alina.g.simion@gmail.com> Date:   Thu Oct 11
	  17:54:55 2012 -0500

2012-10-11 15:52  Allan Porterfield <akp@jill.hpc.renci.org>

	* include/maestro_sched.h, include/rose_sinc_barrier.h,
	  include/rose_xomp.h, src/Makefile.am,
	  src/interfaces/rose/xomp.c, src/qloop.c, src/qthread.c,
	  src/rcrtool/common_rcrtool.c,
	  src/rcrtool/maestro_sched.c, src/sincs/donecount.c,
	  src/threadqueues/loxley_threadqueues.c: update in middle of
	  moving to git

2012-10-09 13:04  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 36a17eba7e54d9a13b6dfb588f89f351a479588e Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Tue Oct 9 13:04:17 2012 -0600

2012-10-09 13:03  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: fix libtool version detection

2012-10-09 12:29  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 3885a603de62e47fb6c19515cf1d91aaa7758ee0 Author: Kyle
	  Wheeler <kbwheel@sandia.gov> Date:   Tue Oct 9 12:27:31 2012 -0600

2012-10-09 06:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/gettime.c: fix ts variable name

2012-10-08 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/mach.c: Forgot to include unistd.h on mach

2012-10-08 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qthread/qtimer.h,
	  src/interfaces/rose/xomp.c, src/qtimer/altix.c,
	  src/qtimer/gethrtime.c, src/qtimer/gettime.c,
	  src/qtimer/gettimeofday.c, src/qtimer/mach.c: provide two new
	  qtimer functions (wtime and res) to provide portable access to
	  omp_get_wtime and omp_get_wtick behavior

2012-10-08 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/.gitignore: in-tree build cruft

2012-10-08 11:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: revert revision 9a0c000dc9da; misdiagnosed bug

2012-10-06 15:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: this rephrasing works better with certain broken
	  optimizers

2012-10-06 15:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/qt_loop_queue.c: more useful verbose output

2012-10-06 06:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h, src/fastcontext/asm.S: fix
	  32-bit fastcontext

2012-10-05 15:11  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: stack alignment should be
	  configurable (and used for the first master stack)

2012-10-04 13:20  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS, include/qthread/qthread.h: distinguish from 1.8.1

2012-10-03 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4, configure.in: workaround
	  Apple compiler bug

2012-10-03 12:42  Dylan Stark <dylan.stark@gmail.com>

	* : commit 01cf29ae5f2033d857565a22c73242258615ec8a Author: Dylan
	  Stark <dylan.stark@gmail.com> Date:   Wed Oct 3 12:42:11 2012 -0600

2012-10-03 12:41  Dylan Stark <dylan.stark@gmail.com>

	* src/envariables.c: Adds check_info().

2012-10-03 12:41  Dylan Stark <dylan.stark@gmail.com>

	* src/qthread.c: Fixes bug in computing which shepherd to spawn to
	  next.

2012-10-03 09:04  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog: new git Changelog

2012-10-03 09:04  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: 1.8.1 news

2012-10-03 09:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: more detailed output from
	  blockreport

2012-10-02 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* AUTHORS: Dylan was missing~

2012-10-02 16:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more info in the warning

2012-10-02 15:03  Dylan Stark <dylan.stark@gmail.com>

	* autogen.sh: deal with EVEN MORE weird autotool setups

2012-10-02 14:30  Dylan Stark <dylan.stark@gmail.com>

	* src/interfaces/chapel/tasks-qthreads.c: Updates chapel
	  initialization.

2012-10-02 14:30  Dylan Stark <dylan.stark@gmail.com>

	* include/qt_envariables.h, src/envariables.c: Adds
	  qt_internal_unset_envstr().

2012-10-02 10:06  Kyle Wheeler <kbwheel@sandia.gov>

	* : commit 8caf4c8f2198cb893fd95fd1150cc0542bb86075 Author: Allan
	  Porterfield <akp@jill.hpc.renci.org> Date:   Mon Oct 1 16:26:20
	  2012 -0400

2012-09-26 13:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h, src/fastcontext/asm.S: x86
	  context swap can be EVEN CHEAPER

2012-09-25 08:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: Cleanup per Brad's
	  suggestion

2012-09-25 08:40  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: chop the spaces

2012-09-20 10:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: first-pass at blockreport

2012-09-20 10:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_internal_feb.h, src/qthread.c: preliminary callback
	  over all tasks blocked on FEBs

2012-09-19 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/Makefile.inc: fix incorrect elision of
	  include path

2012-09-18 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/cxx_qt_loop.cpp,
	  test/features/cxx_qt_loop_balance.cpp: clang doesnt like me

2012-09-24 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/tilera.c: fix for using MALLOC macro

2012-09-24 14:12  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh, configure.in: still need to support CentOS 5.8

2012-09-24 14:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/Makefile.am: unnecessary simple expansion

2012-09-24 14:11  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_tls.m4: unnecessary AS_CASE dependency

2012-09-19 08:05  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: fix bash compatibility

2012-09-18 20:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: uncrustified

2012-09-18 20:58  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4, configure.in: detect
	  version of gcc

2012-09-18 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: avoid version generation if git is unavailable

2012-09-18 20:14  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_tls.m4: avoid obsolete macros

2012-09-18 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/interfaces/chapel/Makefile.inc,
	  src/interfaces/chapel/tasks-qthreads.c: Michael's patch to work
	  with updated chapel setup (why did it work before?)

2012-09-18 07:06  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: fewer programs

2012-09-13 19:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/qt_dictionary.c: silence

2012-09-14 09:33  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_qt_loopaccums.c,
	  test/benchmarks/uts/time_uts_sinc.c: fix compiler warnings wrt
	  newer qt_accum_f definition

2012-09-14 09:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/thesis/time_qutil_qsort.c: add code to calculate
	  and display the size of the array being sorted

2012-09-13 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: more understandable versioning

2012-09-13 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/.gitignore, test/benchmarks/.gitignore,
	  test/benchmarks/mantevo/hpccg/.gitignore,
	  test/features/.gitignore, test/stress/.gitignore,
	  test/utils/rng/.gitignore: more ignores

2012-09-13 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* .gitignore, include/qthread/.gitignore, src/.gitignore: more
	  ignores

2012-09-13 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: update for working with git

2012-09-13 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* .gitignore, config/.gitignore, include/.gitignore: some ignores

2012-09-12 20:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2.c: I misunderstood some of the argument
	  types here... this should clean up some error messages that get
	  generated

2012-09-12 14:38  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: I *want* this to work, so its now the default, so
	  that the corner-cases will itch enough to be fixed before 1.8.1 is
	  released. ... how's that for a commit message? :)

2012-09-12 14:32  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: prepping for the next release

2012-09-12 14:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: track 1.8

2012-09-11 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/utils/rng/Makefile.am: missed CLEANFILES (why is this
	  necessary???)

2012-09-11 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/utils/Makefile.am, test/utils/rng/Makefile.am: test library
	  done the right way (took long enough to figure out)

2012-09-11 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: nix the faux russian accent

2012-09-11 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: fix an index width issue

2012-09-11 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix dincr on sparcv9 32-bit

2012-09-11 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: avoid recalculating

2012-09-11 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: preparing for 1.8

2012-09-11 18:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: update DIST_SUBDIRS for multinode

2012-09-10 17:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: remove printfs

2012-09-06 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: faster qt_loop_simple

2012-09-06 16:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix qt_loop_simple

2012-09-06 15:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: use ret-sinc

2012-09-06 15:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c, test/features/Makefile.am: simplify qt_loop
	  internals with qthread_spawn()

2012-09-05 22:23  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: include in dist tarball

2012-09-05 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* README.affinity: promised documentation

2012-09-05 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/spawn_parallel_qthreads.c: try out
	  qt_loop_simple

2012-09-05 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c,
	  test/features/Makefile.am, test/features/qt_loop_simple.c: 
	  qt_loop_simple

2012-09-05 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_hwloc.m4: more output; check for the
	  function I actually use

2012-09-05 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: more stuff should be protected by
	  HWLOC_DISTS ifdef

2012-09-05 20:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: paranoia

2012-09-05 20:52  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: paranoia toggle

2012-09-05 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: fix incr behavior in some slightly broken compilers
	  (I'm looking at you, clang)

2012-09-05 20:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/Makefile.am: fix non-multinode build

2012-09-04 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: more intelligence vis-a-vis aclocal

2012-09-04 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qthread/spr.h,
	  include/spr_innards.h, test/benchmarks/Makefile.am: more
	  packaging fixes

2012-09-04 16:56  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, configure.in, test/Makefile.am,
	  test/multinode/Makefile.am: fix multinode test building

2012-09-04 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/net/net.c: fix unused arg warning

2012-09-04 16:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spr.c: uncrustify, and fix compiler warnings

2012-08-30 14:23  Kyle Wheeler <kbwheel@sandia.gov>

	* COPYING, configure.in, test/benchmarks/Makefile.am,
	  test/benchmarks/mantevo/Makefile.am,
	  test/benchmarks/mantevo/hpccg/HPCCG.cpp,
	  test/benchmarks/mantevo/hpccg/HPCCG.hpp,
	  test/benchmarks/mantevo/hpccg/HPC_Sparse_Matrix.hpp,
	  test/benchmarks/mantevo/hpccg/HPC_sparsemv.cpp,
	  test/benchmarks/mantevo/hpccg/HPC_sparsemv.hpp,
	  test/benchmarks/mantevo/hpccg/Makefile.am,
	  test/benchmarks/mantevo/hpccg/README,
	  test/benchmarks/mantevo/hpccg/VERSION,
	  test/benchmarks/mantevo/hpccg/compute_residual.cpp,
	  test/benchmarks/mantevo/hpccg/compute_residual.hpp,
	  test/benchmarks/mantevo/hpccg/ddot.cpp,
	  test/benchmarks/mantevo/hpccg/ddot.hpp,
	  test/benchmarks/mantevo/hpccg/exchange_externals.cpp,
	  test/benchmarks/mantevo/hpccg/exchange_externals.hpp,
	  test/benchmarks/mantevo/hpccg/generate_matrix.cpp,
	  test/benchmarks/mantevo/hpccg/generate_matrix.hpp,
	  test/benchmarks/mantevo/hpccg/loop_defines.h,
	  test/benchmarks/mantevo/hpccg/main.cpp,
	  test/benchmarks/mantevo/hpccg/make_local_matrix.cpp,
	  test/benchmarks/mantevo/hpccg/make_local_matrix.hpp,
	  test/benchmarks/mantevo/hpccg/mytimer.cpp,
	  test/benchmarks/mantevo/hpccg/mytimer.hpp,
	  test/benchmarks/mantevo/hpccg/read_HPC_row.cpp,
	  test/benchmarks/mantevo/hpccg/read_HPC_row.hpp,
	  test/benchmarks/mantevo/hpccg/waxpby.cpp,
	  test/benchmarks/mantevo/hpccg/waxpby.hpp: qthread-ized hpccg

2012-08-28 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: better const handling

2012-08-28 15:30  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_init.3: update documentation of environment
	  variables

2012-08-28 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_init.3: update documentation of environment
	  variables

2012-08-28 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_envariables.h, src/affinity/hwloc.c,
	  src/envariables.c,
	  src/interfaces/chapel/tasks-qthreads.c, src/qthread.c: print out
	  default values for environment variables

2012-08-28 14:46  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_cas.3: clean up const declarations

2012-08-28 14:45  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_syncvar_writeEF.3,
	  man/man3/qthread_syncvar_writeF.3,
	  man/man3/qthread_writeEF.3, man/man3/qthread_writeF.3: clean up
	  const declarations

2012-08-28 14:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/feb.c, src/syncvar.c: clean up
	  useless const declarations

2012-08-28 13:54  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am,
	  man/man3/qthread_disable_shepherd.3,
	  man/man3/qthread_disable_worker.3,
	  man/man3/qthread_enable_worker.3: 

2012-08-28 13:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix error condition trapping so it
	  won't be optimized out by the compiler

2012-08-28 12:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, test/basics/sinc.c: fix clang warnings

2012-08-27 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/sinc.c, test/basics/sinc_null.c,
	  test/benchmarks/uts/time_uts_sinc.c: new sinc api

2012-08-27 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, include/qthread/sinc.h,
	  src/qloop.c, src/qthread.c, src/sincs/donecount.c,
	  src/sincs/donecount_cas.c, src/sincs/original.c,
	  src/sincs/snzi.c: a little sanity

2012-08-27 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_readstate.3, man/man3/qthread_spawn.3: more
	  constants

2012-08-27 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: utility macros, not new
	  functions

2012-08-27 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: team destroy???

2012-08-27 21:26  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_dictionary_create.3,
	  man/man3/qt_dictionary_delete.3,
	  man/man3/qt_dictionary_destroy.3,
	  man/man3/qt_dictionary_end.3,
	  man/man3/qt_dictionary_get.3,
	  man/man3/qt_dictionary_iterator_copy.3,
	  man/man3/qt_dictionary_iterator_create.3,
	  man/man3/qt_dictionary_iterator_destroy.3,
	  man/man3/qt_dictionary_iterator_get.3,
	  man/man3/qt_dictionary_put.3,
	  man/man3/qt_dictionary_put_if_absent.3,
	  man/man3/qthread_fork.3, man/man3/qthread_spawn.3,
	  man/man3/qthread_worker.3,
	  man/man3/qthread_worker_unique.3: more documentation

2012-08-27 19:54  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qpool_free.3,
	  man/man3/qt_begin_blocking_action.3,
	  man/man3/qt_end_blocking_action.3: document arbitrary blocking
	  operations

2012-08-27 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/io.h, src/syscalls/user_defined.c,
	  test/basics/arbitrary_blocking_operation.c: rename arbitrary
	  blocking operation functions to be less obnoxious

2012-08-27 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/sinc.h: 

2012-08-27 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/dictionary.h,
	  src/ds/dictionary/dictionary_shavit.c,
	  src/ds/dictionary/dictionary_simple.c,
	  src/ds/dictionary/dictionary_trie.c: clean up the api a little

2012-08-27 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_dictionary_create.3,
	  man/man3/qt_dictionary_delete.3,
	  man/man3/qt_dictionary_destroy.3,
	  man/man3/qt_dictionary_end.3,
	  man/man3/qt_dictionary_get.3,
	  man/man3/qt_dictionary_iterator_copy.3,
	  man/man3/qt_dictionary_iterator_create.3,
	  man/man3/qt_dictionary_iterator_destroy.3,
	  man/man3/qt_dictionary_iterator_equals.3,
	  man/man3/qt_dictionary_iterator_get.3,
	  man/man3/qt_dictionary_iterator_next.3,
	  man/man3/qt_dictionary_put.3,
	  man/man3/qt_dictionary_put_if_absent.3,
	  man/man3/qt_sinc_create.3: document qt_dictionary interface

2012-08-27 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_accept.3,
	  man/man3/qt_connect.3, man/man3/qt_poll.3,
	  man/man3/qt_pread.3, man/man3/qt_pwrite.3,
	  man/man3/qt_read.3, man/man3/qt_select.3,
	  man/man3/qt_system.3, man/man3/qt_wait4.3,
	  man/man3/qt_write.3: document syscall wrapper functions

2012-08-27 16:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initialized atomics compatibility layer earlier

2012-08-27 16:35  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_sinc_create.3,
	  man/man3/qt_sinc_destroy.3, man/man3/qt_sinc_expect.3,
	  man/man3/qt_sinc_fini.3, man/man3/qt_sinc_init.3,
	  man/man3/qt_sinc_reset.3, man/man3/qt_sinc_submit.3,
	  man/man3/qt_sinc_wait.3: document sincs

2012-08-27 13:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/qt_sinc.h,
	  include/qthread/qthread.h, include/qthread/sinc.h,
	  src/qloop.c, src/sincs/donecount.c,
	  src/sincs/donecount_cas.c, src/sincs/original.c,
	  src/sincs/snzi.c, test/basics/sinc.c,
	  test/basics/sinc_null.c, test/features/qlfqueue.c: rename sinc
	  header; remove extraneous qt_ prefix

2012-08-27 12:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: fix typo

2012-08-26 14:02  Kyle Wheeler <kbwheel@sandia.gov>

	* test/utils/Makefile.am, test/utils/rng/Makefile.am: prevent from
	  being built during `make all`

2012-08-26 14:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: fix MALLOC macro problem

2012-08-25 14:39  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: 

2012-08-25 14:06  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am: fix `make distcheck`

2012-08-25 13:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c, src/sincs/donecount_cas.c,
	  src/spr.c, src/threadqueues/sherwood_threadqueues.c: more memory
	  scribbling

2012-08-25 13:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: add debug include

2012-08-25 13:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c, src/affinity/lgrp.c,
	  src/ds/dictionary/dictionary_simple.c,
	  src/ds/dictionary/dictionary_trie.c, src/ds/qarray.c,
	  src/ds/qdqueue.c, src/ds/qlfqueue.c, src/ds/qpool.c,
	  src/futurelib.c, src/hazardptrs.c,
	  src/net/portals4/portals4.c,
	  src/net/portals4/runtime-mpi.c,
	  src/net/portals4/runtime-pmi.c,
	  src/net/portals4/runtime-shmemrt.c,
	  src/patterns/allpairs.c, src/qloop.c, src/qt_c_hash.c,
	  src/qt_feb_barrier.c, src/qt_lf_hash.c, src/qt_mpool.c,
	  src/qtimer/altix.c, src/qtimer/gethrtime.c,
	  src/qtimer/gettime.c, src/qtimer/gettimeofday.c,
	  src/qtimer/mach.c, src/qutil.c, src/sincs/donecount.c: lots of
	  memory scribbling macros; a few minor fixes to allocation bugs I
	  discovered along the way

2012-08-25 13:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_macros.h: fix TLS delete in the native case by
	  re-initializing it to zero (fixes reinitialization failure)

2012-08-25 13:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix a very old race condition that occasionally
	  made reinitialization fail and/or caused segfault on shutdown

2012-08-24 09:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mutexfifo_threadqueues.c: fix argument count

2012-08-23 11:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix arguments

2012-08-23 11:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h, src/affinity/hwloc.c,
	  src/affinity/lgrp.c, src/affinity/libnuma.c,
	  src/affinity/libnumaV2.c, src/affinity/plpa.c,
	  src/affinity/tilera.c, src/aligned_alloc.c,
	  src/ds/dictionary/dictionary_shavit.c,
	  src/ds/dictionary/dictionary_simple.c: more scribbling

2012-08-22 13:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h, include/qt_io.h,
	  src/syscalls/accept.c, src/syscalls/connect.c,
	  src/syscalls/poll.c, src/syscalls/pread.c,
	  src/syscalls/pwrite.c, src/syscalls/read.c,
	  src/syscalls/select.c, src/syscalls/system.c,
	  src/syscalls/user_defined.c, src/syscalls/wait4.c,
	  src/syscalls/write.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: even more scribbling

2012-08-22 13:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h, src/affinity/hwloc.c, src/qthread.c: more
	  scribbling

2012-08-22 13:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: fix build error

2012-08-21 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_debug.h, src/qt_lf_hash.c,
	  src/qt_mpool.c, src/threadqueues/sherwood_threadqueues.c: make
	  memory scribbling available in unpooled as well

2012-08-21 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h, src/qthread.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: updating to new
	  scheduler api

2012-08-21 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use internal aligned allocation

2012-08-21 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: standardize steal
	  profiling output

2012-08-21 17:26  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/loxley_threadqueues.c: update interface to new
	  calling parameters

2012-08-20 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/pmea09/time_tbbq.cpp,
	  test/benchmarks/pmea09/time_tbbq_sizes.cpp: update to current TBB
	  interface

2012-08-20 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: search for TBB correctly

2012-08-20 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/spawn_parallel_cilk.c,
	  test/benchmarks/sc12/spawn_parallel_tbb.cc,
	  test/benchmarks/sc12/spawn_sequential_cilk.c,
	  test/benchmarks/sc12/spawn_sequential_tbb.cc: setting default
	  thread counts

2012-08-20 14:51  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/nottingham_threadqueues.c: change nottingham to
	  match new spawnqueue calling parameters

2012-08-17 21:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am: simplify

2012-08-17 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/fib_qthreads.c: turns out, the simpler
	  version is actually faster

2012-08-17 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/uts_qthreads.c: minor optimization

2012-08-17 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: hwloc distance handling was STILL wrong;
	  fixed

2012-08-17 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, include/qt_spawncache.h,
	  include/qt_threadqueues.h, include/qthread/qthread.h,
	  src/affinity/hwloc.c, src/feb.c, src/qloop.c,
	  src/qthread.c, src/spawncache.c, src/syncvar.c,
	  src/threadqueues/sherwood_threadqueues.c: finish sinc retvals,
	  add the ability to periodically flush the spawncache

2012-08-16 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: add some fallbacks

2012-08-16 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c: fix nightly compiler warning

2012-08-16 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: fix compile error

2012-08-15 14:53  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: fix autogen bug with empty ACLOCAL_INCLUDE

2012-08-14 21:01  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* autogen.sh: autogen for older libtool (kyle)

2012-08-12 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS, TODO, config/ChangeLogGen.sh,
	  scripts/ChangeLogGen.sh: preparing for next version release
	  (soon-ish)

2012-08-09 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: shavit

2012-08-09 16:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h, include/qthread/Makefile.am,
	  include/qthread/io.h,
	  test/basics/arbitrary_blocking_operation.c: publicize blocking
	  functions (maybe need a rename)

2012-08-07 17:08  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_simple.c: Handle case when qthreads
	  is finalized

2012-08-07 16:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp.c, src/affinity/libnuma.c,
	  src/affinity/libnumaV2.c, src/affinity/plpa.c,
	  src/affinity/tilera.c: fix prototype function mis-match

2012-08-07 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: better handling of buggy versions of hwloc

2012-08-06 23:02  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: internal spinlocks are now faster than pthread
	  spinlocks (more inline-able)

2012-08-06 22:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/context.c: optimize the common case; make context
	  creation more inline-able on x86_64

2012-08-06 22:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: minor attempts at
	  improving performance (minor success)

2012-08-06 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_lf_hash.c: remove compiler warning

2012-08-06 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: propagate spinlock lock fences from SPIN to
	  TRY

2012-08-06 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: use hwloc distances the way they are
	  supposed to be used

2012-08-06 21:44  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_qthread_struct.h, include/qt_spawncache.h,
	  src/feb.c, src/qthread.c, src/spawncache.c: Check preconditions
	  before throwing the task into the ready queue

2012-08-06 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: minor optimization

2012-08-06 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: rearrange qthread_worker_s to
	  compact and improve performance

2012-08-03 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: okay, this is brain-dead

2012-08-03 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, scripts/build.pl: tidy up a little

2012-08-03 16:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: deal with smaller
	  qthread_t

2012-08-03 16:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: folding markers

2012-08-03 14:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: fix compiler warning about
	  redeclaration

2012-08-02 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_barrier.h: fix datatype on prototype

2012-08-02 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_barrier.h: fix datatype on prototype

2012-08-02 16:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: fix to use TQNODEs, now
	  that qthread_t does not have a next ptr

2012-08-02 14:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove one compiler warning

2012-08-01 22:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: small qthread_ts are faster when aligned

2012-08-01 22:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix freeing of tasklocal blobs; had to be updated
	  to deal with new variety of argcopy lengths

2012-08-01 21:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c, src/affinity/plpa.c: allocate the right
	  amount of memory

2012-08-01 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: allocate the right amount of memory (and a little
	  uncrustification)

2012-08-01 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/no.c: allocate the correct amount of memory

2012-08-01 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/no.c: fix type mismatch

2012-08-01 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/dictionary/dictionary_shavit.c: bugs fixed with Dragos

2012-08-01 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c: two version of
	  qthread_t pools, one with AMPLE argcopy space, one without

2012-08-01 16:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, include/qthread/qthread.h,
	  src/feb.c, src/qthread.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c: condensing a
	  qthread_t into a cacheline (64 bytes)

2012-08-01 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/mach.c: fix a return value type

2012-08-01 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: remove a compiler warning

2012-08-01 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/qthread_fork_precond.c: more useful error messages

2012-07-31 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: reduce default tasklocal

2012-07-30 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: exit in error cases

2012-07-30 15:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am: leftover cruft from the creation of
	  rnglib

2012-07-30 14:31  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: detect missing autotools and generate a complaint
	  earlier

2012-07-26 22:21  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* README.multinode: Adds a terse multinode walkthrough.

2012-07-26 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix stupid rdata-free-simple-tasks bug

2012-07-26 16:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_lf_hash.c: deal with unpooled memory

2012-07-26 15:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test/stress/Makefile.am,
	  test/stress/precond_spawn_simple.c,
	  test/stress/test_spawn_simple.c: simpler test

2012-07-26 15:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, src/qt_c_hash.c, src/qt_lf_hash.c,
	  src/qthread.c: use memory pooling in lf-febs; add an
	  initialization function

2012-07-26 14:39  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4: check for intel-specific headers
	  only if the compiler is an intel one

2012-07-25 23:59  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/stress/precond_spawn_simple.c: more tasks to trigger asserts

2012-07-25 23:55  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/stress/Makefile.am: Makefile fix

2012-07-25 23:35  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/stress/Makefile.am,
	  test/stress/precond_spawn_simple.c: Added test for simple tasks
	  with preconditions

2012-07-25 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/cxx_futurelib.cpp: fix long-standing alignment
	  error

2012-07-25 22:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/compat_atomics.c: some more LOCK renaming

2012-07-25 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove last LOCK_DETAILS

2012-07-25 22:22  Kyle Wheeler <kbwheel@sandia.gov>

	* : more ignores

2012-07-25 22:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_lf_hash.c: straighten out the destructor-callback

2012-07-25 21:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: missing fence

2012-07-25 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_addrstat.h,
	  include/qt_blocking_structs.h, include/qt_profiling.h,
	  include/qt_shepherd_innards.h, src/feb.c, src/qthread.c: rename
	  lock-profiling "feb-profiling"

2012-07-25 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_lf_hash.c: avoid freeing null ptrs

2012-07-25 21:21  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_debug.h: remove lock debugging

2012-07-25 21:15  Kyle Wheeler <kbwheel@sandia.gov>

	* : more ignores

2012-07-25 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: fix rare bug in non-lf syncvar handling

2012-07-25 01:24  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: use a temp file to avoid re-calling svn

2012-07-25 01:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_lf_hash.c: remove duplicate typedefs

2012-07-25 01:20  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/56reader-rwlock.h, include/qthread/dictionary.h: 
	  Dictionary simple needs delete_support to be enabled for proper
	  synchronization; Fixed bug in RWlock, checking wrong CAS ret value

2012-07-24 23:38  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Added missing initialization of memory pool &
	  matching free

2012-07-24 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove debug printouts

2012-07-24 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix rdata allocation for simple tasks, and fix
	  QT_HWPAR behavior

2012-07-24 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/dictionary.h: uncrustification

2012-07-24 16:14  Kyle Wheeler <kbwheel@sandia.gov>

	* include/56reader-rwlock.h: improve performance by reducing atomic
	  ops

2012-07-24 16:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qdqueue.c, src/qutil.c: removing compiler warnings (with
	  -Wextra)

2012-07-24 16:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h, src/feb.c, src/io.c,
	  src/qthread.c, src/syncvar.c: removing compiler warnings (with
	  -Wextra)

2012-07-24 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_addrstat.h, include/qt_blocking_structs.h,
	  src/feb.c, src/syncvar.c: remove unused argument to
	  qthread_addrstat_new; update syncvar.c attempting to resolve
	  obscure race conditions (probably overkill)

2012-07-24 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h, include/qt_debug.h,
	  include/qt_io.h, include/qt_qthread_struct.h,
	  include/qt_threadstate.h, src/feb.c, src/qthread.c,
	  src/syscalls/accept.c, src/syscalls/connect.c,
	  src/syscalls/poll.c, src/syscalls/pread.c,
	  src/syscalls/pwrite.c, src/syscalls/read.c,
	  src/syscalls/select.c, src/syscalls/system.c,
	  src/syscalls/user_defined.c, src/syscalls/wait4.c,
	  src/syscalls/write.c: removing more of the old locking
	  infrastructure and cleaning up a bit

2012-07-24 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/qthread_stackleft.c: cleanup

2012-07-24 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: include correct dependencies

2012-07-24 15:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: simplify locks by mapping them to the FEB system

2012-07-24 14:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: cleaup functions should be enabled

2012-07-23 21:24  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fix simple tasks to not allocated stack.
	  (experimental)

2012-07-23 21:23  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: Added function to spawn precond tasks
	  with simple parameter (removed warning)

2012-07-23 20:35  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Added function to spawn precond tasks with simple
	  parameter

2012-07-23 20:33  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Added function to spawn precond tasks with simple
	  parameter

2012-07-23 15:30  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh, config/version-gen, configure.in,
	  src/Makefile.am, src/qt_lf_hash.c: add the lock-free hash, use it
	  when configured; also, improve autogen performance when
	  incorporating svn revision data

2012-07-23 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: remove qt_hash_unlock cleanup calls

2012-07-23 15:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: another minor optimization to the LF code

2012-07-21 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/syncvar.c: delete nodes properly

2012-07-21 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* : new ignores

2012-07-21 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: folding

2012-07-21 19:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: technically, the loop was unnecessary

2012-07-21 19:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: fully lock-free ready

2012-07-21 18:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h: even better verbose checking

2012-07-21 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: fix compiler warning

2012-07-20 23:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: uncrustified

2012-07-20 23:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: fully lock-free-ready

2012-07-20 23:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: a few minor optimizations to reduce trips into the
	  hash table in contended cases

2012-07-20 23:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h: add a valid bit to the lock_t
	  struct

2012-07-20 23:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: highlight the critical sections with scopes

2012-07-20 22:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: more FEB-like hash table use

2012-07-20 22:41  Kyle Wheeler <kbwheel@sandia.gov>

	* : remove unused directory

2012-07-20 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: abort if C99 is not available

2012-07-20 03:37  Kyle Wheeler <kbwheel@sandia.gov>

	* : more ignores

2012-07-20 03:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h, src/locks.c: update qthread_lock
	  to be more FEB-like

2012-07-19 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: the goto target was in the wrong place

2012-07-19 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: fix race condition in
	  tear-down

2012-07-19 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: compatibility

2012-07-19 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: do not use the
	  "get-new-thread" function for cleanup; too much implicit behavior

2012-07-19 17:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/feb_barrier.c: clean up; deallocate the barrier

2012-07-19 15:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: fix crash in lock_profile config

2012-07-18 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: fix bug from 3362

2012-07-18 23:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: make lock scope clearer

2012-07-18 23:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: lots of debugging; rework precond (slightly) to reduce
	  trips into the hash table

2012-07-18 23:30  Kyle Wheeler <kbwheel@sandia.gov>

	* test/stress/precond_fib.c: reduce stack requirements, add earlier
	  validation to catch bugs more quickly

2012-07-17 20:55  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_simple.c: Updated dictionary delete
	  to fix bug on Alina's machine.

2012-07-17 20:51  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_simple.c: Updated dictionary delete
	  to fix bug on Alina's machine.

2012-07-17 20:10  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_simple.c: (Really) Fixed the delete bug on the dictionary.

2012-07-17 20:08  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl, src/ds/dictionary/dictionary_simple.c,
	  src/qt_c_hash.c, test/features/qt_dictionary.c: Fixing the
	  breaking commit from earlier.

2012-07-17 20:02  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl, src/ds/dictionary/dictionary_simple.c,
	  src/qt_c_hash.c, test/features/qt_dictionary.c: WHile debugging
	  the wthreads bug, identified bug introduced by yesterday dictionary
	  delete commit: no actual delete performed. Fixed.

2012-07-16 23:54  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_simple.c: Fixed delete bug (shown on
	  contention) in simple dictionary.

2012-07-13 23:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/stress/Makefile.am, test/stress/feb_stream.c: another FEB
	  stress test

2012-07-13 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/stress/Makefile.am,
	  test/stress/feb_prodcons_contended.c: feb stress test

2012-07-12 00:36  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/dictionary.h,
	  src/ds/dictionary/dictionary_shavit.c,
	  src/ds/dictionary/dictionary_simple.c,
	  src/ds/dictionary/dictionary_trie.c,
	  test/features/qt_dictionary.c: Added dictionary support for
	  cleanup of tags once item entries are deleted.

2012-07-11 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: must be marked initialized a little earlier for
	  the tilera affinity stuff

2012-07-11 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: stupid typo; surprised this never bit me
	  before on Tilera

2012-07-11 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/qthread_fork_precond.c,
	  test/stress/task_spawn.c: fix compiler warnings

2012-07-11 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/qt_dictionary.c: uncrustified

2012-07-11 21:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: apparently Tilera changed the linker
	  behavior again

2012-07-11 21:03  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: be quiet about it

2012-07-11 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: prefer glibtool

2012-07-11 17:50  Kyle Wheeler <kbwheel@sandia.gov>

	* : includes

2012-07-10 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_addrstat.h: remove debug function

2012-07-10 20:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: some fences that seem useful are added; lots of
	  debugging reformatting; fix two bugs in the feb lock-free
	  implementation

2012-07-10 19:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: a little debugging info

2012-07-10 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: fix some basic bugs wrt put collisions

2012-07-10 17:03  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_trie.c: Added iterator_copy function
	  (working with trie dictionary)

2012-07-10 16:56  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_shavit.c: Added iterator_copy
	  function (working with shavit dictionary)

2012-07-10 16:51  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/dictionary.h,
	  src/ds/dictionary/dictionary_simple.c: Added a copy function to
	  the dictionary iterator. Working for simple dictionary.

2012-07-09 20:00  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/feb.c, src/qthread.c: Fixed threadc profiling defines (Kyle)

2012-07-09 17:30  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/basics/qthread_fork_precond.c: Updated fork_precond tests
	  according to the last commit

2012-07-09 17:29  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Change fork_precond behavior to expect list of
	  pointers to aligned_t instead of list of aligned_t

2012-07-06 22:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: lffebs: double-check validity during removal

2012-07-06 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_addrstat.h: allow null

2012-07-06 20:23  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_addrstat.h,
	  include/qt_blocking_structs.h, include/qt_internal_feb.h,
	  src/feb.c, src/qthread.c, test/stress/task_spawn.c: preliminary
	  lock-free FEBs (treating the hash table as lock-free, even though
	  it isn't)

2012-07-06 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hazardptrs.h, src/hazardptrs.c: easily cast free-func
	  typedef, and uncrustification

2012-07-06 20:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: have the thief delegate
	  back to worker0 if the real mccoy thread is in the queue

2012-07-06 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/feb_barrier.c: test barrier a bit more repeatedly

2012-07-06 20:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/tasklocal_data_no_argcopy.c,
	  test/basics/tasklocal_data_no_default.c: leave it full

2012-07-06 20:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/tasklocal_data.c: leave it full

2012-07-03 23:05  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qt_loop.3: fix return value (thanks Kurtis!)

2012-07-02 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h: uncrustified

2012-07-02 20:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h: more useful argparsing (nearly obviate the
	  need for a VERBOSE envariable)

2012-07-02 19:01  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: allow arbitrary-sized default stack sizes, remove
	  outdated options

2012-07-02 17:34  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_builtin_trap.m4: fix CFLAGS Werror mis-use

2012-07-02 15:40  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_shavit.c: Fix obvious leaks in
	  shavit dictionary (proper checks coming with the future getCounts
	  feature)

2012-06-30 00:02  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_trie.c: Fixed bug in trie: items not
	  properly added when adding a spine for 2 items with the same bucket
	  (need to continue to retry the add not return)

2012-06-29 18:30  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_trie.c: Fixed iterator bug affecting
	  high number of entries in trie dictionary

2012-06-29 17:10  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary/dictionary_trie.c: Uncrustified (Kyle config)
	  trie dictionary.

2012-06-29 16:31  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qthread/dictionary.h,
	  src/ds/dictionary/dictionary_shavit.c,
	  src/ds/dictionary/dictionary_simple.c,
	  src/ds/dictionary/dictionary_trie.c,
	  test/features/qt_dictionary.c: Added trie hash, both the trie and
	  shavit are using memory pool for entries (and it works, hopefully).
	  Itearators over the trie were a pain to figure out.

2012-06-28 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: must use aligned alloc, not calloc

2012-06-28 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: remove debugging print

2012-06-28 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: make ALWAYS_OUTPUT always output

2012-06-28 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/aligned_alloc.c: fix compile and add a handy assert

2012-06-28 19:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/dictionary/dictionary_shavit.c: cleaner compile; start
	  using qpools

2012-06-28 16:17  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix changing the dictionary

2012-06-27 17:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: idiotic workaround to even more
	  idiotic Intel compiler warning

2012-06-27 17:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_aligned_alloc.h: fix some ICC warnings

2012-06-27 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix compiler warning

2012-06-27 17:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/snzi.c: more code now uses internal aligned alloc

2012-06-27 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: more code now uses
	  internal aligned alloc

2012-06-27 17:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c, src/sincs/donecount_cas.c,
	  src/sincs/original.c, src/spawncache.c: more code now uses
	  internal aligned alloc

2012-06-27 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_aligned_alloc.h, src/aligned_alloc.c,
	  src/ds/qarray.c, src/qt_c_hash.c, src/qt_mpool.c,
	  src/qthread.c, src/sincs/donecount.c: qt_mpool and donecount
	  sincs now use internal aligned alloc; also provide global way to
	  cache getpagesize()

2012-06-27 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_aligned_alloc.h, src/aligned_alloc.c,
	  src/qt_c_hash.c: qt_c_hash now uses internal aligned alloc

2012-06-27 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_aligned_alloc.h, src/aligned_alloc.c,
	  src/ds/qarray.c, src/qloop.c: improved aligned alloc, now used by
	  qarray too

2012-06-27 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: use aligned assert

2012-06-27 16:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: useful parenthesis

2012-06-27 16:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/dictionary/dictionary_shavit.c: uncrustified

2012-06-27 16:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h, src/qloop.c: silence clang warnings

2012-06-27 14:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_syscalls.h: fix googlecode issue #11

2012-06-27 00:13  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, src/Makefile.am, src/ds/Makefile.inc: Restructured
	  dictionary to allow configure-time selection of dictionary
	  implementation using @with_dict@

2012-06-26 23:51  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, src/Makefile.am, src/ds/dictionary.c,
	  src/ds/dictionary/dictionary_shavit.c,
	  src/ds/dictionary/dictionary_simple.c,
	  src/ds/dictionary_shavit.c: Restructured dictionary to allow
	  configure-time selection of dictionary implementation using
	  @with_dict@

2012-06-26 19:51  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* : Added dictionary folder, in preparation for the restructuring
	  that will allow configure-time choice of dictionaries

2012-06-26 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/context.c: fix stack alignment on ARM

2012-06-26 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/context.c: fix stack alignment on ARM

2012-06-26 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: better handling of alignment requirements

2012-06-26 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: stacks need to be aligned

2012-06-26 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: package new header

2012-06-26 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: make comment sound a bit more
	  professional

2012-06-26 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_aligned_alloc.h: include missing header

2012-06-26 18:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: new alignment assert; works around
	  some common compiler optimizations

2012-06-26 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/aligned_alloc.c: I keep needing a portable
	  aligned allocator; so I'll put this here, and use it elsewhere
	  rather than duplicating the code all over.

2012-06-26 15:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c: fix a compiler warning under clang

2012-06-25 21:15  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/dictionary.h, src/ds/dictionary.c,
	  src/ds/dictionary_shavit.c: Added dictionary variant
	  implementation from Shalev and Shavit. TODO: add build option for
	  using it. Currently being swapped with dictionary.c and a define
	  necessary in dictionary.h

2012-06-21 22:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: 64-bit version of hash

2012-06-21 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: missing sinc

2012-06-20 22:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/multinode.h, include/qthread/spr.h,
	  include/spr_innards.h, src/net/net.c, src/spr.c,
	  test/multinode/Makefile.am, test/multinode/get.c,
	  test/multinode/put.c, test/multinode/spawn.c: Adds
	  `spr_register_actions()`, `spr_put()`, `spr_get()`, and
	  `spr_spawn()`, with respective tests.  The action registration operation supports specifying whether the
	  function array is null-terminated and what the base offset ID
	  should be. The spawn operation is a version of
	  `qthread_fork_remote()` supporting arbitrary-length argument
	  buffers. The put and get are blocking one-sided data movement
	  operations.

2012-06-20 22:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/multinode.h, src/net/net.c: Adds
	  qthread_fork_remote_sinc().

2012-06-20 14:48  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: properly disable lazy threadids when debugging is
	  enabled

2012-06-19 23:31  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/feb.c: Added guards for feb operations called after qthreads
	  is finalized (Kyle)

2012-06-19 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c: ret can now be a SINC

2012-06-14 23:16  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4,
	  config/qthread_check_makecontext.m4,
	  config/qthread_check_swapcontext.m4,
	  include/fastcontext/arm-ucontext.h,
	  include/fastcontext/taskimpl.h,
	  include/qthread/qthread.h, src/fastcontext/asm.S,
	  src/fastcontext/context.c: preliminary ARM support (doesn't yet
	  pass make check, but it passes all the basic tests)

2012-06-13 23:03  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore in-tree-compile generated files

2012-06-13 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/sinc.c: more debug info

2012-06-13 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_sinc.h: This needs to be marked as aligned, so
	  that the compiler will correctly align its innards

2012-06-13 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spr.c: ignore recursive calls to spr_fini

2012-06-13 17:30  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/broadcast.c, test/multinode/latency.c: quieter
	  testing

2012-06-13 17:30  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/Makefile.am: fix the typo in the dependency rule

2012-06-12 22:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spr.c: clean up even if the user doesn't

2012-06-12 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/Makefile.am, test/multinode/broadcast.c,
	  test/multinode/env_qthread_initialize.c,
	  test/multinode/latency.c, test/multinode/ring.c,
	  test/multinode/spmd.c, test/multinode/spr_init.c,
	  test/multinode/test_init.c: match current api

2012-06-12 22:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/hello_world.c: match current api

2012-06-12 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spr.c: missing retval

2012-06-12 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/spr.h, src/spr.c: detect failure to initialize
	  (should probably make sanity checks optional); also add comments to
	  header file

2012-06-12 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/hello_world.c: simplified init

2012-06-12 21:36  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/spr.h, src/spr.c: Adds `spr_unify`.

2012-06-12 21:36  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/uts.c: Swaps in `spr_fini` in the place of
	  `qthread_finalize`.  This is not strictly necessary, symmetric with `spr_init`.

2012-06-12 21:36  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/net.c: Removes unnecessary barrier.

2012-06-12 21:35  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/net.c: Fixes typo in debug message.

2012-06-12 21:35  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/Makefile.am, src/net/net.c, src/spr.c: Migrates `spr_*`
	  methods to separate file.

2012-06-12 21:35  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/spr.h, src/net/net.c: Adds `spr_num_locales` and
	  `spr_locale_id`.

2012-06-12 21:35  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/uts.c: Changes  to `_loc` to `_locale_id`.

2012-06-12 21:35  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/Makefile.am: Fixes typo.

2012-06-12 20:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/uts.c: uncrustified

2012-06-12 20:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/uts.c: this does not compile, but will soon
	  (written to what the API *will* be, rather than what it *is*)

2012-06-12 19:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/test_init.c, test/multinode/uts.c: quieter testing

2012-06-12 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/broadcast.c, test/multinode/latency.c: deal with
	  low rank counts more gracefully

2012-06-12 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/multinode/uts.c: fix compiler warning

2012-06-12 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_multinode_innards.h: fix symbol visibility

2012-06-12 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/net/net.c: quiet compiler warning

2012-06-12 17:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/multinode.h: restore qthread_multinode_register

2012-06-12 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/net/net.c: sanity-check the flags

2012-06-12 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_multinode_innards.h,
	  include/qthread/multinode.h, include/qthread/spr.h,
	  src/net/net.c: tidying up SPR behavior a bit

2012-06-12 15:49  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/Makefile.am, include/qt_multinode_innards.h,
	  include/qthread/multinode.h, src/qthread.c: Moves internal
	  multinode stuff internal.

2012-06-12 15:49  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/net.c: Fixes environment variable.

2012-06-12 15:48  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/Makefile.am: Adds `spr.h` to set of headers to
	  install.

2012-06-11 23:55  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/spr.h, src/net/net.c: Rounds out SPR initialize
	  with a finalize.

2012-06-11 23:55  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/multinode.h, src/net/net.c,
	  test/multinode/Makefile.am, test/multinode/spmd.c: Adds SPMD-like
	  'multi-start' and 'multi-stop' methods, and associated test.

2012-06-11 23:55  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/spr.h: Fixes bad header location.

2012-06-11 23:55  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/uts.c: Fixes bad header location.

2012-06-11 23:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/spr.h, src/net/net.c: basic spr_init() function

2012-06-11 20:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.hpp: add an identiy value to the reduction

2012-06-11 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.hpp: C++ version of qt_loopaccum_balance

2012-06-11 16:19  Kyle Wheeler <kbwheel@sandia.gov>

	* include/56reader-rwlock.h: I think this width was wrong

2012-06-08 22:40  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/multinode.h: Makes multinode interface available
	  in C++ (SPR++?).

2012-06-08 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: workaround for Clang bug; would be better if there
	  was a reliable way to test for the bug, but...

2012-06-08 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/Makefile.am, test/features/Makefile.am,
	  test/stress/Makefile.am: simplify DEPENDENCIES stuff; there was
	  lots of unnecessary declarations here

2012-06-08 21:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: simplify #defs

2012-06-08 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/qthread_fincr.c: better initialization and more
	  asserts

2012-06-08 21:29  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, test/Makefile.am,
	  test/benchmarks/Makefile.am,
	  test/benchmarks/sc12/rng/AUTHORS,
	  test/benchmarks/sc12/rng/LICENSE,
	  test/benchmarks/sc12/rng/brg_endian.h,
	  test/benchmarks/sc12/rng/brg_sha1.c,
	  test/benchmarks/sc12/rng/brg_sha1.h,
	  test/benchmarks/sc12/rng/brg_types.h,
	  test/benchmarks/sc12/rng/rng.h,
	  test/benchmarks/sc12/uts_cilk.c,
	  test/benchmarks/sc12/uts_omp.c,
	  test/benchmarks/sc12/uts_qthreads.c,
	  test/benchmarks/sc12/uts_tbb.cc,
	  test/benchmarks/uts/rng/AUTHORS,
	  test/benchmarks/uts/rng/LICENSE,
	  test/benchmarks/uts/rng/brg_endian.h,
	  test/benchmarks/uts/rng/brg_sha1.c,
	  test/benchmarks/uts/rng/brg_sha1.h,
	  test/benchmarks/uts/rng/brg_types.h,
	  test/benchmarks/uts/rng/rng.h,
	  test/benchmarks/uts/time_uts_aligned.c,
	  test/benchmarks/uts/time_uts_cilk.c,
	  test/benchmarks/uts/time_uts_donecount.c,
	  test/benchmarks/uts/time_uts_donecount2.c,
	  test/benchmarks/uts/time_uts_donecount3.c,
	  test/benchmarks/uts/time_uts_omp.c,
	  test/benchmarks/uts/time_uts_sinc.c,
	  test/benchmarks/uts/time_uts_syncvar.c,
	  test/benchmarks/uts/time_uts_tbb.cc,
	  test/multinode/Makefile.am, test/stress/Makefile.am,
	  test/stress/subteams_uts.c, test/utils/Makefile.am,
	  test/utils/rng/AUTHORS, test/utils/rng/LICENSE,
	  test/utils/rng/Makefile.am, test/utils/rng/brg_endian.h,
	  test/utils/rng/brg_sha1.c, test/utils/rng/brg_sha1.h,
	  test/utils/rng/brg_types.h, test/utils/rng/rng.h: Moves RNG used
	  with UTS codes to a separate library.

2012-06-08 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/qt_dictionary.c: needed qthread.h header file

2012-06-07 23:30  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary.c: Improve dictionary lookup by adding new
	  elements at the front of the elements in a bucket

2012-06-07 18:01  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/56reader-rwlock.h, src/ds/dictionary.c,
	  test/features/qt_dictionary.c: Require qthread library to be
	  initialized when using the dictionary. Assert library is
	  initialized when asserts are enabled. Use MACHINE_FENCEfrom
	  config.h in rw_lock.

2012-06-06 20:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix (I think) the fincr/dincr
	  synchronization bug

2012-06-06 16:10  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/dictionary.h: Updated dictionary entry to contain
	  the hash for fewer op_equals calls

2012-06-06 16:06  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/ds/dictionary.c: Dictionary forces qthreads initialization -
	  needed when qthreads is conffigured with
	  --disable-hardware-increments

2012-06-06 14:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: need visibility macros

2012-06-06 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: better header organization

2012-06-06 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: only undef assert if it will be
	  redefined

2012-06-06 14:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: better header organization

2012-06-06 14:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: better header organization

2012-06-06 14:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: apparently #include-ing assert.h after
	  qthread_asserts.h will re-override my #def of assert(), but then
	  re-including qthread_asserts.h will not re-re-override the #def.
	  Well, it will NOW.

2012-06-05 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: move de-initialization to later to avoid races

2012-06-05 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/shepherds.c: allow qthread_shep() to be used without
	  initialization

2012-06-05 21:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: move initialization flag earlier

2012-06-05 20:47  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/dictionary.h: Added in depth comments to
	  dicitonary header file

2012-06-05 20:37  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/features/qt_dictionary.c: Updated dictionary test file with
	  more tests for delete

2012-06-05 20:34  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/features/qt_dictionary.c: Updated dictionary test file with
	  test for delete

2012-06-05 20:23  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/dictionary.h, src/ds/Makefile.inc,
	  src/ds/dictionary.c, test/features/Makefile.am,
	  test/features/qt_dictionary.c: Added qt_dictionary & test

2012-06-05 20:20  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/Makefile.am: Fix: re-added 56reader-rwlock.h from tarball
	  - was removed by mistake in previous commit

2012-06-05 20:14  sbarlea@gmail.com <sbarlea@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/56reader-rwlock.h, include/Makefile.am,
	  include/qthread/Makefile.am: Fix: Extracted number of readers as
	  separate define

2012-06-05 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c, src/qutil.c: fix minor
	  compile issues

2012-06-05 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* config/version-gen: simpler svn command

2012-06-05 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread_innards.h,
	  src/compat_atomics.c, src/feb.c, src/locks.c,
	  src/qloop.c, src/qt_barrier.c, src/qt_feb_barrier.c,
	  src/qt_mpool.c, src/qthread.c, src/qutil.c,
	  src/shepherds.c, src/syncvar.c, src/workers.c: use asserts to
	  provide newbies better error messages

2012-05-29 23:21  alina.g.simion@gmail.com <alina.g.simion@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: Added extern C modifier for sincs

2012-05-24 23:17  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/net.c: Extends handling of action registration
	  exceptions.

2012-05-24 12:16  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c: previous fails to compile for one set of options

2012-05-23 15:11  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c, src/qthread.c: Change parallel loop iteration return
	  	value from syncvar to sinc -- modest speed improvement (qloop.c) switch from syncvar_t to sinc_t 	also comment out case I think is dead -- step_inner with future
	  	set (qthread.c) I can't get rid of some fomatting changes my emacs
	  	seems to have made

2012-05-17 20:00  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Initializes count lock.

2012-05-17 20:00  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Swaps in a yield for a busy wait to prevent
	  deadlock ...  for uni-worker and non-work-stealing situations.

2012-05-16 22:25  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread_innards.h, src/qthread.c,
	  src/sincs/donecount.c, test/basics/test_teams.c,
	  test/stress/subteams_uts.c: Fixes termination issues with
	  subteams.

2012-05-16 22:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/snzi.c: snzi sinc now compiles (sinc_null fails for
	  some reason)

2012-05-16 22:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: consts

2012-05-16 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: minor pointer improvements

2012-05-16 21:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount_cas.c: now donecount_cas sincs do not require
	  malloc

2012-05-16 21:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_sinc.h, src/sincs/donecount.c,
	  test/basics/sinc.c, test/basics/sinc_null.c: sincs (at least
	  donecount ones) can now be used without EVER calling malloc

2012-05-16 20:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: use aligned_t instead of syncvar, for
	  speed in blocking (given that there is a high probability we will
	  block)

2012-05-16 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: the Linux kernel guys say this is safe, and
	  faster

2012-05-16 14:45  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c, src/qthread.c,
	  src/threadqueues/loxley_threadqueues.c: basically backing out my
	  	last checkin -- it has problems when parallel tasks synchronize
	  	(block) and end up on different cores than they started.  It breaks
	  the spin-barrier code.

2012-05-14 13:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: remove minor redundancy

2012-05-08 19:55  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: periodic

2012-05-04 15:11  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c: Change barrier in OpenMP parallel
	  	construct to be non-preemptive if no nesting present 	(basically locking down the threads 	when sized to the number of cores - reduces 	delays when barriers would have tried to 	switch the current software task) 	improve heated_plate_openmp by 2x a bunch 	of stuff by a couple of percent

2012-05-02 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: remove unused qt_loop code

2012-05-02 16:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: lots of simplified logic; improved qt_loop
	  performance significantly

2012-05-02 16:13  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: formatting

2012-05-01 23:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/spawn_parallel_qthreads.c: another loop
	  style

2012-05-01 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix compilation when asserts are turned on

2012-05-01 22:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: new idea for qt_loop (seems faster)

2012-05-01 00:01  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/sc12/fib_qthreads.c: Turns "yield near" into
	  "yield".

2012-04-30 18:32  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/sc12/spawn_parallel_qthreads.c: Fixes naming
	  issue and compiler warnings.

2012-04-27 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: better comments on ppc

2012-04-27 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4: fix AC_DEFINE call

2012-04-27 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4, src/fastcontext/asm.S,
	  src/fastcontext/context.c: better detection of PPC ABIs

2012-04-27 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/context.c: properly detect function pointer style

2012-04-27 20:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: prepare for fiddling with register
	  notation on PPC64 (for POWER7/Linux)

2012-04-27 20:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/context.c: technically, this is only known to
	  work on POWER7 Linux, but I don't have a PPC Linux box to compare
	  to, so lets leave it like this until I do

2012-04-27 19:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread/qthread-sst.h: more
	  portable label indicators

2012-04-27 19:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h,
	  src/fastcontext/context.c: finish standardizing fastcontext
	  structure names

2012-04-27 19:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spawncache.c: init tls

2012-04-27 19:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h,
	  include/fastcontext/power-ucontext.h,
	  include/fastcontext/tile-ucontext.h,
	  src/fastcontext/asm.S, src/qthread.c: standardize fastcontext
	  structure names

2012-04-27 19:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: tls compatibility, add memalign #defs

2012-04-27 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_macros.h, src/futurelib.c, src/hazardptrs.c,
	  src/io.c, src/qt_mpool.c, src/shepherds.c: TLS initialization

2012-04-27 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_tls.m4: allow option to disable native tls

2012-04-27 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/spawn_parallel_qthreads.c: alternative
	  spawns

2012-04-26 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: configurable steal size
	  again

2012-04-26 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/uts/time_uts_cilk.c,
	  test/benchmarks/uts/time_uts_donecount2.c: compiling cilk and tbb
	  benchmarks, if cilk and tbb are available

2012-04-26 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_donecount.c: s/nblock/simple/g

2012-04-26 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/uts_cilk.c: fix compiler warning

2012-04-26 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: minor fixes; properly detect tbb and correct typo
	  in LIBS

2012-04-26 21:26  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/benchmarks/Makefile.am: simple tests for
	  benchmark tpls

2012-04-25 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_mpool.h, src/qt_mpool.c, src/qthread.c: cleanup a
	  little bit

2012-04-25 15:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: global tls appears to be 0.01 or 0.02 seconds
	  faster in REALLY big UTS runs. More investigation is necessary.

2012-04-25 14:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: tell the compiler I want these fast

2012-04-24 19:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: eliminate cache of block_tail (no real benefit to
	  caching)

2012-04-24 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/spawn_sequential_qthreads.c: we know these
	  are simple tasks...

2012-04-23 17:23  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c: Fix previous optimization -- barriers need to have
	  on thread per core, so when nested and the root thread is not on
	  core 0, we need to be careful and make sure not to put two threads
	  on the same core or the XOMP_barrier does not work.  (qloop.c) add code to detect when root thread 	tries to create a thread on the same core 	and create on core zero instead

2012-04-23 16:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: improve readability

2012-04-23 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: performance improvement
	  (shadow_head implemented)

2012-04-23 16:25  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_linux.m4, configure.in,
	  src/affinity/no.c: improve detection & behavior in no-topology
	  case

2012-04-23 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better operation when return value is already
	  empty

2012-04-23 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: remove last __tile__ crap from this file (use arch
	  detection)

2012-04-20 20:32  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c: small (3% maybe) improvements to parallel loop
	  startup (qloop.c) use the first thread as the root thread 		of the thread creation tree -- saves a timout to 		get the lsat thread active on the loop 	change the parallel regions to be allocated with mpool 		not malloc - initialization handled in qloop 		to preclude visability to qthread.c and non-OpenMP 		codes

2012-04-20 14:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: setcontext does not return

2012-04-20 04:59  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_linux.m4, configure.in,
	  src/affinity/no.c: better detect behavior without any topology
	  library

2012-04-19 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/fib_qthreads.c: 

2012-04-19 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more minor optimizations; reducing the common case
	  operations

2012-04-19 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_fib.c: even faster fib

2012-04-19 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, src/qthread.c: make task
	  termination a smidge faster by not saving the old state

2012-04-19 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_fib.c: fast fib

2012-04-19 20:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: add yield_near

2012-04-19 20:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: remove debugging
	  comments

2012-04-19 20:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c: add private_yielded

2012-04-19 20:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_spawncache.h, include/qt_threadqueues.h,
	  src/qthread.c, src/spawncache.c,
	  src/threadqueues/sherwood_threadqueues.c: create spawncache
	  "on_deck" position, as an optimization, and add spawncache_yield,
	  for yield_near

2012-04-19 15:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadstate.h, src/qthread.c: initial yielded-near
	  support

2012-04-18 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/uts_omp.c: allow 1 thread

2012-04-18 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/sc12/spawn_parallel_qthreads.c,
	  test/benchmarks/sc12/spawn_sequential_qthreads.c: fix compiler
	  warning about unused functions

2012-04-18 17:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_donecount2.c,
	  test/benchmarks/uts/time_uts_donecount3.c: nblock update

2012-04-18 14:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: left off the _T

2012-04-17 21:21  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl, test/benchmarks/Makefile.am,
	  test/benchmarks/mt/time_cilk_task_spawn.c,
	  test/benchmarks/mt/time_eager_future.c,
	  test/benchmarks/mt/time_omp_task_spawn.c,
	  test/benchmarks/sc12/fib_cilk.c,
	  test/benchmarks/sc12/fib_omp.c,
	  test/benchmarks/sc12/fib_qthreads.c,
	  test/benchmarks/sc12/fib_tbb.cc,
	  test/benchmarks/sc12/rng/AUTHORS,
	  test/benchmarks/sc12/rng/LICENSE,
	  test/benchmarks/sc12/rng/brg_endian.h,
	  test/benchmarks/sc12/rng/brg_sha1.c,
	  test/benchmarks/sc12/rng/brg_sha1.h,
	  test/benchmarks/sc12/rng/brg_types.h,
	  test/benchmarks/sc12/rng/rng.h,
	  test/benchmarks/sc12/spawn_parallel_cilk.c,
	  test/benchmarks/sc12/spawn_parallel_omp.c,
	  test/benchmarks/sc12/spawn_parallel_qthreads.c,
	  test/benchmarks/sc12/spawn_parallel_tbb.cc,
	  test/benchmarks/sc12/spawn_sequential_cilk.c,
	  test/benchmarks/sc12/spawn_sequential_omp.c,
	  test/benchmarks/sc12/spawn_sequential_qthreads.c,
	  test/benchmarks/sc12/spawn_sequential_tbb.cc,
	  test/benchmarks/sc12/uts_cilk.c,
	  test/benchmarks/sc12/uts_omp.c,
	  test/benchmarks/sc12/uts_qthreads.c,
	  test/benchmarks/sc12/uts_tbb.cc,
	  test/benchmarks/sc12/uts_tree_parameters.sh,
	  test/benchmarks/uts/time_uts_donecount2.c: Adds SC12 benchmarks
	  set.

2012-04-17 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: expose uberfork
	  (renamed "spawn")

2012-04-17 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: further simplify precond type handling

2012-04-17 16:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c: rename non-blocking
	  as "simple", and simplify bit-masks for ret values

2012-04-16 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: avoid an extra TLS call, and avoid calculation
	  (use memory reference; order of magnitude faster)

2012-04-16 21:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/uts/time_uts_donecount3.c: explicit-continuation
	  UTS

2012-04-15 20:38  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/generic/time_febs_stream_test.c: Fixes benchmark.

2012-04-13 23:33  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_tls.m4, configure.in, include/qt_macros.h,
	  include/qt_shepherd_innards.h, src/futurelib.c,
	  src/hazardptrs.c, src/io.c, src/qthread.c,
	  src/shepherds.c, src/spawncache.c,
	  src/syscalls/user_defined.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/workers.c, test/Makefile.am, test/basics/Makefile.am,
	  test/benchmarks/rose_bots/Makefile.am,
	  test/features/Makefile.am, test/stress/Makefile.am: Detect native
	  TLS, and use it if it's available. Can't use it for mpool yet, but
	  I'll be benchmarking that soon.

2012-04-12 22:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: refactor argument passing to uberfork

2012-04-12 19:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: simplify stealing
	  disable

2012-04-12 19:14  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_threadqueues.h, src/interfaces/rose/xomp.c,
	  src/qloop.c, src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: (qt_threadqueues.h) add calls to allow stealing to be disabled (xomp.c) remove one level of indirection in parallel loop startup (nottingham_threadqueues.c) allow stealing to be disabled (sherwood_threadqueues.c) allow stealing to be disabled (loxley_threadqueues.c) allow stealing to be disabled - turning off
	          inside lock allows the lock acquire and release to act as a backoff
	          on the queues lock and improves enqueue times/parallel startup (qloop.c) disable stealing during creation on pararallel loops -
	          load balancing is handled by the loop not by moving the tasks
	          (which are marked non_stealable anyway)

2012-04-12 12:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: missing comma

2012-04-11 23:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_febs_graph_test.c: static
	  declarations

2012-04-11 23:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/benchmarks/uts/time_uts_donecount2.c: Non-blocking threads
	  don't need their own context! (probably more things that can be
	  stripped out for them)

2012-04-11 22:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: simplify

2012-04-10 22:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: if it will never
	  happen...

2012-04-10 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h,
	  include/qt_threadqueue_stack.h, src/qthread.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: remove
	  MUST_BE_WORKER_ZERO in favor of REAL_MCCOY

2012-04-10 19:30  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c, src/qloop.c: Remove redundent
	  operations in parallel loop startup and shutdown (xomp.c) barrier not needed at end of parallel loop - effectively
	  done inside qloop.c(step_inner) (qloop.c) don't need to empty ret value done for us in uberfork

2012-04-09 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: Convey pretends to be GCC
	  as well

2012-04-09 18:47  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/net.c: Adds check to make sure action UID was registered
	  at the destination.

2012-04-09 14:48  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/broadcast.c, test/multinode/uts.c: Updates
	  multinode tests for ROSS 2012 submission.

2012-04-05 19:19  bwbarrett@gmail.com <bwbarrett@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/portals4/runtime-pmi.c: forgot to add runtime-pmi code

2012-04-05 19:17  bwbarrett@gmail.com <bwbarrett@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/portals4/portals4.c: * Make the event queue big, so we don't overflow.  * Need to repost on unlink, not free, since they're in the priority
	  list!

2012-04-05 18:05  bwbarrett@gmail.com <bwbarrett@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* config/ompi_check_withdir.m4, config/orte_check_pmi.m4: oops,
	  this needed to be part of r3096

2012-04-05 17:29  bwbarrett@gmail.com <bwbarrett@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/portals4/portals4.c, test/multinode/Makefile.am: help
	  with cleanup a bit.  sigh.

2012-04-05 16:23  bwbarrett@gmail.com <bwbarrett@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, src/net/portals4/Makefile.inc,
	  src/net/portals4/portals4.c,
	  src/net/portals4/runtime-mpi.c,
	  src/net/portals4/runtime-shmemrt.c,
	  src/net/portals4/runtime.h, test/multinode/hello_world.c: Update
	  the runtime interaction pieces to use the GetPhysId interface.
	  Implement PMI starter interface

2012-04-05 16:09  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/latency.c: Adds intra-node/shep timing to
	  `latency` test.

2012-04-05 16:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, src/qthread.c: Adds
	  `qthread_fork_copyargs_to()`.

2012-04-05 15:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/Makefile.am, test/multinode/broadcast.c: Adds tiny
	  "broadcast" test.

2012-04-05 14:28  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/latency.c: Sets timing info to print out when not
	  in verbose mode.

2012-04-05 14:25  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/latency.c: Updates "latency" test time a ring of
	  spawns.  The `COUNT` parameter now denotes the number of complete trips
	  around the ring; #(remote-spawns) =  count x #(locales).

2012-04-05 03:13  bwbarrett@gmail.com <bwbarrett@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/portals4/portals4.c: oops, need to repost on free

2012-04-05 00:51  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/Makefile.am, test/multinode/latency.c: Adds a
	  simple time-round-trip-remote-fork test.

2012-04-04 23:21  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/uts.c: Adds option to not use `qt_fork_remote()`
	  when sending messages to originating node; adds output of remote
	  fork count.

2012-04-04 22:50  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/uts.c: Makes a tiny output adjustment for easier
	  `awk`ing.

2012-04-04 22:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/uts.c: Adds simple communication stats collection.

2012-04-04 14:14  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Removes unused variable.

2012-04-03 21:52  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qt_qthread_struct.h,
	  include/qthread/qthread.h, include/qthread_innards.h,
	  src/qthread.c, test/features/Makefile.am,
	  test/features/subteams.c, test/stress/subteams_uts.c: Fixes
	  sub/teams memory leak; adds a new subteams test.

2012-04-03 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/Makefile.am, test/features/Makefile.am,
	  test/stress/Makefile.am, test/stress/task_spawn.c: make nightlies
	  a bit friendlier

2012-04-03 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/hazardptrs.c: fix the gather

2012-04-03 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hazardptrs.h: whoops

2012-04-03 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/hazardptrs.c: crazy idea that needs debugging

2012-04-03 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix conditional cnt update

2012-04-02 19:15  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/rose_xomp.h, src/interfaces/rose/xomp.c: If all the users
	  are using a RENCI version of rose to get OpenMP executables we
	  don't need the two versions of XOMP_parallel_start (rose_xomp.h) only have one version of XOMP_parallel_start (xomp.c) only have one version of XOMP_parallel_start

2012-03-30 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: oversubscription yields and such

2012-03-30 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/Makefile.am, test/features/Makefile.am,
	  test/stress/Makefile.am: use timelimit_path

2012-03-30 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: oversubscription option

2012-03-30 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c: remove compiler warning

2012-03-29 20:54  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_hwloc.m4: flags were getting lost

2012-03-29 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_hwloc.m4: flag to specify hwloc prefix

2012-03-29 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: improve thread profiling

2012-03-29 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/qthread_fork_precond.c: better error output

2012-03-29 16:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: typos

2012-03-29 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: tweak on thread concurrency

2012-03-29 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/qdqueue.c, test/features/qlfqueue.c: these tests
	  take too long

2012-03-29 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, src/hazardptrs.c: this should make hi_mt
	  happy

2012-03-29 16:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c, src/hazardptrs.c,
	  src/threadqueues/mtsfifo_threadqueues.c: fixes to make
	  hazardpointers work under extremely heavy contention (alternative
	  is to make freelist dynamic)

2012-03-29 14:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hazardptrs.h, src/ds/qlfqueue.c,
	  src/hazardptrs.c, src/threadqueues/mtsfifo_threadqueues.c: 
	  hazardptr interface should use void* instead of uintptr_t

2012-03-29 14:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c: use hazard pointers, just like mtsfifo (maybe
	  hazardptr interface needs to be public?)

2012-03-29 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qpool.c: add forcibly unpooled version

2012-03-29 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: better debugging, fix an assert

2012-03-29 14:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/hazardptrs.c: add const

2012-03-29 14:41  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: be more flexible with the name of what we are
	  debugging

2012-03-28 23:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/hazardptrs.c: fix for building with mts

2012-03-28 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qt_hazardptrs.h,
	  src/hazardptrs.c, src/qthread.c,
	  src/threadqueues/mtsfifo_threadqueues.c: fix mtsfifo. qlfqueue
	  needs these fixes

2012-03-28 19:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mtsfifo_threadqueues.c: ooookay, this MIGHT be
	  it.

2012-03-28 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mtsfifo_threadqueues.c: please tell me this
	  isn't the bug

2012-03-28 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: whitespace

2012-03-28 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: another memory leak (found with TotalView!)

2012-03-28 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: memory leak (found with TotalView!)

2012-03-28 14:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/omp_defines.h,
	  test/benchmarks/Makefile.am,
	  test/benchmarks/rose_bots/Makefile.am,
	  test/benchmarks/rose_bots/common/rose_bots_common.cc,
	  test/benchmarks/rose_bots/fft/rose_bots_main_fft.cc,
	  test/benchmarks/rose_bots/libxomp.h: more minor build fixes

2012-03-26 22:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/rose_bots/alignment/forloop/param.h,
	  test/benchmarks/rose_bots/alignment/forloop/rose_sequence
	  _alignmentfor.cc,
	  test/benchmarks/rose_bots/alignment/task/param.h,
	  test/benchmarks/rose_bots/alignment/task/rose_alignment_t
	  ask.cc, test/benchmarks/rose_bots/common/bots.h,
	  test/benchmarks/rose_bots/fft/rose_bots_main_fft.cc,
	  test/benchmarks/rose_bots/fib/rose_bots_main_fib.cc,
	  test/benchmarks/rose_bots/nqueens/rose_bots_main_nqueens.
	  cc, test/benchmarks/rose_bots/nqueens/rose_nqueens.cc,
	  test/benchmarks/rose_bots/sort/rose_bots_main_sort.cc,
	  test/benchmarks/rose_bots/sort/rose_sort.cc,
	  test/benchmarks/rose_bots/sparselu/forloop/app-desc.h,
	  test/benchmarks/rose_bots/sparselu/forloop/rose_bots_main
	  _sparselufor.cc,
	  test/benchmarks/rose_bots/sparselu/forloop/rose_sparselu_
	  for.cc,
	  test/benchmarks/rose_bots/sparselu/task/app-desc.h,
	  test/benchmarks/rose_bots/sparselu/task/rose_bots_main_sp
	  arselutask.cc,
	  test/benchmarks/rose_bots/sparselu/task/rose_sparselu_tas
	  k.cc,
	  test/benchmarks/rose_bots/strassen/rose_bots_main_strasse
	  n.cc,
	  test/benchmarks/rose_bots/strassen/rose_strassen.cc,
	  test/benchmarks/rose_bots/strassen/strassen.h: fix a bunch of
	  compiler warnings

2012-03-26 22:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/rose_bots/common/rose_bots_common.cc: need to be
	  VERY conscious of string overload; chances are, the compile string
	  is longer than 128 characters

2012-03-26 22:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/rose_bots/libxomp.h: const/non-const string
	  conversion causes all kinds of compiler warnings

2012-03-26 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/rose_bots/Makefile.am: rose benchmarks in a
	  different location

2012-03-26 20:43  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: Adds Matt Baker's Chapel
	  syncvar patch.

2012-03-26 17:17  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix timelimit detection (I think)

2012-03-26 15:51  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: Adds header when necessary to prevent
	  compiler warnings.

2012-03-23 19:06  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c, src/qthread.c: (qthread.c) reduce Kyle's concerns with reordering -- the
	  	performance here really shouldn't matter since we're throttling
	  threads anyways (qloop.c) initialize a couple of values so that random junk does
	  	not affect first loop iteration

2012-03-22 22:41  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: Clang appears to support GCC command-line arguments

2012-03-22 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: cannot convert from uint64_t* to
	  uint60_t

2012-03-22 19:04  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_febs_graph_test.c,
	  test/benchmarks/generic/time_febs_stream_test.c: whitespace

2012-03-22 19:01  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: improve compiler
	  detection speed (and add a few more compilers

2012-03-22 19:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: fix compiler warning

2012-03-22 15:55  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h,
	  src/interfaces/rose/xomp.c, src/qthread.c,
	  src/rcrtool/bcGen.c, src/rcrtool/common_rcrtool.c,
	  src/rcrtool/maestro_sched.c: Fix up thread throttling code (qt_shepherd_innards.h) make active_workers volatile (xomp.c) set active workers 	require value for rcrtoollevel (bcGen.c) require value for rcrtoollevel 	cleanup code that changes throttling state (maestro_sched.c) cleanup code that changes throttling state (common_rcrtool.c) fix code to decide when to change throttling
	  	state -- left pieces to change between aggressive, passive and
	  	middle ground   -  middle ground is current choice (qthread.c)  require value for rcrtoollevel 	add counter to record the amount of time that a thread is
	  	throttled

2012-03-21 22:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spawncache.c: fix compiler warning by including <stdlib.h>

2012-03-21 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: LLVM gcc frontend takes GCC commandline arguments

2012-03-21 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/benchmarks/Makefile.am: fix the libtool issue;
	  also fix compiling OMP when OMP is not available

2012-03-20 16:29  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/uts/time_uts_aligned.c,
	  test/benchmarks/uts/time_uts_donecount2.c: Sets sane default
	  stack size to prevent segfaults.

2012-03-19 21:47  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/stress/subteams_uts.c: Reduces tree size for stress test to
	  ~500K.

2012-03-19 21:43  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/stress/task_spawn.c: Cleans up whitespace.

2012-03-19 21:42  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_mpool.c: Fixes issue with `block_tail` pointers.

2012-03-19 20:15  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* autogen.sh, configure.in: Changes to fix RENCI's module/build
	  system (autogen.sh) stop build if autoconf fails by returning 1 (configure.in) allow searching for LIBTOOLS rather than expect 	them to be in the same directory as autoconf

2012-03-15 23:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix nworkers_active_lock (initialize and destroy)

2012-03-15 23:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: fix nworkers_active_lock

2012-03-15 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: standardizing printing to the console

2012-03-15 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: make tests rely on building the library

2012-03-15 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initial support for QT_HWPAR: one envariable to
	  rule them all

2012-03-15 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/workers.c: count workers, not shepherds

2012-03-15 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/hello_world_multi.c: hello-world should be simpler

2012-03-14 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: goto unnecessary here

2012-03-14 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better handling of disabled workers (still spins,
	  but now avoids the scheduler (no nanosleep!), and works well with
	  disabling shepherds entirely)

2012-03-09 21:24  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/generic/time_febs_graph_test.c,
	  test/benchmarks/generic/time_febs_stream_test.c: Adds graph and
	  stream FEB benchmarks.

2012-03-09 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: require autoconf 2.61... testing...

2012-03-09 20:02  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/generic/time_febs.c,
	  test/benchmarks/generic/time_prodcons_comm.c: febs benchmarking

2012-03-08 20:39  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: align test names

2012-03-08 18:26  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_febs.c: uncrustified

2012-03-08 18:02  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: more succinct summary

2012-03-08 17:21  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Cleans up a bit: clearer variable naming,
	  better warning/error detection, and building now gets its own log
	  file.

2012-03-08 16:35  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: typo

2012-03-08 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: fix building (I think)

2012-03-07 23:34  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adjusts pass numbering to start from 1.

2012-03-07 23:34  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds support for new testing infrastructure.

2012-03-07 18:26  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, test/stress/Makefile.am,
	  test/stress/subteams_uts.c: Cleans up subteams code.

2012-03-07 18:12  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/Makefile.am, test/features/Makefile.am: allow
	  users to use pooled memory, even if the core does not

2012-03-07 18:03  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/sincs/donecount.c, src/sincs/donecount_cas.c,
	  src/sincs/original.c, test/basics/sinc_null.c: Adds support for
	  creating a sinc with no participants.

2012-03-07 18:03  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/features/Makefile.am: Excludes certain tests when not using
	  pooled memory.

2012-03-07 18:03  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/basics/hello_world.c: Declares .

2012-03-07 17:23  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, src/qthread.c: Adds a "copyargs"
	  version of `qthread_fork_new_subteam()`.

2012-03-07 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/Makefile.am, test/basics/hello_world.c,
	  test/basics/hello_world_multi.c: simpler tests, to make certain
	  people happy

2012-03-07 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS, include/qthread/qthread.h: bump to avoid version issues

2012-03-06 22:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/macros.h: macros.h

2012-03-06 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, test/Makefile.am: more convenience targets

2012-03-06 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* test/stress/Makefile.am, test/stress/precond_fib.c,
	  test/stress/syncvar_stream.c, test/stress/task_spawn.c,
	  test/stress/test_precond_fib.c,
	  test/stress/test_syncvar_stream.c,
	  test/stress/test_task_spawn.c: more renaming for clarity

2012-03-06 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* test/features/Makefile.am, test/features/allpairs.c,
	  test/features/cxx_futurelib.cpp,
	  test/features/cxx_qt_loop.cpp,
	  test/features/cxx_qt_loop_balance.cpp,
	  test/features/feb_barrier.c, test/features/log_barrier.c,
	  test/features/qarray.c, test/features/qarray_accum.c,
	  test/features/qdqueue.c, test/features/qlfqueue.c,
	  test/features/qloop_utils.c, test/features/qpool.c,
	  test/features/qt_loop.c, test/features/qt_loop_balance.c,
	  test/features/qt_loop_balance_sinc.c,
	  test/features/qt_loop_queue.c,
	  test/features/qt_loop_sinc.c, test/features/qutil.c,
	  test/features/qutil_qsort.c,
	  test/features/test_allpairs.c,
	  test/features/test_cxx_1.cpp,
	  test/features/test_cxx_2.cpp,
	  test/features/test_cxx_oldapi.cpp,
	  test/features/test_feb_barrier.c,
	  test/features/test_log_barrier.c,
	  test/features/test_qarray.c,
	  test/features/test_qarray_accum.c,
	  test/features/test_qdqueue.c,
	  test/features/test_qlfqueue.c,
	  test/features/test_qloop_utils.c,
	  test/features/test_qpool.c, test/features/test_qt_loop.c,
	  test/features/test_qt_loop_balance.c,
	  test/features/test_qt_loop_balance_sinc.c,
	  test/features/test_qt_loop_sinc.c,
	  test/features/test_queue_loop.c,
	  test/features/test_qutil.c,
	  test/features/test_qutil_qsort.c,
	  test/features/test_wavefront.c, test/features/wavefront.c: more
	  renaming for clarity

2012-03-06 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/allpairs.h,
	  include/qthread/feb_barrier.h, include/qthread/qarray.h,
	  include/qthread/qdqueue.h, include/qthread/qlfqueue.h,
	  include/qthread/qpool.h, include/qthread/qthread-sst.h,
	  include/qthread/qthread.h, src/ds/qpool.c: tidying up

2012-03-06 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qpool.h, src/ds/qpool.c: should fix a bunch of
	  bugs in things that relied on the old-and-busted memory pool
	  implementation (read: qlfqueue and qdqueue); also, MASSIVE
	  performance improvement (3 orders of magnitude)

2012-03-06 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: remove brian's ancient FIXME

2012-03-06 21:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/Makefile.am, test/basics/aligned_prodcons.c,
	  test/basics/arbitrary_blocking_operation.c,
	  test/basics/external_fork.c,
	  test/basics/external_syncvar.c, test/basics/qalloc.c,
	  test/basics/qthread_cacheline.c,
	  test/basics/qthread_cas.c, test/basics/qthread_dincr.c,
	  test/basics/qthread_disable_shepherd.c,
	  test/basics/qthread_fincr.c,
	  test/basics/qthread_fork_precond.c,
	  test/basics/qthread_id.c, test/basics/qthread_incr.c,
	  test/basics/qthread_migrate_to.c,
	  test/basics/qthread_stackleft.c, test/basics/qtimer.c,
	  test/basics/read.c, test/basics/reinitialization.c,
	  test/basics/sinc.c, test/basics/sinc_null.c,
	  test/basics/syncvar_prodcons.c,
	  test/basics/tasklocal_data.c,
	  test/basics/tasklocal_data_no_argcopy.c,
	  test/basics/tasklocal_data_no_default.c,
	  test/basics/test_basic.c,
	  test/basics/test_basic_syncvar.c,
	  test/basics/test_cacheline.c, test/basics/test_cas.c,
	  test/basics/test_dincr.c, test/basics/test_disabled.c,
	  test/basics/test_external_fork.c,
	  test/basics/test_external_syncvar.c,
	  test/basics/test_fincr.c, test/basics/test_id.c,
	  test/basics/test_incr.c, test/basics/test_migrate.c,
	  test/basics/test_precond.c, test/basics/test_qalloc.c,
	  test/basics/test_qtimer.c, test/basics/test_read.c,
	  test/basics/test_reinit.c, test/basics/test_sinc.c,
	  test/basics/test_sinc_null.c,
	  test/basics/test_stackleft.c, test/basics/test_syncvar.c,
	  test/basics/test_tasklocal.c,
	  test/basics/test_tasklocal_no_argcopy.c,
	  test/basics/test_tasklocal_no_default.c,
	  test/basics/test_user_defined_block.c,
	  test/stress/Makefile.am,
	  test/stress/syncvar_prodcons_contended.c: renaming to enhance
	  clarity

2012-03-06 21:19  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h, include/qt_io.h,
	  include/qt_mpool.h, src/locks.c,
	  src/net/portals4/portals4.c, src/qt_feb_barrier.c,
	  src/qt_mpool.c, src/qthread.c, src/sincs/donecount.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: consistency in mpool

2012-03-06 20:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test/basics/test_stackleft.c: fewer iterations; this is a basic
	  test

2012-03-05 22:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: fix memory leak

2012-03-05 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spawncache.c: free the last spawncache

2012-03-05 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am, test/basics/Makefile.am,
	  test/basics/test_basic.c,
	  test/basics/test_basic_syncvar.c,
	  test/basics/test_cacheline.c, test/basics/test_cas.c,
	  test/basics/test_dincr.c, test/basics/test_disabled.c,
	  test/basics/test_external_fork.c,
	  test/basics/test_external_syncvar.c,
	  test/basics/test_fincr.c, test/basics/test_id.c,
	  test/basics/test_incr.c, test/basics/test_migrate.c,
	  test/basics/test_precond.c, test/basics/test_qalloc.c,
	  test/basics/test_qtimer.c, test/basics/test_read.c,
	  test/basics/test_reinit.c, test/basics/test_sinc.c,
	  test/basics/test_sinc_null.c,
	  test/basics/test_stackleft.c,
	  test/basics/test_subteams.c, test/basics/test_syncvar.c,
	  test/basics/test_tasklocal.c,
	  test/basics/test_tasklocal_no_argcopy.c,
	  test/basics/test_tasklocal_no_default.c,
	  test/basics/test_teams.c,
	  test/basics/test_user_defined_block.c,
	  test/features/Makefile.am, test/features/test_allpairs.c,
	  test/features/test_cxx_1.cpp,
	  test/features/test_cxx_2.cpp,
	  test/features/test_cxx_oldapi.cpp,
	  test/features/test_feb_barrier.c,
	  test/features/test_log_barrier.c,
	  test/features/test_qarray.c,
	  test/features/test_qarray_accum.c,
	  test/features/test_qdqueue.c,
	  test/features/test_qlfqueue.c,
	  test/features/test_qloop_utils.c,
	  test/features/test_qpool.c, test/features/test_qt_loop.c,
	  test/features/test_qt_loop_balance.c,
	  test/features/test_qt_loop_balance_sinc.c,
	  test/features/test_qt_loop_sinc.c,
	  test/features/test_queue_loop.c,
	  test/features/test_qutil.c,
	  test/features/test_qutil_qsort.c,
	  test/features/test_wavefront.c,
	  test/multinode/Makefile.am, test/stress/Makefile.am,
	  test/stress/test_precond_fib.c,
	  test/stress/test_syncvar_stream.c,
	  test/stress/test_task_spawn.c, test/test_allpairs.c,
	  test/test_basic.c, test/test_basic_syncvar.c,
	  test/test_cacheline.c, test/test_cas.c,
	  test/test_cxx_1.cpp, test/test_cxx_2.cpp,
	  test/test_cxx_oldapi.cpp, test/test_dincr.c,
	  test/test_disabled.c, test/test_external_fork.c,
	  test/test_external_syncvar.c, test/test_feb_barrier.c,
	  test/test_fincr.c, test/test_id.c, test/test_incr.c,
	  test/test_log_barrier.c, test/test_migrate.c,
	  test/test_precond.c, test/test_precond_fib.c,
	  test/test_qalloc.c, test/test_qarray.c,
	  test/test_qarray_accum.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c, test/test_qloop_utils.c,
	  test/test_qpool.c, test/test_qt_loop.c,
	  test/test_qt_loop_balance.c,
	  test/test_qt_loop_balance_sinc.c,
	  test/test_qt_loop_sinc.c, test/test_qtimer.c,
	  test/test_queue_loop.c, test/test_qutil.c,
	  test/test_qutil_qsort.c, test/test_read.c,
	  test/test_reinit.c, test/test_sinc.c,
	  test/test_sinc_null.c, test/test_stackleft.c,
	  test/test_subteams.c, test/test_syncvar.c,
	  test/test_syncvar2.c, test/test_tasklocal.c,
	  test/test_tasklocal_no_argcopy.c,
	  test/test_tasklocal_no_default.c, test/test_teams.c,
	  test/test_user_defined_block.c, test/test_wavefront.c: refactor
	  testing structure to establish different test categories

2012-03-05 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: another test for the nightlies

2012-03-02 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/benchmarks/Makefile.am,
	  test/multinode/Makefile.am: better multinode check, better
	  benchmark cleanup

2012-03-02 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am,
	  test/multinode/Makefile.am: make check works with multinode now

2012-03-02 21:17  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/test_init.c: Updates `multinode/test_init` to run
	  on one node.

2012-03-02 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_portals4.m4, configure.in,
	  include/qthread/Makefile.am, include/qthread/multinode.h,
	  include/qthread/qthread_multinode.h, src/Makefile.am,
	  src/net/net.c, src/qthread.c, test/Makefile.am,
	  test/multinode/hello_world.c, test/multinode/ring.c,
	  test/multinode/test_init.c, test/multinode/uts.c: stylistic fixes
	  to the build system

2012-03-02 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/net/portals4/portals4.c: use the right ENUM value

2012-03-01 23:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fixed the biggest performance hog (read: dont
	  initialize a whole block of new blobs; initialize them as
	  necessary)

2012-03-01 23:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadstate.h: unnecessary special value

2012-03-01 23:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/uts/time_uts_donecount2.c: level-synchronized
	  donecount

2012-03-01 00:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: avoid filling out the whole allocation block in
	  one fell swoop

2012-03-01 00:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h: this should have changed a while ago

2012-02-29 23:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: machine fence is unnecessary here (as best as I
	  can figure); speed boost

2012-02-29 23:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix memory leak

2012-02-29 22:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: avoid unnecessary memory dereference

2012-02-29 22:48  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fixes teams-related bug when spawning into a real
	  team.

2012-02-29 22:05  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qt_debug.h,
	  include/qt_qthread_struct.h, include/qthread/qthread.h,
	  src/qthread.c, test/Makefile.am, test/test_subteams.c,
	  test/test_teams.c: Checkpoints extensions for subteams support.

2012-02-27 17:01  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/Makefile.am, test/multinode/hello_world.c,
	  test/multinode/multinode_hello_world.c,
	  test/multinode/test_init.c,
	  test/multinode/test_uts_multinode.c,
	  test/multinode/uts.c, test/test_multinode_init.c: Cleans up
	  multinode testing directory.

2012-02-27 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c: fix error in nightlies

2012-02-23 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: fix from 1.7.1

2012-02-23 22:51  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am: Adds `test_multinode_init` to EXTRA_PROGRAMS.

2012-02-23 22:29  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am: Removes `test_multinode_init` from set of test
	  run with `make check`

2012-02-23 19:58  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/test_multinode_init.c: Remove single shep hardcoding for
	  multinode init test.

2012-02-23 19:56  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/sherwood_threadqueues.c: Adds test to make sure
	  there is another shepherd to steal from before trying to steal.

2012-02-23 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: use same logic as febs for unblocking

2012-02-23 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/syncvar.c: more extensively leverage spawncache in
	  febs; improves time_fib performance

2012-02-23 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/spawncache.c: malloc.h

2012-02-23 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/syncvar.c: leverage spawncache to improve
	  feb/syncvar wakeup behavior

2012-02-23 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/Makefile.am,
	  include/qt_spawncache.h, include/qt_threadqueues.h,
	  src/Makefile.am, src/qthread.c, src/spawncache.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: improve spawncache
	  handling

2012-02-22 23:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: really fix it

2012-02-22 23:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: fix distances in oversubscription

2012-02-22 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: update comment

2012-02-22 22:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/feb.c: uncrustify

2012-02-22 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: whitespace

2012-02-22 22:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: hwloc distance matrix acting strangely...
	  move to direct request

2012-02-22 22:21  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/portals4/runtime-mpi.c: Updates call to `PtlNIInit()` to
	  use new interface.

2012-02-22 22:19  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread_innards.h, src/feb.c, src/qthread.c: Pushes call
	  to `qt_feb_subsystem_shutdown()` later in teardown to prevent
	  `generic_addrstat_pool` from being freed too early.

2012-02-22 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: preliminary distance support

2012-02-22 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_hwloc.m4: detect hwloc distance features

2012-02-22 18:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_omp_fib.c: report correct thread numbers

2012-02-22 18:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_omp_task_spawn.c: report correct thread
	  numbers

2012-02-22 18:21  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: improve MIC behavior (random
	  CPUID call)

2012-02-22 18:01  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_swapcontext.m4: report test for context swap
	  impl

2012-02-22 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4: detect MIC asm

2012-02-22 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: avoid Intel compiler warnings

2012-02-22 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: fix syntax confusion

2012-02-22 15:44  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: try to deal with MIC drawback

2012-02-22 03:11  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4: detect LLVM bug in
	  __sync_fetch_and_add

2012-02-22 03:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: remove unused #def

2012-02-22 03:10  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore autogenerated files

2012-02-20 17:45  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_syncvar.c: performance tweak (less
	  runtime variability)

2012-02-20 16:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, src/shepherds.c: some headers to avoid compiler
	  warnings

2012-02-19 03:33  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/multinode/Makefile.am, test/multinode/ring.c: Adds a
	  multinode ring example.

2012-02-18 23:57  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl, test/multinode/Makefile.am,
	  test/multinode/multinode_hello_world.c: Adds a multinode "Hello,
	  World!".

2012-02-18 17:28  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, test/Makefile.am,
	  test/multinode/Makefile.am,
	  test/multinode/test_uts_multinode.c: Adds a test directory for
	  experimenting with multinode codes.  Starts off multinode codes with a distributed UTS implementation.

2012-02-18 00:15  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/test_multinode_init.c: Sets `QT_MULTINODE` envar to enable
	  multinode initialization.  Note that the test still fails a `make check` because it needs to
	  be run with `yod`.

2012-02-18 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: a safety thing; free pool *late*, not early

2012-02-18 00:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_internal_feb.h, src/feb.c, src/qthread.c: move
	  addrstat and addrres pool management into feb subsystem

2012-02-17 23:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c, src/qthread.c: whitespace

2012-02-17 23:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/qthread.c, src/shepherds.c,
	  src/workers.c: separate out worker functions

2012-02-17 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, src/Makefile.am,
	  src/qthread.c, src/shepherds.c: separate out shepherd functions

2012-02-17 23:00  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/net/net.c: Fixes two header includes.

2012-02-17 23:00  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in: Adds `multinode` option to configure help string;
	  alphabetizes debug areas list.

2012-02-17 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h,
	  src/threadqueues/sherwood_threadqueues.c: Dylan's fix

2012-02-10 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_profiling.h: uncrustify

2012-02-10 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/compat_atomics.c: uncrustify

2012-02-10 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: simplify unstealable
	  detection

2012-02-10 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_profiling.h, src/Makefile.am,
	  src/compat_atomics.c, src/feb.c, src/locks.c: separated out
	  compatible atomic ops

2012-02-10 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: TERM tasks should be unstealable

2012-02-09 05:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/uts/time_uts_aligned.c: aligned version of uts

2012-02-07 18:11  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Adds support for
	  propagating serial state to subtasks.

2012-02-07 18:04  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Initializes `lockers_in`
	  and `lockers_out`.

2012-02-07 18:03  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.h: Reverts sync variable
	  code pending further testing.

2012-02-07 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* : fleshing out the svn:ignore lists

2012-02-06 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: 1.7.1

2012-02-06 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, include/qt_threadqueues.h,
	  src/qthread.c, src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: fix a few (hard to
	  reproduce) memory corruption issues

2012-02-06 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_locks.h: use fastlocks internally

2012-02-06 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: use fastlocks internally

2012-02-06 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h, src/io.c: fix the ordering of freeing the queue
	  items (read: don't free queue items until I'm actually done with
	  them)

2012-02-06 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: allow debugging other systems

2012-02-06 16:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h: use cached mpool

2012-02-03 23:54  Kyle Wheeler <kbwheel@sandia.gov>

	* man/htmlize.sh: 

2012-02-03 23:53  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: update TODO

2012-02-03 23:40  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: preparing for release of 1.7.1

2012-02-03 23:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: more sanity checks

2012-02-03 23:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/no.c: add a quick debug line

2012-02-03 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: ALWAYS generate distances

2012-02-03 22:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: test_signal is not ready for prime-time (fails
	  on Itanium and Sparc)

2012-02-03 21:55  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/feb.c: Fixes error when no current task id is available.

2012-02-03 21:29  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: better compatibility with old
	  compilers (i.e. without __sync_synchronize())

2012-02-03 20:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: better behavior on certain machines

2012-02-03 18:33  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.h: Adds patch from Matthew
	  Baker which optimizes Chapel sync (and single) variable usage for
	  certain data types.

2012-02-03 16:18  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Removes old include that
	  is not used any longer.

2012-02-03 00:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_syncvar.c: help-first

2012-02-02 23:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: revert last commit
	  (performance bug)

2012-02-02 23:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: avoid unnecessary
	  iterating over the stolen task list

2012-02-02 23:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_donecount.c: help-first

2012-02-02 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_threadqueues.h, src/qthread.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: spawn-cache

2012-02-02 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/syncvar.c: allow the scheduler to do some
	  non-blocking operations

2012-02-02 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: pthread_spin_init uses a different
	  interface than pthread_mutex_init

2012-02-02 17:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: support for the previous commit

2012-02-02 17:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: better handling of PTHREAD_PROCESS_PRIVATE

2012-02-02 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_pthreads.m4, configure.in: detect more
	  pthread features

2012-02-02 14:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c: fix typo

2012-02-01 23:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h, src/qthread.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: ditch QMS_ARG

2012-02-01 23:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_macros.h: better UNUSED macro

2012-02-01 23:15  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: better UNUSED macro

2012-02-01 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_syncvar.c: add a way of doing it
	  without enlarging QT_STACK_SIZE

2012-02-01 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_omp.c: make it a bit more like the
	  BOTS version

2012-02-01 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_halo_swap_all.c: fix Intel compiler
	  warning

2012-02-01 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_cilk.c,
	  test/benchmarks/uts/time_uts_donecount.c,
	  test/benchmarks/uts/time_uts_omp.c,
	  test/benchmarks/uts/time_uts_sinc.c,
	  test/benchmarks/uts/time_uts_syncvar.c,
	  test/benchmarks/uts/time_uts_tbb.cc: removing compiler warnings
	  in envariable handling, reformatting

2012-02-01 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_signal.c: use COMPILER_FENCE and MACHINE_FENCE macros
	  for compatibility

2012-02-01 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4,
	  config/qthread_check_attributes.m4: more reliable detection of
	  COMPILER_FENCE on Intel MIC

2012-02-01 14:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: uncrustified

2012-01-31 23:31  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/sherwood_threadqueues.c: Some clean up in
	  Sherwood scheduler.

2012-01-31 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c: revert r2862

2012-01-31 20:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h, src/feb.c, src/io.c,
	  src/locks.c, src/qthread.c, src/syncvar.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: remove unused "shep"
	  argument to threadqueue enqueue operations

2012-01-31 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore cscope files too

2012-01-31 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix compiler kvetching when in debug-mpool mode

2012-01-31 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c: remove unused
	  functions qt_threadqueue_init_pools and
	  qt_threadqueue_destroy_pools

2012-01-31 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: remove empty #if 0

2012-01-31 19:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: align threadqueues to
	  cachelines, avoid doing unnecessary memset()s or calloc()s, and
	  tidy up the code a little

2012-01-31 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: optimization:
	  pre-determine whether a thread is stealable, and cache that data in
	  the node_t; also, use this to determine whether to
	  increment/decrement qlen_stealable

2012-01-31 18:07  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/sherwood_threadqueues.c: Reduces number of
	  iterations over victim queue in dequeue_steal() by 1. remembering
	  the most recent unstealable item and 2. stealing consecutive
	  stealable items in one pass.

2012-01-31 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2.c: improved cpu-pinning behavior for
	  multithreaded shepherds (workers get pinned to single cores, rather
	  than entire nodes)

2012-01-30 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_cilk_eager_future.c,
	  test/benchmarks/mt/time_cilk_fib.c,
	  test/benchmarks/mt/time_cilk_task_spawn.c,
	  test/benchmarks/mt/time_eager_future.c,
	  test/benchmarks/mt/time_fib.c,
	  test/benchmarks/mt/time_omp_eager_future.c,
	  test/benchmarks/mt/time_omp_fib.c,
	  test/benchmarks/mt/time_omp_task_spawn.c,
	  test/benchmarks/mt/time_task_spawn.c,
	  test/benchmarks/mt/time_tbb_eager_future.cc,
	  test/benchmarks/mt/time_tbb_fib.cc,
	  test/benchmarks/mt/time_tbb_task_spawn.cc: formatting via
	  uncrustify, so that SLOC can be consistently counted

2012-01-30 19:00  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: prefer hwloc

2012-01-30 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: minor tweak to further
	  reduce contention for the shepherd queue lock

2012-01-30 15:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: slightly faster trylock implementation
	  (same basic idea, but avoids unnecessary CAS operations; also,
	  word-size operations seem faster than half-word operations)

2012-01-30 14:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: cleanup previous commit

2012-01-30 14:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: remove compiler warning

2012-01-28 13:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: fix assert

2012-01-28 02:59  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/mt/time_cilk_eager_future.c,
	  test/benchmarks/mt/time_cilk_task_spawn.c,
	  test/benchmarks/mt/time_eager_future.c,
	  test/benchmarks/mt/time_omp_eager_future.c,
	  test/benchmarks/mt/time_omp_task_spawn.c,
	  test/benchmarks/mt/time_task_spawn.c,
	  test/benchmarks/mt/time_tbb_eager_future.cc,
	  test/benchmarks/mt/time_tbb_task_spawn.cc: Removes unused
	  workload-related code.

2012-01-27 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: Major speedup to
	  multi-shepherd (non-pure-workstealing) case when there is a large
	  amount of load-imbalance (i.e. lots of stealing). I did this by
	  creating a tight loop to wait for the elected thief rather than
	  contend for the lock on the shared queue.

2012-01-27 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: pthread spinlocks are faster than the internal ones
	  (not sure why)

2012-01-27 19:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: Some significant
	  performance improvements. First, switched the amount of work stolen
	  from num_workers_per_shep to 1/2 of the work available to be
	  stolen. The idea here is that doing so helps reduce the contention
	  for the spinlock in highly imbalanced situations by giving
	  additional viable targets for thievery, rather than a single target
	  with an overabundance of tasks. Second, given that there is more
	  likely to be additional sources of tasks, I changed the spinlock to
	  a trylock, to allow contended queues to be skipped in favor of
	  uncontended queues. There's probably more work that could be done
	  here to balance the cost of contention with the cost of
	  long-distance communication, but I'll leave that for a later time.

2012-01-27 18:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: some minor tweaks for performance, added
	  tmc trylocks

2012-01-27 16:00  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, src/interfaces/rose/xomp.c,
	  src/qthread.c: Fix reuse of loop structures so that we don't get
	  multiple loops trying to use the same memory Discovered while
	  testing code to measure Adaptive Scheduling idle time (qloop_innards.h) need count of expected workers so know when
	  structure idle (xomp.c)test to see if loop structure is idle (and reinitialize) (qthread.c) add code to measure adaptive scheduling idle time 	reduce likelyhood of loop reuse problem

2012-01-26 20:59  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_tbb.cc: use task_lists

2012-01-26 20:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_tbb_eager_future.cc,
	  test/benchmarks/mt/time_tbb_fib.cc,
	  test/benchmarks/mt/time_tbb_task_spawn.cc,
	  test/benchmarks/uts/time_uts_tbb.cc: tbb versions

2012-01-25 19:29  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/mt/time_fib.c: Updates output to give total
	  number of workers used, not total number of shepherds.

2012-01-25 19:19  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/mt/time_omp_task_spawn.c: Removes unused
	  variable.

2012-01-25 19:14  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/mt/time_eager_future.c: Removes unused variable.

2012-01-24 23:06  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/uts/time_uts_omp.c: reverse translation: omp uts

2012-01-24 22:47  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/uts/time_uts_cilk.c: cilk uts

2012-01-24 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/mt/time_cilk_eager_future.c,
	  test/benchmarks/mt/time_cilk_task_spawn.c,
	  test/benchmarks/mt/time_omp_eager_future.c,
	  test/benchmarks/mt/time_omp_for_task_spawn.c,
	  test/benchmarks/mt/time_omp_nofor_task_spawn.c,
	  test/benchmarks/mt/time_omp_task_spawn.c,
	  test/benchmarks/mt/time_task_spawn.c: unify interfaces

2012-01-24 18:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_eager_future.c: par and nopar fork

2012-01-24 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_cilk_eager_future.c,
	  test/benchmarks/mt/time_omp_eager_future.c: cilk eager future

2012-01-24 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_cilk_fib.c: cilk fib

2012-01-24 17:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/generic/time_fib.c,
	  test/benchmarks/mt/time_fib.c,
	  test/benchmarks/mt/time_omp_fib.c: qt and omp fib

2012-01-23 18:33  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_cilk_task_spawn.c: fix compiling

2012-01-20 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/mt/time_cilk_task_spawn.c: i lied

2012-01-20 18:52  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/mt/time_omp_for_task_spawn.c,
	  test/benchmarks/mt/time_omp_nofor_task_spawn.c,
	  test/benchmarks/mt/time_omp_task_spawn.c: Refactors OMP codes
	  based on parallel loop.

2012-01-20 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/generic/time_threading.omp.c,
	  test/benchmarks/mt/time_eager_future.c,
	  test/benchmarks/mt/time_omp_eager_future.c,
	  test/benchmarks/mt/time_omp_task_spawn.c,
	  test/benchmarks/mt/time_task_spawn.c: openmp benchmarks (for
	  comparison)

2012-01-20 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_openmp.m4, configure.in: detect openmp

2012-01-19 23:25  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/mt/time_eager_future.c,
	  test/benchmarks/mt/time_task_spawn.c: Adds a new set of tiny
	  ``benchmark'' codes.

2012-01-17 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: small simplification

2012-01-17 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: small simplification

2012-01-17 15:16  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/sincs/snzi.c: snzi sincs (needs performance
	  work)

2012-01-16 18:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/uts/time_uts_donecount.c,
	  test/benchmarks/uts/time_uts_sinc.c,
	  test/benchmarks/uts/time_uts_syncvar.c: Strips down UTS codes to
	  more closely match BOTS implementation.

2012-01-16 16:55  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h, include/qt_task_counter.h,
	  include/qthread_innards.h, src/qthread.c,
	  src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c: Several performance
	  improvements on BOTS benchmarks with no manual cutoff.  - qt_task_counter.h: eliminating error checking,                      could be reintroduced as assert() statements.  - include/qthread_innards.h: adding a cache of (qt_threadqueue_t*)
	                               pointers to the qlib struct. Accessing                              qlib->shepherds[i]->ready incurs
	                               false-sharing, so we cache the
	  read-only pointers in this location.  - include/qt_shepherd_innards.h: adding a cachline of unused memory
	                                   as padding between shepherds.  - src/threadqueues/loxleybase_threadqueues.c: rearranging data
	  placement - src/threadqueues/loxley_threadqueues.c: rearranging data
	  placement - src/qthread.c: eliminating unused "shepherd" argument to
	                   qthread_thread_new().  Also taking advantage of qlib->threadqueues
	  cache (see include/qthread_innards.h)

2012-01-13 18:41  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, src/interfaces/rose/xomp.c, src/qthread.c,
	  src/rcrtool/bcGen.c, src/rcrtool/blackboard.h,
	  src/rcrtool/common_rcrtool.c: fixed to the Dynamic Adaptive
	  Scheduling (configure.in) add new flag to print sdaptive stats (xomp.c) use SPINLOCK_BODY rather than doing it myself (bcGen.c) Count times desired thread count changes (blackboard.h) use subset of new C++ shared memory region header (common_rcrtool.c) speed upo - allocate shared memory region once 	not every iteration (and don't delete) (qthread.c)  use SPINLOCK_BODY rather than doing it myself 	add stats for adaptive scheduling 	move worker init so that adaptive monitor thread get pinned to 		correct core

2012-01-12 22:20  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, src/sincs/donecount_cas.c: Adds a CAS-based
	  donecount.

2012-01-12 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sincs/donecount.c: remove compiler warnings

2012-01-12 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: unnecessary #defs

2012-01-12 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_sinc.h, include/sincs/donecount.h,
	  include/sincs/original.h, src/sincs/donecount.c,
	  src/sincs/original.c: improve sinc interface definition (remove
	  unnecessary stuff)

2012-01-12 21:00  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qthread/qt_sinc.h,
	  include/sincs/donecount.h, include/sincs/original.h,
	  src/Makefile.am, src/qt_sinc.c, src/sincs/donecount.c,
	  src/sincs/original.c: Refactors sincs code to support multiple
	  implementations.  Select an implementation with `--with-sinc=`. The new 'donecount'
	  implementation is now the default. The original version is still
	  available by as 'original'.

2012-01-12 15:03  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, man/man3/qthread_id.3,
	  src/interfaces/chapel/tasks-qthreads.h, src/qthread.c,
	  test/test_id.c: Updates task id support with distinct NULL and
	  "not really a qthreads thread" identifiers (QTHREAD_NULL_TASK_ID
	  and QTHREAD_NON_TASK_ID, resp.).

2012-01-06 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c: profiling code cannot modify the extras variable

2012-01-06 23:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c: compile without sinc profiling

2012-01-06 21:07  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qt_sinc.h, src/qt_sinc.c: Finishes adding
	  counters.

2012-01-06 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c: no need to read remaining before incrementing it

2012-01-06 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c: minor optimization: use local shepherd workers
	  first, also use shepherds in order of distance

2012-01-06 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_sinc.h, src/qt_sinc.c: fix profiling datatype
	  offset logic

2012-01-06 17:29  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qthread/qt_sinc.h,
	  scripts/build.pl, src/qt_sinc.c: Replaces '--enable-sinc-stats'
	  configuration option with '--enable-profiling=sincs' option.

2012-01-06 16:43  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/uts/time_uts_sinc.c: Moves sinc destruction
	  outside of timed portion.

2012-01-06 16:43  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds an option to turn on sinc stats.

2012-01-06 16:28  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qt_sinc.h, src/qt_sinc.c: Adds initial support
	  for sinc stats collection.

2012-01-06 16:28  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in: Adds support for enabling sinc stats.

2012-01-06 15:16  Kyle Wheeler <kbwheel@sandia.gov>

	* : crufty directory

2012-01-05 23:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_sinc.h, src/qt_sinc.c: optimize for the fact
	  that sizeof_count is known at compile-time

2012-01-05 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_sinc.h, src/qt_sinc.c: much simplifying and
	  (hopefully) optimization; using incr instead of cas to reduce
	  atomic traffic

2012-01-05 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: add a way to find the
	  current (shepherd-relative) worker ID

2012-01-04 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, test/test_signal.c: make signal-killing compatible
	  with single-threaded shepherds

2012-01-04 15:16  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_signal.c: non-obviously, this bends to the whims of
	  assert toggling

2012-01-03 20:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadstate.h, src/qthread.c,
	  test/Makefile.am, test/test_signal.c: signal-based task
	  termination (you heard me) BWAHAHAHAHA!

2012-01-03 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c, src/qthread.c: better
	  environment manipulation (prefer setenv to putenv)

2011-12-22 16:34  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/loxley_threadqueues.c,
	  src/threadqueues/loxleybase_threadqueues.c: Dynamic penalty
	  adjustment in loxley enqueue contention management.  Also adding the file loxleybase_threadqueues.c, which is the
	  barebones version of loxley that does not contain contention
	  management. This scheduler should be used solely for benchmark
	  purposes.

2011-12-21 15:42  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/loxley_threadqueues.c: Fix an operator
	  precedence bug in loxley enqueue.

2011-12-20 19:00  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_threadqueue_stack.h,
	  src/threadqueues/loxley_threadqueues.c: Improvements to loxley
	  contention management.

2011-12-16 14:42  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_atomics.h,
	  src/threadqueues/loxley_threadqueues.c: Cleaning up my mistakes
	  in the trylock implementation.

2011-12-15 14:10  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_atomics.h, include/qthread/qthread.h,
	  src/threadqueues/loxley_threadqueues.c: Contention management on
	  loxley scheduler.  The loxley scheduler now has an array of local stacks that are used
	  as a backup in case of contention on the primary stacks. Contention
	  is determined indirectly from a failure to acquire a tryLock()
	  protecting the shared stacks.  Spinning mutexes with a trylock() functionality have been added to
	  qt_atomics.h. If QTHREAD_ATOMIC_INCR is defined, then a fast
	  implementation is used. Otherwise the pthreads implementation is
	  used as a fallback.

2011-12-14 13:58  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qt_threadqueue_stack.h,
	  src/threadqueues/loxley_threadqueues.c: Initial commit of the
	  loxley scheduler.  The loxley scheduler is nearly identical to sherwood, in that both
	  schedulers are protected by a giant lock. However, the loxley stack
	  is implemented as a contiguous region of memory, whereas the
	  sherwood stack is implemented as a linked list. We intend to use
	  loxley as a testing framework for various extensions that will
	  reduce contention on the shared stack.

2011-12-13 23:23  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4, include/qt_atomics.h,
	  include/qthread/qthread.h: AIX-compatible assembly labels

2011-12-13 21:11  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/generic/time_fib.c: Adds timed Fibonacci code.

2011-12-12 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/tilera.c: whitespace

2011-12-12 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: fix `make distcheck`

2011-12-12 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: fix `make distcheck`

2011-12-12 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/benchmarks/Makefile.am: dist_subdirs

2011-12-12 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* COPYING, test/Makefile.am, test/benchmarks/Makefile.am,
	  test/benchmarks/uts/rng/AUTHORS,
	  test/benchmarks/uts/rng/LICENSE,
	  test/benchmarks/uts/rng/brg_endian.h,
	  test/benchmarks/uts/rng/brg_sha1.c,
	  test/benchmarks/uts/rng/brg_sha1.h,
	  test/benchmarks/uts/rng/brg_types.h,
	  test/benchmarks/uts/rng/rng.h,
	  test/benchmarks/uts/time_uts_donecount.c,
	  test/benchmarks/uts/time_uts_sample_trees.sh,
	  test/benchmarks/uts/time_uts_sinc.c,
	  test/benchmarks/uts/time_uts_syncvar.c,
	  test/time_uts_donecount.c, test/time_uts_sample_trees.sh,
	  test/time_uts_sinc.c, test/time_uts_syncvar.c: the UTS random
	  number generator

2011-12-12 16:21  michael.m.spiegel@gmail.com <michael.m.spiegel@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fix a premature memory deallocation.  Moving the deallocation of 'stealbuffer' and 'nostealbuffer' until
	  after a worker thread has joined with its parent thread.

2011-12-12 16:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: a team flag

2011-12-12 16:05  Kyle Wheeler <kbwheel@sandia.gov>

	* README: Tilera addition

2011-12-08 23:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, include/qthread/qthread.h: the
	  qt_team_t struct should be private

2011-12-08 23:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qdqueue.c: use teams

2011-12-08 17:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qlfqueue.c: use teams

2011-12-08 17:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: the first member of a team can be used to wait for
	  the team

2011-12-08 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qlfqueue.c: use sincs

2011-12-08 16:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: no need to use for-loop

2011-12-08 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: forgot to update the executable name

2011-12-08 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_cpp.cpp,
	  test/test_cpp_interface.cpp, test/test_cxx_1.cpp,
	  test/test_cxx_2.cpp: rename cxx tests for more accuracy

2011-12-08 15:42  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmark.c: crufty file; once upon a time, it got renamed
	  to test_qutil

2011-12-08 15:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qloop_utils.c,
	  test/testqloop.c: more informative (and consistent) file naming

2011-12-08 15:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qalloc.c, test/testq.c: more
	  informative (and consistent) file naming

2011-12-08 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_cxx_oldapi.cpp,
	  test/testloop.cpp: more informative (and consistent) file naming

2011-12-08 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_incr.c, test/testincr.c: consistency
	  in file naming (incr)

2011-12-08 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_fincr.c, test/testfincr.c: 
	  consistency in file naming (fincr)

2011-12-08 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_dincr.c, test/testdincr.c: 
	  consistency in file naming (dincr)

2011-12-08 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_disabled.c: use qthread_init instead

2011-12-08 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_precond.c: use qthread_init instead

2011-12-08 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/taskimpl.h: simplify, fix typo

2011-12-08 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: propagate #defs for MacOS X PPC

2011-12-08 14:56  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_log_barrier.c: fix eol problem, and other whitespace

2011-12-07 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: ah, but it DOES work now!

2011-12-07 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: finish twiddling the tileGX assembly

2011-12-07 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: make it possible to enable that cas_steal configure
	  option

2011-12-07 21:36  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in: Add ./configure --enable-cas-steal-profiling.  New ./configure option to enable profiling of CAS retries in
	  nottingham scheduler.

2011-12-07 21:19  michael.m.spiegel <michael.m.spiegel@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_threadqueues.h, include/qthread_innards.h,
	  src/qthread.c, src/threadqueues/nottingham_threadqueues.c: 
	  Optional profiling of the distribution of retries on
	  compare-and-swap operations in the nottingham scheduler. Enable
	  with -DCAS_STEAL_PROFILE (./configure option is forthcoming) A stripe of integer counters is used to track the number of CAS
	  retries. Each qthread worker is assigned its own stripe, and the
	  stripes are tallied at the end of computation.  This is a time/space tradeoff to avoid contention for shared
	  counters.  (qt_threadqueue.h) forward declaration for print statistics
	  function (qthread_innards.h) add the array of counter stripes (nottingham_threadqueues.c) monitor push() and pop() operations (qthread.c) initialization and teardown of array of counter stripes

2011-12-07 20:45  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Removes temp configs that shouldn't be there.

2011-12-07 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4,
	  config/qthread_check_tiletopo.m4, configure.in,
	  include/fastcontext/taskimpl.h,
	  include/qthread/common.h.in, include/qthread/qthread.h,
	  src/affinity/tile.c, src/affinity/tilera.c,
	  src/cacheline.c, src/fastcontext/asm.S, src/syncvar.c: 
	  differentiate TILEPRO from TILEGX, begin base-line support (i.e. no
	  fastcontext yet)

2011-12-07 20:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: correct filenames for affinity stuff

2011-12-07 20:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/power-ucontext.h,
	  include/fastcontext/tile-ucontext.h: mark context swapping
	  functions internal-only

2011-12-07 20:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: prefer builtin CAS for incr_mod

2011-12-07 20:40  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/generic/time_threading.c: Adds team fork use
	  cases to thread timing code.

2011-12-07 20:39  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_sinc.c: Removes migrating sinc_submit() task. Migrating
	  can add an intolerable amount of latency to the submit operation
	  when very high thread counts are being spawned rapidly.

2011-12-07 20:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_feb_barrier.c, test/test_id.c,
	  test/test_precond.c, test/test_qlfqueue.c: remove compiler
	  warnings for printf types

2011-12-07 20:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testdincr.c, test/testfincr.c: need CHECK_VERBOSE() to use
	  iprintf

2011-12-07 20:37  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds some partial config options that are not
	  included in 'all', but might be useful still.

2011-12-07 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/shepcomp.h: whitespace

2011-12-07 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_qsort.m4: better qsort_r style guessing for
	  cross-compile environments

2011-12-07 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: test external syncvar *after* testing the
	  internal syncvar

2011-12-07 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_feb_barrier.c: whitespace

2011-12-07 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/taskimpl.h: need to #include the architecture
	  definitions

2011-12-06 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: use the more reliable assembly-platform
	  detection of the configure script; also begin work on BlueGene/P
	  fastcontext support

2011-12-06 22:19  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/taskimpl.h: use the more reliable
	  assembly-platform detection of the configure script

2011-12-06 22:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: the #include directives are missing for
	  preprocessed ASM for some bizarre reason

2011-12-06 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_makecontext.m4: alternate spelling

2011-12-06 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_swapcontext.m4: missed one

2011-12-06 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_swapcontext.m4: reverse the logic

2011-12-06 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_swapcontext.m4, configure.in: fix behavior
	  of --enable-fastcontext

2011-12-06 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: fix typo

2011-12-06 20:28  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am, test/test_sinc_null.c: Adds a test for sincs
	  with no associated value.

2011-12-06 20:18  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qloop.h, src/qloop.c,
	  test/benchmarks/generic/time_qt_loopaccums.c: Removes redundant
	  proxy qt_loopaccum_balance_syncvar().

2011-12-06 20:16  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c, src/qthread.c: move
	  	qthread_back_to_master into qthread_parent_yield_state so that it
	  can be INTERNAL to qthread.c

2011-12-06 19:57  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: (qthread.c) make two functions global that are called by
	  interfaces/rose/xomp.c

2011-12-06 18:48  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: (qthread.c) feature_flag now storing 2 indicators (am I future? do 	I track parent task?)

2011-12-06 18:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove more compiler warnings from Intel about
	  unnecessary (and, as it turns out, wrong) casts

2011-12-06 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: need cast to get the right operation
	  on ICC

2011-12-06 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: minor cleanup to
	  qthread_steal_stat() declarations

2011-12-06 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix --enable-profiling=steal

2011-12-06 17:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: fix steal profiling;
	  put the call to steal_stat *after* the qthread_finalize sanity
	  check

2011-12-06 16:55  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, src/threadqueues/sherwood_threadqueues.c: (sherwood_threadqueues.c) creator_ptr is used in steal profiling (qthread.c) if me null protect more of the child counter code

2011-12-06 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c, src/qthread.c: finish removing shepherd_struct
	  manipulation in the IO subsystem

2011-12-06 16:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: What on earth was that function doing
	  in qthread.h?!?

2011-12-06 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c, src/qthread.c: seriously, this *one*
	  instance didn't need a whole new interface function

2011-12-06 16:02  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: (nottingham_threadqueues.c) protect steal profile code from no qlib (sherwood_threadqueues.c) protect steal profile code from no qlib

2011-12-06 16:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c, src/qthread.c: qthread_self() died a
	  while back. Now I'm killing zombies.

2011-12-06 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove a compiler warning

2011-12-06 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: qthread_return_value() is not only
	  redundant (see qthread_retloc), but apparently unimplemented

2011-12-06 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_qthread_t.h,
	  include/qt_threadqueues.h, include/qthread/qthread.h,
	  include/qthread_innards.h, src/locks.c, src/qthread.c,
	  src/threadqueues/sherwood_threadqueues.c: move qthread_t out of
	  the public qthread.h, now that nobody needs it anymore

2011-12-06 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, src/io.c,
	  src/syscalls/user_defined.c: dont muck with shepherd_structs just
	  for IO (unnecessary and inconvenient)

2011-12-06 15:38  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/56reader-rwlock.h, include/qthread_innards.h,
	  src/interfaces/rose/xomp.c, src/qthread.c: (include/qthread_innards.h) add new type of uberfork call to track
	  children (include/56reader-rwlock.h) protect against becalled with no id set (src/interfaces/rose/xomp.c) use new uberfork type (src/qthread.c) implement new uberfork type

2011-12-06 15:25  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Makes sure to initialize the team_id lock, and to
	  destroy it too.

2011-12-06 15:24  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds a  configuration.

2011-12-05 22:46  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds ability to concatenate configurations with
	  '+' to build script: to build with development options and the
	  Nottingham scheduler, use --configs=dev+nottingham; or to build
	  with optimization and nemesis, use --configs=nemesis+opt; etc.,
	  etc.

2011-12-05 22:25  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_qthread_struct.h, src/qthread.c: Replaces spawning
	  extra task to destroy a team with a flag indicating the leader of
	  the team which is responsible for killing the team.

2011-12-05 21:05  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c: We think this is a bug waiting to
	  	happen.  -- barrier after all the threads independently spawn tasks

2011-12-05 19:11  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: Seemed to have missed this (why I can
	  compile and sometimes run beats me)

2011-12-05 15:10  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_qthread_struct.h, include/qt_task_counter.h,
	  include/qt_threadstate.h, include/qthread_innards.h,
	  src/interfaces/rose/xomp.c, src/qthread.c: Rewrite OpenMP
	  	taskwait function to eliminate use of syncvars Old - linked list of
	  	child tasks - wait for each to complete (syncvar) New - counter of
	  		outstanding child - last to finish turns into parent to shortcut
	  	scheduling delay restarting waiting parent Counter -- uses high bit
	  	to indicate parent is waiting (ie last child should turn into
	  parent rather than terminating) (include/qt_qthread_struct.h) enum moved to new include file
	  	(qt_threadstate.h) added and removed support variables used by
	  taskwait code (include/qt_threadstate.h) new file - moved from
	  	qt_qthread_struct.h added new states used to short circuit taskwait
	  parent restart (include/qt_task_counter.h) new file - static/inlined functions to 	allow taskwait (include/qthread_innards.h) remove dead function calls (src/interfaces/rose/xomp.c) new taskwait code - use counter rather
	  	than separate syncvar for each child task 	effectively rename walkSyncTaskList to
	  	waitCompletionOutstandingTasks (src/qthread.c) add new states handling to allow child turn into
	  	parent at task completion (if parent is waiting at taskwait) 	lot of cleanup - removing old taskwait support

2011-12-01 23:26  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/benchmarks/generic/time_qt_loops.c: Updates loop timing code
	  to test with teams and to use qtimer_fastrand() instead of sleep to
	  generate the artificial workload.

2011-12-01 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_swapcontext.m4, configure.in: better
	  cross-compiling behavior with fastcontext

2011-12-01 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: eliminate unnecessary memset

2011-12-01 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: whoops, fix an oversight

2011-12-01 18:01  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: no point in checking for floor here when we check
	  for ceil later

2011-12-01 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: better spinlock behavior

2011-12-01 17:50  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qloop.h, src/qloop.c,
	  test/benchmarks/generic/time_qt_loops.c: Adds an explicit syncvar
	  versions of qt_loops; updates qt_loops timing code to use explicit
	  syncvar version, since the default loops now use donecount.

2011-12-01 15:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: whoop - dont make this ALWAYS 32-bit

2011-12-01 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* README: document old GCC+BlueGene/P issue

2011-12-01 15:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: fixed the ppc32 version of mwaitc

2011-12-01 15:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: fix internal spinlock on 32-bit
	  architectures

2011-11-30 23:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: reduce how much work I do inside the pool lock

2011-11-30 23:02  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, test/test_teams.c: Fixes issue that pervented some
	  tasks from reaching a terminated state; also fixes bug with team id
	  counter being off by one.

2011-11-30 23:00  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_sinc.c: Cleans up initialization of initial_value when the
	  sinc is being used with no associated value.

2011-11-30 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: avoid qthread_shep() in debug statements

2011-11-30 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: calloc that memory

2011-11-30 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: reduce function call overhead

2011-11-30 18:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h,
	  src/net/portals4/portals4.c, src/qthread.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: the big mpool commit
	  (non-cached access will vanish soon)

2011-11-30 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_locks.h, include/qt_shepherd_innards.h,
	  src/locks.c, src/qt_feb_barrier.c, src/qthread.c: all but
	  threadqueues and portals4 using new mpools

2011-11-30 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h,
	  include/qt_shepherd_innards.h, src/qthread.c: tidy up memory
	  pooling; remove creator_ptr, that kind of thing; now use new mpool
	  regime for stacks too

2011-11-30 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, src/qthread.c: new mpool regime
	  now stable enough for qthread_t allocation

2011-11-30 16:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix chunking logic so that cache pushes to global
	  pool properly

2011-11-30 16:12  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_debug.h: mpool debugging section

2011-11-29 23:32  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_sinc.c: Cleans up corner case when sinc is created with no
	  associated value (e.g., qt_sinc_create(0,NULL,NULL,x)).

2011-11-29 23:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h,
	  include/qt_shepherd_innards.h, src/qthread.c: another step toward
	  the new mpool regime (addrres)

2011-11-29 23:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h: another step toward the new mpool
	  regime (addrstats)

2011-11-29 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c: fix freeing null values

2011-11-29 23:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_blocking_structs.h,
	  include/qt_shepherd_innards.h, src/locks.c, src/qthread.c: 
	  another step toward the new mpool regime

2011-11-29 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix copy/paste error

2011-11-29 23:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix my stupid pointer math arrogance

2011-11-29 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_mpool.h, include/qt_shepherd_innards.h,
	  src/qt_mpool.c, src/qthread.c: waypoint on revamping qt_mpool

2011-11-29 20:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, src/qthread.c: team pooling works
	  now

2011-11-29 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: compat build option

2011-11-29 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/test_teams.c: default behavior: spawn within the same team

2011-11-29 15:47  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_qt_loops.c: simplify usleep logic

2011-11-29 15:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_tasklocal_no_default.c: fix the tasklocal test to avoid
	  relying on initialized tasklocal data

2011-11-28 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4: detect broken accept()
	  prototypes (I'm looking at you, Solaris9)

2011-11-28 20:36  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect the libraries necessary for calling accept()
	  on solaris

2011-11-23 18:15  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c: handle negative strides and loops
	  that do not iterate in the default loop case

2011-11-22 23:22  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_qthread_struct.h, include/qthread/qthread.h,
	  include/qthread_innards.h, src/qthread.c,
	  test/Makefile.am, test/test_teams.c: Implements initial support
	  for teams and associated task spawning.

2011-11-22 20:13  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c: more fixes to default loop handling
	        -- add chunk computation and fix static start (non-zero start - use
	  barrier_id for unique id not qthread_worker)

2011-11-22 16:06  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c: fix defualt loop handling -- since
	  rose now produces these loops

2011-11-21 20:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_qt_loopaccums.c: typo

2011-11-21 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_qt_loopaccums.c: more complex
	  behavior

2011-11-21 20:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qt_sinc.h, src/qt_sinc.c: uncrustified, and added
	  qt_sinc_tmpdata

2011-11-21 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/generic/time_qt_loopaccums.c: more akin to
	  time_qt_loops

2011-11-21 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c: generalize loopaccum to use
	  multiple syncronization semantics

2011-11-21 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: renumber, rework

2011-11-14 19:42  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_user_defined_block.c: remind myself why this assert
	  exists

2011-11-14 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: MORE dealing with AIX brokenness

2011-11-14 19:28  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_user_defined_block.c: this MIGHT cause a segfault, due
	  to the un-defined behavior of pthread_getspecific on un-initialized
	  TS variables

2011-11-14 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: do a better job handling IO thread behavior

2011-11-14 19:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: fix return value handing in
	  qthread_internal_shep

2011-11-14 12:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: typo

2011-11-14 12:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c, src/qthread.c: fix missing shep_dists; add
	  asserts to check for it

2011-11-11 16:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/envariables.c, src/qthread.c: make it possible print out the
	  envariables that are consulted

2011-11-11 15:58  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: AS_IF broken on autoconf 2.59

2011-11-11 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: configurable IO timeout

2011-11-10 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.h: Chapel can assume
	  stdint.h is available

2011-11-10 20:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/Makefile.inc: uses internal functions

2011-11-10 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: fix silliness

2011-11-10 17:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c, src/qthread.c, test/test_user_defined_block.c: make
	  qthread_id() work while inside an I/O thread

2011-11-10 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: cleanup

2011-11-10 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.h: fix chpl_nullTaskID to
	  fit actual behavior

2011-11-10 04:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: fix compiler warning

2011-11-10 03:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: should be a beneficial
	  change

2011-11-10 03:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/envariables.c: compiler warning in debug mode

2011-11-10 03:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/envariables.c, src/qthread.c, src/syncvar.c: compiler
	  warnings

2011-11-10 03:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: missed one

2011-11-10 03:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c,
	  src/interfaces/chapel/tasks-qthreads.c, src/io.c,
	  src/net/portals4/portals4.c, src/qthread.c,
	  src/threadqueues/nottingham_threadqueues.c: push out the use of
	  the envariables functions

2011-11-10 03:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_envariables.h, src/envariables.c: remove compiler
	  warnings

2011-11-10 03:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/envariables.c,
	  src/interfaces/chapel/tasks-qthreads.c, src/qthread.c: work with
	  QT_ prefixed envariables, in addition to the QTHREAD_ prefixed ones

2011-11-10 03:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: envariable-specified max IO workers

2011-11-10 02:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_envariables.h,
	  src/Makefile.am, src/envariables.c, src/qthread.c: Push
	  envariables into a function, rather than a macro.

2011-11-10 02:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: non-blocking FEB operations
	  (internal-only)

2011-11-10 02:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_internal_feb.h, include/qt_internal_syncvar.h,
	  src/feb.c, src/syncvar.c: non-blocking FEB operations
	  (internal-only)

2011-11-09 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4: auto-disable builtin atomics on
	  IBM_XL compilers

2011-11-09 15:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h, src/io.c: fix compiler warnings

2011-11-09 00:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: works without debugging; and laid ground for a
	  persistent IO thread

2011-11-08 23:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: This is now officially what Michael and I talked about

2011-11-08 23:18  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_uts_donecount.c, test/time_uts_sinc.c,
	  test/time_uts_syncvar.c: Makes UTS benchmark more like reference
	  implementation in BOTS: removes leaf- and detph-related
	  calculations, shuffles around num_children calculation.

2011-11-08 23:18  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_sinc.c: Handles case when qt_sinc_willspawn() has a count
	  of 0.

2011-11-08 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h, src/qthread.c: fix debug output behavior

2011-11-08 20:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: call setspecific less frequently

2011-11-08 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_cpp_interface.cpp,
	  test/time_febs.c, test/time_gcd.c,
	  test/time_halo_swap_all.c, test/time_increments.c,
	  test/time_producerconsumer.c, test/time_qt_loopaccums.c,
	  test/time_qt_loops.c, test/time_stencil_bsp.c,
	  test/time_stencil_feb.c, test/time_stencil_pre.c,
	  test/time_syncvar_producerconsumer.c,
	  test/time_threading.c: move more tests, quiet the
	  test_cpp_interface

2011-11-08 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmarks/Makefile.am,
	  test/benchmarks/generic/time_febs.c,
	  test/benchmarks/generic/time_gcd.c,
	  test/benchmarks/generic/time_halo_swap_all.c,
	  test/benchmarks/generic/time_increments.c,
	  test/benchmarks/generic/time_producerconsumer.c,
	  test/benchmarks/generic/time_qt_loopaccums.c,
	  test/benchmarks/generic/time_qt_loops.c,
	  test/benchmarks/generic/time_stencil_bsp.c,
	  test/benchmarks/generic/time_stencil_feb.c,
	  test/benchmarks/generic/time_stencil_pre.c,
	  test/benchmarks/generic/time_syncvar_producerconsumer.c,
	  test/benchmarks/generic/time_threading.c: move (most of) the rest
	  of the benchmarks into a generic tree

2011-11-08 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/benchmarks/Makefile.am,
	  test/benchmarks/thesis/time_allpairs.c,
	  test/benchmarks/thesis/time_qutil_qsort.c,
	  test/benchmarks/thesis/time_wavefront.c,
	  test/time_allpairs.c, test/time_qutil_qsort.c,
	  test/time_wavefront.c: moved the benchmarks from my thesis

2011-11-08 16:46  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am,
	  test/benchmarks/Makefile.am,
	  test/benchmarks/rose_bots/Makefile.am,
	  test/benchmarks/rose_bots/README,
	  test/benchmarks/rose_bots/alignment/forloop/alignment.h,
	  test/benchmarks/rose_bots/alignment/forloop/app-desc.h,
	  test/benchmarks/rose_bots/alignment/forloop/param.h,
	  test/benchmarks/rose_bots/alignment/forloop/rose_alignmen
	  t.save.c,
	  test/benchmarks/rose_bots/alignment/forloop/rose_alignmen
	  t_for.cc,
	  test/benchmarks/rose_bots/alignment/forloop/rose_bots_mai
	  n_alignmentfor.cc,
	  test/benchmarks/rose_bots/alignment/forloop/rose_sequence
	  _alignmentfor.cc,
	  test/benchmarks/rose_bots/alignment/forloop/rose_tied-ali
	  gnment_for.cc,
	  test/benchmarks/rose_bots/alignment/forloop/rose_tied-seq
	  uence_alignmentfor.cc,
	  test/benchmarks/rose_bots/alignment/task/alignment.h,
	  test/benchmarks/rose_bots/alignment/task/app-desc.h,
	  test/benchmarks/rose_bots/alignment/task/param.h,
	  test/benchmarks/rose_bots/alignment/task/rose_alignment_t
	  ask.cc,
	  test/benchmarks/rose_bots/alignment/task/rose_bots_main_a
	  lignmenttask.cc,
	  test/benchmarks/rose_bots/alignment/task/rose_sequence_al
	  ignmenttask.cc,
	  test/benchmarks/rose_bots/alignment/task/rose_tied-alignm
	  ent_task.cc,
	  test/benchmarks/rose_bots/alignment/task/rose_tied-sequen
	  ce_alignmenttask.cc,
	  test/benchmarks/rose_bots/common/bots.h,
	  test/benchmarks/rose_bots/common/bots_common.h,
	  test/benchmarks/rose_bots/common/bots_main.h,
	  test/benchmarks/rose_bots/common/omp-tasks-app.h,
	  test/benchmarks/rose_bots/common/rose_bots_common.cc,
	  test/benchmarks/rose_bots/fft/app-desc.h,
	  test/benchmarks/rose_bots/fft/fft.h,
	  test/benchmarks/rose_bots/fft/rose_bots_main_fft.cc,
	  test/benchmarks/rose_bots/fft/rose_fft.cc,
	  test/benchmarks/rose_bots/fft/rose_tied-fft.cc,
	  test/benchmarks/rose_bots/fib/app-desc.h,
	  test/benchmarks/rose_bots/fib/rose_bots_main_fib.cc,
	  test/benchmarks/rose_bots/fib/rose_fib.cc,
	  test/benchmarks/rose_bots/fib/rose_tied-fib.cc,
	  test/benchmarks/rose_bots/health/app-desc.h,
	  test/benchmarks/rose_bots/health/health.h,
	  test/benchmarks/rose_bots/health/rose_bots_main_health.cc
	  , test/benchmarks/rose_bots/health/rose_health.cc,
	  test/benchmarks/rose_bots/health/rose_tied-health.cc,
	  test/benchmarks/rose_bots/libxomp.h,
	  test/benchmarks/rose_bots/nqueens/app-desc.h,
	  test/benchmarks/rose_bots/nqueens/rose_bots_main_nqueens.
	  cc, test/benchmarks/rose_bots/nqueens/rose_nqueens.cc,
	  test/benchmarks/rose_bots/sort/app-desc.h,
	  test/benchmarks/rose_bots/sort/rose_bots_main_sort.cc,
	  test/benchmarks/rose_bots/sort/rose_sort.cc,
	  test/benchmarks/rose_bots/sort/rose_tied-sort.cc,
	  test/benchmarks/rose_bots/sparselu/forloop/app-desc.h,
	  test/benchmarks/rose_bots/sparselu/forloop/rose_bots_main
	  _sparselufor.cc,
	  test/benchmarks/rose_bots/sparselu/forloop/rose_rose_spar
	  selu.c,
	  test/benchmarks/rose_bots/sparselu/forloop/rose_sparselu.
	  save.c,
	  test/benchmarks/rose_bots/sparselu/forloop/rose_sparselu_
	  for.cc,
	  test/benchmarks/rose_bots/sparselu/forloop/rose_tied-spar
	  selu.cc,
	  test/benchmarks/rose_bots/sparselu/forloop/sparselu.h,
	  test/benchmarks/rose_bots/sparselu/task/app-desc.h,
	  test/benchmarks/rose_bots/sparselu/task/rose_bots_main_sp
	  arselutask.cc,
	  test/benchmarks/rose_bots/sparselu/task/rose_sparselu.sav
	  e.c,
	  test/benchmarks/rose_bots/sparselu/task/rose_sparselu_tas
	  k.cc,
	  test/benchmarks/rose_bots/sparselu/task/rose_tied-sparsel
	  u.cc, test/benchmarks/rose_bots/sparselu/task/sparselu.h,
	  test/benchmarks/rose_bots/strassen/app-desc.h,
	  test/benchmarks/rose_bots/strassen/rose_bots_main_strasse
	  n.cc,
	  test/benchmarks/rose_bots/strassen/rose_strassen.cc,
	  test/benchmarks/rose_bots/strassen/rose_tied-strassen.cc,
	  test/benchmarks/rose_bots/strassen/strassen.h,
	  test/rose_bots_benchmarks/Makefile.am,
	  test/rose_bots_benchmarks/README,
	  test/rose_bots_benchmarks/alignment/forloop/alignment.h,
	  test/rose_bots_benchmarks/alignment/forloop/app-desc.h,
	  test/rose_bots_benchmarks/alignment/forloop/param.h,
	  test/rose_bots_benchmarks/alignment/forloop/rose_alignmen
	  t.save.c,
	  test/rose_bots_benchmarks/alignment/forloop/rose_alignmen
	  t_for.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_bots_mai
	  n_alignmentfor.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_sequence
	  _alignmentfor.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_tied-ali
	  gnment_for.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_tied-seq
	  uence_alignmentfor.cc,
	  test/rose_bots_benchmarks/alignment/task/alignment.h,
	  test/rose_bots_benchmarks/alignment/task/app-desc.h,
	  test/rose_bots_benchmarks/alignment/task/param.h,
	  test/rose_bots_benchmarks/alignment/task/rose_alignment_t
	  ask.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_bots_main_a
	  lignmenttask.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_sequence_al
	  ignmenttask.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_tied-alignm
	  ent_task.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_tied-sequen
	  ce_alignmenttask.cc,
	  test/rose_bots_benchmarks/common/bots.h,
	  test/rose_bots_benchmarks/common/bots_common.h,
	  test/rose_bots_benchmarks/common/bots_main.h,
	  test/rose_bots_benchmarks/common/omp-tasks-app.h,
	  test/rose_bots_benchmarks/common/rose_bots_common.cc,
	  test/rose_bots_benchmarks/fft/app-desc.h,
	  test/rose_bots_benchmarks/fft/fft.h,
	  test/rose_bots_benchmarks/fft/rose_bots_main_fft.cc,
	  test/rose_bots_benchmarks/fft/rose_fft.cc,
	  test/rose_bots_benchmarks/fft/rose_tied-fft.cc,
	  test/rose_bots_benchmarks/fib/app-desc.h,
	  test/rose_bots_benchmarks/fib/rose_bots_main_fib.cc,
	  test/rose_bots_benchmarks/fib/rose_fib.cc,
	  test/rose_bots_benchmarks/fib/rose_tied-fib.cc,
	  test/rose_bots_benchmarks/health/app-desc.h,
	  test/rose_bots_benchmarks/health/health.h,
	  test/rose_bots_benchmarks/health/rose_bots_main_health.cc
	  , test/rose_bots_benchmarks/health/rose_health.cc,
	  test/rose_bots_benchmarks/health/rose_tied-health.cc,
	  test/rose_bots_benchmarks/libxomp.h,
	  test/rose_bots_benchmarks/nqueens/app-desc.h,
	  test/rose_bots_benchmarks/nqueens/rose_bots_main_nqueens.
	  cc, test/rose_bots_benchmarks/nqueens/rose_nqueens.cc,
	  test/rose_bots_benchmarks/sort/app-desc.h,
	  test/rose_bots_benchmarks/sort/rose_bots_main_sort.cc,
	  test/rose_bots_benchmarks/sort/rose_sort.cc,
	  test/rose_bots_benchmarks/sort/rose_tied-sort.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/app-desc.h,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_bots_main
	  _sparselufor.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_rose_spar
	  selu.c,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_sparselu.
	  save.c,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_sparselu_
	  for.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_tied-spar
	  selu.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/sparselu.h,
	  test/rose_bots_benchmarks/sparselu/task/app-desc.h,
	  test/rose_bots_benchmarks/sparselu/task/rose_bots_main_sp
	  arselutask.cc,
	  test/rose_bots_benchmarks/sparselu/task/rose_sparselu.sav
	  e.c,
	  test/rose_bots_benchmarks/sparselu/task/rose_sparselu_tas
	  k.cc,
	  test/rose_bots_benchmarks/sparselu/task/rose_tied-sparsel
	  u.cc, test/rose_bots_benchmarks/sparselu/task/sparselu.h,
	  test/rose_bots_benchmarks/strassen/app-desc.h,
	  test/rose_bots_benchmarks/strassen/rose_bots_main_strasse
	  n.cc,
	  test/rose_bots_benchmarks/strassen/rose_strassen.cc,
	  test/rose_bots_benchmarks/strassen/rose_tied-strassen.cc,
	  test/rose_bots_benchmarks/strassen/strassen.h: move the rose
	  benchmarks

2011-11-08 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/benchmarks/Makefile.am,
	  test/benchmarks/pmea09/time_qarray.c,
	  test/benchmarks/pmea09/time_qarray_sizes.c,
	  test/benchmarks/pmea09/time_qdqueue.c,
	  test/benchmarks/pmea09/time_qdqueue_sizes.c,
	  test/benchmarks/pmea09/time_qlfqueue.c,
	  test/benchmarks/pmea09/time_qpool.c,
	  test/benchmarks/pmea09/time_tbbq.cpp,
	  test/benchmarks/pmea09/time_tbbq_sizes.cpp,
	  test/time_qarray.c, test/time_qarray_sizes.c,
	  test/time_qdqueue.c, test/time_qdqueue_sizes.c,
	  test/time_qlfqueue.c, test/time_qpool.c,
	  test/time_tbbq.cpp, test/time_tbbq_sizes.cpp: pmea09 benchmarks
	  moved

2011-11-08 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am,
	  test/benchmarks/Makefile.am,
	  test/benchmarks/mtaap08/time_chain_bench.c,
	  test/benchmarks/mtaap08/time_chain_bench_pthread.c,
	  test/benchmarks/mtaap08/time_cncthr_bench.c,
	  test/benchmarks/mtaap08/time_cncthr_bench_pthread.c,
	  test/benchmarks/mtaap08/time_incr_bench.c,
	  test/benchmarks/mtaap08/time_incr_bench_pthread.c,
	  test/benchmarks/mtaap08/time_lul_bench.c,
	  test/benchmarks/mtaap08/time_lul_bench_pthread.c,
	  test/benchmarks/mtaap08/time_mutex_bench.c,
	  test/benchmarks/mtaap08/time_mutex_bench_pthread.c,
	  test/benchmarks/mtaap08/time_spin_bench.c,
	  test/benchmarks/mtaap08/time_spin_bench_pthread.c,
	  test/benchmarks/mtaap08/time_thrcrt_bench.c,
	  test/benchmarks/mtaap08/time_thrcrt_bench_pthread.c,
	  test/rose_bots_benchmarks/common/rose_bots_common.cc,
	  test/time_chain_bench.c, test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_incr_bench.c,
	  test/time_incr_bench_pthread.c, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c, test/time_spin_bench.c,
	  test/time_spin_bench_pthread.c, test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: beginning to organize
	  benchmarks better

2011-11-08 15:21  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am, test/time_uts_donecount.c,
	  test/time_uts_sinc.c, test/time_uts_syncvar.c: Switches to
	  BRG_RNG RNG.

2011-11-08 15:13  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: fix grammar mistake

2011-11-08 15:12  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: pass autogen.sh arguments along to autoreconf

2011-11-07 23:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: decrement advisory_queuelen
	  when dequeueing

2011-11-07 23:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c, src/affinity/mach.c,
	  src/affinity/no.c, src/affinity/plpa.c: shep_dists is assumed to
	  be generated iff sorted_sheplist is generated

2011-11-07 23:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: shep_dists is assumed to be generated iff
	  sorted_sheplist is generated

2011-11-07 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c: the shuffle function was hoisted into a
	  shared file

2011-11-07 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: forgot ac_prog_sed.m4

2011-11-07 21:22  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_cond_define.m4, configure.in: use AS_IF more
	  efficiently; add QT_COND_DEFINE for readability

2011-11-07 21:09  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am, test/time_uts_donecount.c,
	  test/time_uts_sinc.c: Adds a "done count" version of UTS.

2011-11-07 20:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c, src/affinity/lgrp.c,
	  src/affinity/libnuma.c, src/affinity/libnumaV2.c,
	  src/affinity/mach.c, src/affinity/no.c,
	  src/affinity/plpa.c, src/affinity/shepcomp.h,
	  src/affinity/shufflesheps.h, src/affinity/tile.c: shufflesheps
	  should be separate from shepcomp

2011-11-07 19:59  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am, test/time_uts.c, test/time_uts_sinc.c,
	  test/time_uts_syncvar.c: Adds a sinc version of UTS.

2011-11-07 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: updates to potentially fix
	  XLC issues

2011-11-07 19:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove a compiler warning

2011-11-07 19:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: remove a compiler warning

2011-11-07 19:00  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_uts.c: Prevents warning about unused function.

2011-11-07 15:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: remove compiler warning

2011-11-03 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc.c, src/affinity/lgrp.c,
	  src/affinity/libnuma.c, src/affinity/libnumaV2.c,
	  src/affinity/mach.c, src/affinity/no.c,
	  src/affinity/plpa.c, src/affinity/shepcomp.h,
	  src/affinity/tile.c: always provide sorted_shepdists, and
	  randomize equidistant ones

2011-11-03 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4,
	  config/qthread_check_bitfield_order.m4,
	  config/qthread_check_plpa.m4,
	  config/qthread_check_qsort.m4: better cross-compiling behavior

2011-11-03 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4: cross-compile-safe handling of
	  cmpxchg16b

2011-11-03 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: init the CASLOCK stuff; this makes multithreaded
	  shepherds work on machines without hardware atomics

2011-11-03 16:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: more volatiles gone

2011-11-03 16:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: more volatiles gone

2011-11-03 15:40  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds a `--quietly` option to only print out
	  warnings, errors, and summary stats.

2011-11-03 15:11  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: scheduler profiles

2011-11-03 14:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testfincr.c: removing more volatiles

2011-11-03 14:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: whitespace

2011-11-03 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp, test/test_cas.c: removing more
	  volatiles

2011-11-03 14:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: removing more volatiles

2011-11-02 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/nanosleep.c: conform to the nanosleep spec better

2011-11-02 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix IBM_XL compiling (requires -q64 in order to
	  support uint64_t types, apparently)

2011-11-02 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: improve the SYS_write ifdef

2011-11-02 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/Makefile.inc, src/syscalls/accept.c,
	  src/syscalls/connect.c, src/syscalls/nanosleep.c,
	  src/syscalls/poll.c, src/syscalls/pread.c,
	  src/syscalls/pwrite.c, src/syscalls/read.c,
	  src/syscalls/select.c, src/syscalls/sleep.c,
	  src/syscalls/sys_accept.c, src/syscalls/sys_connect.c,
	  src/syscalls/sys_nanosleep.c, src/syscalls/sys_poll.c,
	  src/syscalls/sys_pread.c, src/syscalls/sys_pwrite.c,
	  src/syscalls/sys_read.c, src/syscalls/sys_select.c,
	  src/syscalls/sys_sleep.c, src/syscalls/sys_system.c,
	  src/syscalls/sys_user_defined.c,
	  src/syscalls/sys_usleep.c, src/syscalls/sys_wait4.c,
	  src/syscalls/sys_write.c, src/syscalls/system.c,
	  src/syscalls/user_defined.c, src/syscalls/usleep.c,
	  src/syscalls/wait4.c, src/syscalls/write.c: now that we use
	  subdir-objects, these can be made sensible once more

2011-11-02 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/affinity/hwloc.c,
	  src/affinity/hwloc_affinity.c, src/affinity/lgrp.c,
	  src/affinity/lgrp_affinity.c, src/affinity/libnuma.c,
	  src/affinity/libnumaV2.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c, src/affinity/mach.c,
	  src/affinity/mach_affinity.c, src/affinity/no.c,
	  src/affinity/no_affinity.c, src/affinity/plpa.c,
	  src/affinity/plpa_affinity.c, src/affinity/tile.c,
	  src/affinity/tile_affinity.c: now that we use subdir-objects,
	  these can be made sensible once more

2011-11-02 21:13  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/nemesis_threadqueues.c: Prevents compiler
	  warnings about unused result values.

2011-11-02 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nottingham_threadqueues.c: remove unnecessary
	  volatile

2011-11-02 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: leftover

2011-11-02 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/default_threadqueues.c: leftover

2011-11-02 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mtsfifo_threadqueues.c: remove volatile in favor
	  of memory fences

2011-11-02 19:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/mutexfifo_threadqueues.c: lock-based, no need
	  for volatile

2011-11-02 19:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: missing #include

2011-11-02 19:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: remove volatile in favor of
	  memory fences

2011-11-02 19:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/altix.c: remove unnecessary function

2011-11-02 19:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/patterns/wavefront.c: remove volatile in favor of memory
	  fences

2011-11-02 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/patterns/allpairs.c: remove volatile in favor of memory
	  fences

2011-11-02 19:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qpool.c: remove volatile, similar to qt_mpool.c

2011-11-02 18:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/syncvar.hpp: allow syncvar direct access to
	  uint60_t stuff

2011-11-02 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: since sherwood is
	  lock-based, there is absolutely no reason to use volatile

2011-11-02 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: make buildall work again

2011-11-02 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c: avoid re-calling the readstate function

2011-11-02 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix qthread_worker output in non-multithreaded
	  mode

2011-11-02 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: remove unnecessary
	  volatile, add machine fence

2011-11-02 17:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix compiler warnings about barrier type

2011-11-02 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: update the commented-out code (probably
	  unnecessary)

2011-11-02 17:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: remove volatile in favor
	  of memory fences

2011-11-02 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qdqueue.c: remove volatile

2011-11-02 17:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: remove unnecessary #defs

2011-11-02 17:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, src/qthread.c: active is no longer
	  volatile (unnecessary)

2011-11-02 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix configure script for non-sherwood schedulers

2011-11-02 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: lock needs to be a memory fence

2011-11-02 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: remove volatile in favor of fences

2011-11-02 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: remove unnecessary volatiles

2011-11-02 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c: parenthesis to avoid issues

2011-11-02 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: upon reflection, only a compiler fence is
	  necessary for the spinlock

2011-11-02 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c: remove volatile in favor of explicit memory
	  fences

2011-11-02 14:37  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread_innards.h, src/interfaces/rose/xomp.c,
	  src/qthread.c: (qthread_innards.h) remove move_to_orig (xomp.c) remove call to move_to_orig -- changed code so that we
	  must be there (qthread.c)  remove move_to_orig 	mark mccoy thread as MUST_BE_WORKER_ZERO -- allowing 		deletion of move_to_orig  -- fixes bus where mccoy thread was 		being duplicated somehow

2011-11-02 14:18  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am, test/time_uts.c,
	  test/time_uts_sample_trees.sh: Adds a first crack at UTS v2.1.

2011-11-02 14:18  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/argparsing.h: Adds DBLARG() macro.

2011-11-01 22:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, src/qloop.c: remove volatile in favor of
	  explicit memory fences

2011-11-01 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c: use SPINLOCK_BODY instead of volatile

2011-11-01 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* test/rose_bots_benchmarks/Makefile.am: executables should have
	  names different from the source directories

2011-11-01 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/net/net.c: use memory fences instead of volatile

2011-11-01 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: tighten the inner-loop, avoid math in the
	  fast-path, use memory fences instead of volatile

2011-11-01 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: use configure-defined macros; use real
	  machine-level memory barriers

2011-11-01 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: remove volatile; add memory fences

2011-11-01 20:55  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/56reader-rwlock.h,
	  src/threadqueues/nottingham_threadqueues.c: (56reader-rwlock.h) add include file so SPINLICK_BODY changes work (nottingham_threadqueues.c)corretly set top when nottingham grabs
	  mccoy thread

2011-11-01 17:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: remove volatile, it does not do what I want it
	  to do

2011-11-01 17:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove volatile from atomic ops (it does nothing),
	  use SPINLOCK_BODY() appropriately, and define qthread_yield_ now

2011-11-01 17:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: use MACHINE_FENCE, which
	  does what COMPILER_FENCE used to do

2011-11-01 17:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: use SPINLOCK_BODY; also use
	  MACHINE_FENCE, which does what COMPILER_FENCE used to do

2011-11-01 17:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/56reader-rwlock.h: use SPINLOCK_BODY instead of
	  file-specific cpu_relax() macro; also use MACHINE_FENCE, which does
	  what COMPILER_FENCE used to do

2011-11-01 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: improve definition of SPINLOCK_BODY

2011-11-01 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: create a distinction between
	  COMPILER_FENCE and MACHINE_FENCE

2011-11-01 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in, include/qthread/qthread.h: remove
	  volatile and add COMPILER_FENCE to qthread_yield() calls

2011-11-01 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: avoid compiler warnings

2011-11-01 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: learned a lesson

2011-11-01 14:35  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, src/interfaces/rose/xomp.c,
	  src/qthread.c: respect if clause when creating parallel region
	  change parallel region barrier size when thread count changed
	  within parallel region (like false if clause) (qthread.h) add dec of parallel region barrier resize (xomp.c) respect if clause in parallel start (reset thread count to
	  1) (qthread.c) add  parallel region barrier resize

2011-11-01 13:43  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: subdir-objects

2011-10-31 21:00  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/nottingham_threadqueues.c: Fix bu when non
	  active thread tries to grab mccoy thread

2011-10-31 20:24  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h, include/qthread/qthread.h,
	  include/qthread_innards.h, src/interfaces/rose/xomp.c,
	  src/qthread.c, src/threadqueues/nottingham_threadqueues.c: Fix
	  bug where nottingham was seeing inactive threads try to steal --
	  added new unique id (qthread.h) add call to get unique id (qthread_innards.h) add max thread unique id (and lock for
	  creation) (qt_shepherd_innards.h) add thread unique id (xomp.c) use correct id and set static loop boundaries correctly
	  (ROSE change now inclusive) (nottingham_threadqueues.c) use unique id -- not barrier id which
	  moves when # threads changes (qthread.c) set unique id and add call to access it

2011-10-28 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: test will only fail at link
	  time

2011-10-28 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: QTHREAD_CASLOCK_EXPLICIT_DECL is an odd
	  bird (this makes OracleSolarisStudio happy)

2011-10-28 22:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: QTHREAD_CASLOCK_EXPLICIT_DECL is an odd
	  bird (this makes OracleSolarisStudio happy)

2011-10-28 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: add wait4 headers

2011-10-28 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4, configure.in: make the
	  syscall interception enable/disable flag do a bit more

2011-10-28 22:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: deal with compilers, like
	  SunStudio/OracleSolarisStudio, that cannot deal with comments in
	  the assembly

2011-10-28 20:50  bwbarrett <bwbarrett@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/Makefile.am, include/net/driver.h,
	  include/net/net.h, include/qt_debug.h,
	  include/qthread/Makefile.am,
	  include/qthread/qthread_multinode.h, src/net/net.c,
	  src/net/portals4/portals4.c, src/net/portals4/runtime.h,
	  src/qthread.c, test/Makefile.am,
	  test/test_multinode_init.c: Merge multinode branch into trunk
	  (finally!)

2011-10-28 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/sys_accept.c, src/syscalls/sys_connect.c,
	  src/syscalls/sys_poll.c, src/syscalls/sys_pread.c,
	  src/syscalls/sys_pwrite.c, src/syscalls/sys_read.c,
	  src/syscalls/sys_select.c, src/syscalls/sys_system.c,
	  src/syscalls/sys_wait4.c, src/syscalls/sys_write.c: fix mempool
	  behavior

2011-10-28 16:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: fix handling of reserved key values

2011-10-28 16:01  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/syncvar.hpp: remove compiler warning

2011-10-28 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove unnecessary pthread_setspecific, and fix
	  qthread_worker() semantics in single-threaded-shepherd world

2011-10-28 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: fix hazardptrs type for
	  single-threaded shepherds

2011-10-28 14:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/syncvar.hpp: fix compiling/initializing issues
	  brought to light by gcc 4.6

2011-10-28 14:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testqloop.c: fix compiler warnings

2011-10-27 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: improve SPINLOCK_BODY()

2011-10-27 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_read.c: null-terminate the filename

2011-10-27 20:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: avoid syscall when unavailable

2011-10-27 16:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: pushing the spinlock
	  stuff

2011-10-27 15:41  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/rose_xomp.h, src/interfaces/rose/xomp.c: add
	  XOMP_loop_default which is used by ROSE for default scheduled loops
	  -- required when ROSE is modified to read a pragma to switch to
	  maestro scheduling (rose_xomp.h) add declaration (xomp.c) add definition -- use underlying static calls

2011-10-27 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: futurelib.h was unnecessary here

2011-10-27 15:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: for the moment, this actually seems to be the
	  fastest method

2011-10-27 15:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix backwards-compatibility with qthread_init()
	  calls

2011-10-27 14:02  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix regression from previous commit

2011-10-27 13:58  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: make color-tests conditional

2011-10-27 02:44  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: EKOPath flags

2011-10-27 02:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/syncvar.hpp: pathscale warning (explicitly call
	  underlying constructor)

2011-10-27 02:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_cas.c: fix CAS test

2011-10-27 02:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qlfqueue.c, test/test_qtimer.c,
	  test/test_sinc.c, test/test_stackleft.c: remove pathscale
	  compiler warning

2011-10-27 01:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove pathscale compiler warning

2011-10-27 01:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: remove pathscale compiler warning

2011-10-27 01:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: remove pathscale
	  compiler warning

2011-10-26 22:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_read.c: fix text to work on Linux

2011-10-26 21:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/sys_accept.c, src/syscalls/sys_connect.c,
	  src/syscalls/sys_nanosleep.c, src/syscalls/sys_poll.c,
	  src/syscalls/sys_pread.c, src/syscalls/sys_pwrite.c,
	  src/syscalls/sys_read.c, src/syscalls/sys_select.c,
	  src/syscalls/sys_sleep.c, src/syscalls/sys_system.c,
	  src/syscalls/sys_user_defined.c,
	  src/syscalls/sys_usleep.c, src/syscalls/sys_wait4.c,
	  src/syscalls/sys_write.c: put ifdefs around the syscall.h headers

2011-10-26 21:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: compile without ROSE_EXTENSIONS

2011-10-26 21:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: uncrustified

2011-10-26 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: detect AIX brokenness

2011-10-26 20:22  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/56reader-rwlock.h, include/qt_shepherd_innards.h,
	  src/qthread.c, src/threadqueues/nottingham_threadqueues.c: 
	  Fixing/cleaning up nottingham scheduler (56reader-rwlock.h) change size to allow up to 120 threads (now
	  	requires worker id) (qt_shepherd_innards.h) move pointer to steal buffers into workers (nottingham_threadqueues.c) chang nonemtpy field to empty field 	pass worker id to reader/writer lock 	fix malloc alignments 	coalsce qthread_steal calls 	better empty detection/reduce locked regions (qthread.c) malloc (no)steal buffer for each worker 	zero out ret_value on thread alloc (bottom 4 bits must be 0)

2011-10-26 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/sys_wait4.c: make sure the prototype is available

2011-10-25 20:25  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qthread/qt_syscalls.h,
	  src/syscalls/Makefile.inc, test/Makefile.am: add a flag to do
	  header-based syscall interception via mangling

2011-10-25 20:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am,
	  include/qthread/qt_syscalls.h, src/syscalls/Makefile.inc,
	  src/syscalls/sys_accept.c, src/syscalls/sys_connect.c,
	  src/syscalls/sys_nanosleep.c, src/syscalls/sys_poll.c,
	  src/syscalls/sys_pread.c, src/syscalls/sys_pwrite.c,
	  src/syscalls/sys_read.c, src/syscalls/sys_select.c,
	  src/syscalls/sys_sleep.c, src/syscalls/sys_system.c,
	  src/syscalls/sys_usleep.c, src/syscalls/sys_wait4.c,
	  src/syscalls/sys_write.c: provide explicit qt_* functions for the
	  syscalls

2011-10-25 19:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h, src/io.c, src/syscalls/Makefile.inc,
	  src/syscalls/sys_pwrite.c: now handles missing syscall()
	  function; also supports pwrite

2011-10-25 18:57  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect syscall and sys/syscall.h support (e.g. AIX
	  does not have these)

2011-10-25 18:56  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4: detect more syscalls

2011-10-25 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: warning flags for Convey C++ and IBM XL C++ were
	  modifying the wrong variable

2011-10-25 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: warning flags for Convey

2011-10-25 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: detect Convey and Open64
	  compilers

2011-10-24 21:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qt_loops.c: more info

2011-10-24 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: xlc

2011-10-24 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: need __FUNCTION__ in qthread.h

2011-10-24 20:37  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_FUNCTION.m4: fix xlc problem

2011-10-17 14:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c,
	  test/time_qt_loops.c: donecount qloop variants

2011-10-13 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qt_loops.c: better benchmarking architecture (more
	  flexible, adds aligned_t support)

2011-10-13 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: aligned_t loop sync (mostly for
	  benchmarking)

2011-10-13 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: aligned_t loop sync (mostly for benchmarking)

2011-10-13 14:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qt_loops.c: more detail

2011-10-13 14:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/altix.c: initialize even if first call is fastrand

2011-10-12 16:11  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qloop.h, src/qloop.c, test/Makefile.am,
	  test/time_qt_loopaccums.c: Adds qt_loopaccum_balance_sinc() and a
	  timing test.

2011-10-12 15:42  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_sinc.c: Initializes result pointer in all cases.

2011-10-11 20:15  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/test_sinc.c: Removes unnecessary qthread_incr() in reduction
	  operator.

2011-10-11 20:13  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qtimer.h, src/qtimer/altix.c,
	  src/qtimer/gethrtime.c, src/qtimer/gettime.c,
	  src/qtimer/gettimeofday.c, src/qtimer/mach.c: Changes
	  qtimer_fastrand() to return an unsigned long.

2011-10-10 23:14  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Updates qthread_worker() to set shepherd_id
	  parameter when configured with --disable-multithreaded-shepherds.

2011-10-10 17:01  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/test_sinc.c: Cleans up compiler warning regarding my_incr.

2011-10-10 16:41  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qt_sinc.h, src/qt_sinc.c,
	  test/test_sinc.c: Updates sincs to use neighbor-decrement
	  counting scheme.

2011-10-07 00:17  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am: detect and use the `timelimit`
	  program, if available. this makes nightly testing more reliable

2011-10-04 21:36  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qt_sinc.h, src/qloop.c, src/qt_sinc.c,
	  test/test_sinc.c: Updates sinc interface. Adds support for: -   null value sincs, -   user-specified value types, -   user-specified operations, -   specifying an initial number of spawns, -   resetting a sinc

2011-10-03 22:58  Kyle Wheeler <kbwheel@sandia.gov>

	* test/rose_bots_benchmarks/Makefile.am: keep tests out of `make
	  check`

2011-10-03 22:57  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: a VERSION #def

2011-10-03 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: ROSE: initialize currentParallelRegion

2011-10-03 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initialize ROSE's auto-allocated return value
	  (thereby avoiding random problems)

2011-10-03 22:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test/rose_bots_benchmarks/Makefile.am,
	  test/rose_bots_benchmarks/README,
	  test/rose_bots_benchmarks/fft/app-desc.h,
	  test/rose_bots_benchmarks/fft/fft.h,
	  test/rose_bots_benchmarks/fft/rose_bots_main_fft.cc,
	  test/rose_bots_benchmarks/fft/rose_fft.cc,
	  test/rose_bots_benchmarks/fft/rose_tied-fft.cc: add FFT benchmark

2011-10-03 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/rose_bots_benchmarks/README: explain compiler warnings

2011-10-03 22:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/rose_bots_benchmarks/Makefile.am: remove redundant LDADD

2011-10-03 21:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/log_arrivaldetector.c,
	  src/interfaces/rose/xomp.c, src/qthread.c: remove PGI warnings

2011-10-03 21:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h: remove unnecessary comma

2011-10-03 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/56reader-rwlock.h, include/Makefile.am,
	  include/qthread/56reader-rwlock.h: move 56reader-rwlock.h into a
	  more appropriate location (and include in distribution)

2011-10-03 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, include/qthread/56reader-rwlock.h,
	  src/interfaces/chapel/tasks-qthreads.h,
	  src/interfaces/rose/xomp.c, src/qt_barrier.c,
	  src/qt_feb_barrier.c, src/qtimer/mach.c,
	  src/threadqueues/nottingham_threadqueues.c: replace stdint.h with
	  the autoconf-generated compatibility file qthread-int.h

2011-10-03 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/rose_bots_benchmarks/Makefile.am: change ordering of
	  libraries to build better with certain picky compilers (Intel)

2011-10-03 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h, src/qloop.c,
	  src/qthread.c: fix Intel 12.x compiler warnings

2011-10-03 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c: remove compiler warnings

2011-09-30 19:57  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Updates
	  chpl_task_get/setSerial() and chpl_task_getId() to work outside of
	  tasking layer.

2011-09-29 03:18  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am,
	  test/rose_bots_benchmarks/Makefile.am,
	  test/rose_bots_benchmarks/README,
	  test/rose_bots_benchmarks/alignment/forloop/alignment.h,
	  test/rose_bots_benchmarks/alignment/forloop/app-desc.h,
	  test/rose_bots_benchmarks/alignment/forloop/param.h,
	  test/rose_bots_benchmarks/alignment/forloop/rose_alignmen
	  t.save.c,
	  test/rose_bots_benchmarks/alignment/forloop/rose_alignmen
	  t_for.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_bots_mai
	  n_alignmentfor.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_sequence
	  _alignmentfor.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_tied-ali
	  gnment_for.cc,
	  test/rose_bots_benchmarks/alignment/forloop/rose_tied-seq
	  uence_alignmentfor.cc,
	  test/rose_bots_benchmarks/alignment/task/alignment.h,
	  test/rose_bots_benchmarks/alignment/task/app-desc.h,
	  test/rose_bots_benchmarks/alignment/task/param.h,
	  test/rose_bots_benchmarks/alignment/task/rose_alignment_t
	  ask.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_bots_main_a
	  lignmenttask.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_sequence_al
	  ignmenttask.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_tied-alignm
	  ent_task.cc,
	  test/rose_bots_benchmarks/alignment/task/rose_tied-sequen
	  ce_alignmenttask.cc,
	  test/rose_bots_benchmarks/common/bots.h,
	  test/rose_bots_benchmarks/common/bots_common.h,
	  test/rose_bots_benchmarks/common/bots_main.h,
	  test/rose_bots_benchmarks/common/omp-tasks-app.h,
	  test/rose_bots_benchmarks/common/rose_bots_common.cc,
	  test/rose_bots_benchmarks/fib/app-desc.h,
	  test/rose_bots_benchmarks/fib/rose_bots_main_fib.cc,
	  test/rose_bots_benchmarks/fib/rose_fib.cc,
	  test/rose_bots_benchmarks/fib/rose_tied-fib.cc,
	  test/rose_bots_benchmarks/health/app-desc.h,
	  test/rose_bots_benchmarks/health/health.h,
	  test/rose_bots_benchmarks/health/rose_bots_main_health.cc
	  , test/rose_bots_benchmarks/health/rose_health.cc,
	  test/rose_bots_benchmarks/health/rose_tied-health.cc,
	  test/rose_bots_benchmarks/libxomp.h,
	  test/rose_bots_benchmarks/nqueens/app-desc.h,
	  test/rose_bots_benchmarks/nqueens/rose_bots_main_nqueens.
	  cc, test/rose_bots_benchmarks/nqueens/rose_nqueens.cc,
	  test/rose_bots_benchmarks/sort/app-desc.h,
	  test/rose_bots_benchmarks/sort/rose_bots_main_sort.cc,
	  test/rose_bots_benchmarks/sort/rose_sort.cc,
	  test/rose_bots_benchmarks/sort/rose_tied-sort.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/app-desc.h,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_bots_main
	  _sparselufor.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_rose_spar
	  selu.c,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_sparselu.
	  save.c,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_sparselu_
	  for.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/rose_tied-spar
	  selu.cc,
	  test/rose_bots_benchmarks/sparselu/forloop/sparselu.h,
	  test/rose_bots_benchmarks/sparselu/task/app-desc.h,
	  test/rose_bots_benchmarks/sparselu/task/rose_bots_main_sp
	  arselutask.cc,
	  test/rose_bots_benchmarks/sparselu/task/rose_sparselu.sav
	  e.c,
	  test/rose_bots_benchmarks/sparselu/task/rose_sparselu_tas
	  k.cc,
	  test/rose_bots_benchmarks/sparselu/task/rose_tied-sparsel
	  u.cc, test/rose_bots_benchmarks/sparselu/task/sparselu.h,
	  test/rose_bots_benchmarks/strassen/app-desc.h,
	  test/rose_bots_benchmarks/strassen/rose_bots_main_strasse
	  n.cc,
	  test/rose_bots_benchmarks/strassen/rose_strassen.cc,
	  test/rose_bots_benchmarks/strassen/rose_tied-strassen.cc,
	  test/rose_bots_benchmarks/strassen/strassen.h: add ROSE-processed
	  BOTS benchmarks to benchmark build process (read: put our cards on
	  the table)

2011-09-28 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c, test/time_halo_swap_all.c,
	  test/time_qt_loops.c: resync to 1.7 updates

2011-09-28 06:02  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: trunk is officially always in development mode :)

2011-09-28 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qpool.c: merge logic from qt_mpool

2011-09-28 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: clean up the fastlocks

2011-09-28 05:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qthread/Makefile.am,
	  src/net/portals4/Makefile.inc, src/qthread.c,
	  src/threadqueues/sherwood_threadqueues.c: merge in minor fixes
	  from 1.7 branch

2011-09-27 02:23  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: for the 1.7 release

2011-09-26 19:27  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: I don't know if these three NULLs are required I
	  	just feel alot better with them present to stop possible reuse of
	  freed memory

2011-09-26 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: tidy up compiler warnings

2011-09-26 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_atomics.h: configure now detects
	  preconditions for internal spinlock

2011-09-26 18:38  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_mpool.c: changing reuse pool to be locked -- was having
	  	lots of random memory problems with previous implementation.  Lock
	  	should not cause problems for any level of concurrency that was not
	  	having problems with the linked list that is used within the reuse
	  pool

2011-09-26 18:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: Allan's spinlock kicks butt, so lets use it
	  all the time (probably need to have configure turn it off when we
	  don't have hardware atomics)

2011-09-26 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: remove compiler warning in qloop_wrapper; rework
	  qloop_wrapper to avoid repeated branches

2011-09-26 16:11  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Fixes issue when doing --dry-runs.

2011-09-26 15:41  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Removes Chapel configuration option because it
	  does not build outside the Chapel source tree.

2011-09-26 15:35  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds summary to end of build session.

2011-09-22 21:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initialize hazardptrs

2011-09-22 21:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hazardptrs.h, include/qt_shepherd_innards.h,
	  src/hazardptrs.c: fix hazardptrs; avoid infinite loop in binary
	  search (corrected the boundary condition), use uintptr_ts instead
	  of void* to avoid compiler warnings

2011-09-22 21:11  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qloop.h, src/qloop.c, test/Makefile.am,
	  test/test_qt_loop_balance_sinc.c,
	  test/test_qt_loop_sinc.c, test/time_qt_loops.c: Adds
	  qt_loop_sinc() and qt_loop_balance_sinc(), with associated testing
	  and timing code.

2011-09-22 21:11  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_sinc.c: Initializes counts array to all 0's and relaxes
	  writing of result to allow for corner case when two or more lucky
	  threads call qt_sinc_check() simultaneously when the sum will be 0.

2011-09-21 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: unpooled

2011-09-21 22:25  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am: install qthread_num_workers man page

2011-09-21 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: add chapel

2011-09-21 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_migrate.c: better detection/reporting of migration
	  badness

2011-09-21 14:15  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* man/man3/qthread_num_workers.3: Adds a manpage entry for
	  qthread_num_workers().

2011-09-20 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c, test/test_sinc.c: uncrustified

2011-09-20 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_sinc.c, test/test_sinc.c: fix some minor compiler warnings

2011-09-20 21:12  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qt_sinc.h, src/Makefile.am,
	  src/qt_sinc.c, test/Makefile.am, test/test_sinc.c: Adds
	  rudimentary sinc construct, with test.

2011-09-20 20:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: fix the early-exit thing
	  Brad brought up (not technically our fault, but we can detect and
	  avoid the problem easily enough)

2011-09-19 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: properly initialize locks for MUTEX_INCREMENT
	  situations

2011-09-19 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: properly initialize locks for MUTEX_INCREMENT
	  situations

2011-09-19 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: prettier configs

2011-09-19 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* scripts/build.pl: more configs

2011-09-19 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: missing comma

2011-09-19 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: merge thread_count into the "profiling" umbrella

2011-09-19 19:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: surprisingly, in atexit(), there appears to be a
	  certain probability that stdout wont flush by default

2011-09-19 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/threadqueues/sherwood_threadqueues.c: make
	  sherwood work in situations where I do not have atomic hardware
	  increments and such

2011-09-19 19:23  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds an 'all' configs target; removes 'default'
	  target.

2011-09-19 19:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, include/qthread_innards.h,
	  src/qthread.c: fix single-threaded-shepherd behavior when we do
	  not have hardware atomic operations

2011-09-19 18:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: with multithreaded shepherds, the profiling hashes
	  may need synchronization (this probably needs to be re-architected
	  to be profiling on a per-worker basis)

2011-09-19 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_profiling.h: in the precond case, I am doing this work
	  on behalf of another non-running thread; so allow me to specify
	  *my* shepherd to use

2011-09-19 17:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: oooookay.... Allan added a second copy of this
	  function up higher in the file, so I will just remove this one;
	  otherwise, it doesnt compile

2011-09-16 21:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: slightly cleaner

2011-09-16 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qpool.c: sync logic with the more heavily tested qt_mpool

2011-09-16 21:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c, src/syscalls/sys_user_defined.c,
	  test/test_user_defined_block.c: fix IO subsystem queueing (there
	  were some pretty fundamental bugs there)

2011-09-16 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: work with IO subsystem, qthread
	  pthreads that are not shepherds

2011-09-16 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: show debugging information in multiple contexts

2011-09-16 20:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h, src/qthread.c: change the way debug level is
	  handled, to make it more powerful

2011-09-16 20:15  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds support for running a configuration
	  multiple times.

2011-09-16 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: *require* pthreads, dont muddy the water here

2011-09-16 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: build the library before tests

2011-09-16 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: admit it, we will require pthreads for the
	  forseeable future

2011-09-16 18:40  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* scripts/build.pl: Adds a script to make it easy to build and
	  check multiple configurations.

2011-09-16 17:29  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: update, preparing for next release

2011-09-16 17:17  Kyle Wheeler <kbwheel@sandia.gov>

	* SCHEDULING: describe nottingham

2011-09-15 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: correct comment

2011-09-15 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4, configure.in: express in the
	  configure script that nottingham requires cmpxchg16b

2011-09-15 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: dunno how this got in here; totally subverts the
	  entire purpose of rdata; fixed

2011-09-15 20:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: avoid unnecessary CAS operations in mwaitc

2011-09-15 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix another minor memory leak

2011-09-15 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix minor memory leak

2011-09-15 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qtimer.c: randomization analysis of fastrand

2011-09-15 15:35  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Adds appropriate header for getpagesize().

2011-09-14 21:20  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qt_threadqueues.h,
	  include/qthread/56reader-rwlock.h, src/Makefile.am,
	  src/qthread.c, src/syncvar.c,
	  src/threadqueues/default_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nottingham_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c, src/touch.c: adding a
	  new scheduler -- nottingham -- looks a lot like sherwood but with a
	  mostly lock-free queue implementation rather than the locking queue
	  that is in sherwood.  (56reader-rwlock.h) reader/writer lock used to control access to
	  queue (qt_threadqueues.h) threadqueue nodes made private to schedulers (configure.in) add --with-scheduler=nottingham (no check to make
	  		sure we're x86 and we need to be (default_threadqueues.c) make qt_threadqueue_node_t typedef local (mutexfifo_threadqueues.c) make qt_threadqueue_node_t typedef local (mtsfifo_threadqueues.c) make qt_threadqueue_node_t typedef local (nottingham_threadqueues.c) inital implementation of nottingham
	  	scheduler - multi-worker for each shepherd like sherwood - but a mostly
	  	lock-free queue implementation.  Queue access controlled by
	  	reader/writer lock local threads are 'readers' and use the
	  	underlying lock-free LIFO queue to improve locality. When a steal
	  	is trying to take work, it is a writer and uses the now locked
	  	queue in a FIFO manner. Since local accesses should greatly
	  	outnumber steals this should allow much better scaling as the
	  	number of workers per shepherd rises.  (sherwood_threadqueues.c) make qt_threadqueue_node_t typedef and 		2 functions local 	change qt_threadqueue_dequeue_specific to use qthread_t not 		qt_threadqueue_node_t to match nottingham (touch.c) change to use qthread_t not qt_threadqueue_node_t to
	  match nottingham (syncvar.c) reduce initial timeout -- small tasks are performance
	  		limited by overhead and this is playing a big part (Makefile.am) add nottingham scheduler to compilation list (qthread.c) add qthread_task_free (again?) 	initialize new qthread_t fields 	for ROSE only free qthread when parent and child are done

2011-09-13 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix an accidental reversion in r2351

2011-09-13 19:40  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: put uses of qthread_task_free under ifdef ROSE

2011-09-13 18:40  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, include/qt_qthread_struct.h,
	  include/qthread/qthread.h, include/qthread_innards.h,
	  include/rose_xomp.h, src/interfaces/rose/xomp.c,
	  src/qloop.c, src/qthread.c,
	  src/threadqueues/sherwood_threadqueues.c: Most a speed
	  improvement -- remove a calloc in every task creation (and remove
	  the leak that resulted) (qt_qthread_struct.h) add three field to hold return value and
	  	pointers to lists to allow taskwait in OpenMP to wait on created
	  tasks (qthread.h) add new functions to access/change lists of child and
	  	sibling tasks (rose_xomp.h) cleanup remove dead functions (qthread_innards.h) add call move from xomp.c (under ROSE ifdef) (xomp.c) add parallel function wrapper (move barrier to here out of
	  	qthread.c) move qt_loop_rose_queue_create to qloop -- to improve
	  		performance initialization now occurs in qthread_initialiize and
	  		the function visability increased 	rewrite walkSyncTaskList to use new lists of sibling and child
	  	tasks remove dead functions 	change call to  qthread_fork_syncvar_copyargs -- since return slot
	  		not allocated until within function (sherwood_threadqueues.c) move includes to fix warnings (qthread.c) add return value to task structure to eliminate second
	  	calloc call memory free for base structure now cannot happen until
	  	task is over and parent has acknowledged -- qthread_thread_free
	  	split - handles rdata qthread_task_free -- handles base structure 	add new calls to allow silbing and child lists to be built, 		accessed and deleted (qloop.c) remove barrier in qloop_step_wrapper -- now in
	  		parallel_wrapper in xomp.c 	move qt_loop_rose_queue_create so that it compiles -- otherwise t
	  usr/bin/ld: .libs/qloop.o: relocation R_X86_64_PC32 against
	  `qt_naked_parallel_for' can not be used when making a shared
	  object; recompile with -fPIC

2011-09-13 18:31  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Restructures Chapel
	  tasking shim to handle exiting, gracefully.

2011-09-13 15:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: remind myself that if we need more
	  than 8 flags, we need to resize the flags variable

2011-09-13 15:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: qthread_finalize() is only legitimate to call from
	  the McCoy thread

2011-09-12 20:38  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Sets number of shepherds and workers per shepherd
	  to always print when QTHREAD_INFO is set; also prints stack size
	  when QTHREAD_INFO is set.

2011-09-12 20:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: Reverts r2344 (accidental patch).

2011-09-12 20:03  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* : 2	0	include/qthread/qthread.h 414	232	test/time_halo_swap_all.c

2011-09-08 14:10  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Surppresses "Forced X" messages when manually
	  setting the number of shepherds and workers. The messages can be
	  toggled on by setting the QTHREAD_INFO environment variable (to
	  anything).

2011-09-07 16:49  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Fixes a bug in
	  Chapel/Qthreads initialization where the environment variables were
	  being overwritten/discarded. Also cleans up logic for selection of
	  number-of-sheps (and workers) and the call stack size.

2011-09-07 16:19  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Explicitly initializes
	  syncvar return values. This fixes a hang seen when running with
	  Chapel.

2011-09-07 16:14  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Check that reference to valid worker was returned
	  before attempting to update it. This fixes a segfault when running
	  with fresh Chapel checkout.

2011-09-06 20:41  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: Adds syncvar initializers that take an
	  initial value.

2011-09-02 18:49  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Updates Qthreads setup
	  when used with Chapel.Specifying a value for numThreadsPerLocale on
	  the commandline will override an existing setting of
	  QTHREAD_NUM_SHEPHERDS, otherwise an existing setting of
	  QTHREAD_NUM_SHEPHERDS will be used. If neither numThreadsPerLocale
	  nor QTHREAD_NUM_SHEPHERDS is set, then QTHREAD_NUM_SHEPHERDS is set
	  to the result of chpl_numCoreOnThisLocale().  If QTHREAD_NUM_SHEPHERDS is set by either numThreadsPerLocale or
	  chpl_numCoreOnThisLocale() then QTHREAD_NUM_WORKERS_PER_SHEPHERD is
	  set to 1.  Specifying a value for callStackSize on the commandline will
	  override an existing setting of QTHREAD_STACK_SIZE, otherwise an
	  existing setting of QTHREAD_STACK_SIZE will be used. If neither
	  numThreadsPerLocale nor QTHREAD_STACK_SIZE is set, then
	  QTHREAD_STACK_SIZE is set to the hardcoded default.

2011-09-01 16:37  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Checkpoints quite questionable version
	  of halo swapping.

2011-09-01 16:34  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues/sherwood_threadqueues.c: Includes header for
	  memalign() in the unpooled memory case.

2011-09-01 15:11  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/argparsing.h: Cleans up NUMARRARGS().

2011-08-26 23:26  Brad Chamberlain <bradcray@gmail.com>

	* src/interfaces/chapel/tasks-qthreads.c: Updating Qthreads
	  implementation of Chapel interface to reflect recent changes This update catches the qthreads tree up with recent changes in the
	  Chapel tasking interface: * removes the chpl_task_getMax*() routines which have been
	  deprecated * updates the chpl_task_init() routine which now takes the
	    requested number of threads (shepherds) an upper limit on the
	    number of threads/shepherds if one exists (e.g., as imposed by the   communication layer), and whether or not a special task is going
	    to be requested for communication progress.    - updated the logic of this routine to create the requested
	      number of shepherds, and to use a number equal to the number of
	      cores on the locale (as determined by Chapel's utility function) if
	      it is unspecified.    - also changed the default callstack size to use something larger     than qthreads does by default in order to make it more similar     to other tasking layers/less likely to seg fault for nontrivial     programs.  Making these same changes to the snapshot of qthreads in Chapel's
	  SVN repository has not hurt stability and has made testing work
	  better (primarily due to the callstack size change).
	  Unfortunately, I'm getting instabilities when using the trunk
	  version of qthreads with the trunk version of Chapel, but have not
	  had a chance to diagnose yet (and may not until we consider a new
	  snapshot of qthreads in hopes that it stabilizes itself).

2011-08-26 04:32  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: officially switch the default: MULTITHREADED
	  SHEPHERDS

2011-08-26 04:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: do something with that value

2011-08-25 19:55  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/argparsing.h, test/time_halo_swap_all.c: Adds a default
	  value argument to NUMARRARG() and cleans up processing of the
	  environment variable.

2011-08-25 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/power-ucontext.h: fix compiling on MacOSX PPC

2011-08-25 17:58  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Adds support for varying the
	  individual row and column widths.

2011-08-25 17:57  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/argparsing.h: Adds NUMARRARG() macro for reading in a
	  comma-delimited list of unsigned integers.

2011-08-25 16:19  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Merges various update routines.

2011-08-24 21:02  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Updated various qthread_fork()'s to
	  use syncvars.

2011-08-24 18:25  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Switches synchronization method from
	  aligned_t FEBs to syncvars.

2011-08-24 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: now that I'm confident in the
	  math, actually use QTHREAD_WORKER_UNIT to create worker spacing

2011-08-24 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: more worker-placement debugging

2011-08-24 16:52  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Cleans up logic for boundary setup.

2011-08-24 16:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: calculate a new PU based on worker
	  spacing (QTHREAD_WORKER_UNIT)

2011-08-24 16:01  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Fixes get_position() method.

2011-08-23 20:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: tweaking the wraparounds
	  calculation

2011-08-23 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: better calculation of wraparound

2011-08-19 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: more debugging

2011-08-19 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use migrate to un-tie a task, if necessary

2011-08-19 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: remove compiler warnings

2011-08-19 20:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: better debug output

2011-08-19 20:51  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_halo_swap_all.c: Adds local computation and halo
	  exchange. Still needs 'message' coarsening support, and a bit of
	  cleaning.

2011-08-19 20:49  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, src/qthread.c: Adds a
	  qthread_fork_copyargs() method to support copying arg values when
	  synchronizing on an FEB (aligned_t).

2011-08-19 20:43  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/test_migrate.c: Fixes migrate test so it builds.

2011-08-19 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: I was pretty sure this was the effect already,
	  but...

2011-08-19 20:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_migrate.c: more verbose

2011-08-17 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: more sensible hwloc pinning for
	  non-multithreaded shepherds

2011-08-17 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: use compatibility macro QTHREAD_TRAP instead of
	  __builtin_trap

2011-08-17 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: use compatibility macro QTHREAD_TRAP
	  instead of __builtin_trap

2011-08-17 14:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/sys_accept.c, src/syscalls/sys_connect.c,
	  src/syscalls/sys_poll.c, src/syscalls/sys_pread.c,
	  src/syscalls/sys_read.c, src/syscalls/sys_select.c,
	  src/syscalls/sys_system.c,
	  src/syscalls/sys_user_defined.c,
	  src/syscalls/sys_wait4.c, src/syscalls/sys_write.c: ensure that
	  job is allocated properly, and that the next pointer is null

2011-08-16 17:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: remove unnecessary includes, now that
	  qt_debug.h is a separate file

2011-08-16 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: fix PU-pinning when #sheps >
	  #shepobjs (i.e. avoid pinning to the same PU when shepobjs have
	  multiple PUs)

2011-08-16 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: missed an include

2011-08-16 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix alloc

2011-08-16 16:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove unused variable/function-call

2011-08-16 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: tree-based spawning for qt_loop and qt_loop_balance
	  (kudos to Allan for doing all the hard parts)

2011-08-16 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: tidy up the #includes

2011-08-16 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qt_loop.c,
	  test/test_qt_loop_balance.c: additional tests to find failures
	  earlier

2011-08-15 19:23  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/Makefile.am, test/time_halo_swap_all.c: Adds first stab at
	  halo exchange example.

2011-08-12 15:59  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_debug.h, src/qthread.c: (qt_debug.h) allow debug switch and multithreaded shepherds to
	  compile (qthreac.c) move debug to allow multithreaded shepherds and debug 	option not hang

2011-08-12 14:47  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: Should fix Kyle's C++ build problem --
	  	I'm suprised that this does not generate any casting warnings in
	  the build

2011-08-11 19:03  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4: apparently none of this is actually necessary;
	  autoreconf should automagically add these thigns to aclocal.m4

2011-08-11 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: update error function

2011-08-11 16:44  bwbarrett <bwbarrett@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* config/ompi_check_package.m4,
	  config/qthread_check_portals4.m4: add missing m4 files

2011-08-11 14:41  Stephen Olivier <olivier@cs.unc.edu>

	* include/qt_debug.h, include/qt_locks.h: add missing includes for
	  compiling with debug enabled

2011-08-10 21:23  bwbarrett <bwbarrett@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/net/driver.h, include/net/net.h,
	  src/Makefile.am, src/net/Makefile.inc, src/net/net.c,
	  src/net/portals4/Makefile.inc,
	  src/net/portals4/portals4.c,
	  src/net/portals4/runtime-mpi.c,
	  src/net/portals4/runtime-shmemrt.c,
	  src/net/portals4/runtime.h, src/qthread.c: initial implementation
	  of backend needed for multinode qthreads

2011-08-10 15:51  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c, src/qloop.c, src/qt_mpool.c,
	  src/qthread.c, src/syncvar.c,
	  src/threadqueues/sherwood_threadqueues.c: fix rose complile and a
	  couple of bugs (xomp.c) use visible fuctions not qthread structure directly (this
	  		is a performace problem waiting to happen) (sherwood_threadqueues.c) when mccoy required don't return other in
	  addition (syncvar.c) increase safety (qthread.c) when shifting to original thread mark as yielded (qloop.c) add comment (qt_mpool.c) add printf for failure case 	add parens for my sanity

2011-08-09 19:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: bugfix to r2285

2011-08-09 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/qthread.c: improve precond load balancing (we
	  think) by avoiding unnecessary round-robin increments

2011-08-09 18:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/qthread.c: fix precond load balancing (we think)

2011-08-09 13:54  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_feb.c: Updates workload routine; splits update
	  task into one task with no synchronization, and another task with
	  synchronization (for #(timesteps)>1).

2011-08-09 13:52  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_bsp.c: Updates workload routine.

2011-08-09 13:52  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_pre.c: Updates workload routine, adds
	  qt_feb_barrier_destroy().

2011-08-08 13:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_affinity.h, src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c, src/qthread.c: unified the
	  qt_affinity_init() interface (improves code readability)

2011-08-05 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: trying to simplify
	  qthread_initialize multithreaded-shepherds vs
	  single-threaded-shepherds

2011-08-05 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: improve choice on LOCKING_STRIPES

2011-08-04 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/gettime.c: improve fastrand to be more rand

2011-08-03 15:14  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_bsp.c, test/time_stencil_feb.c,
	  test/time_stencil_pre.c: Makes workload an execution time
	  parameter and removes use of nanosleep for artificial workload.

2011-08-02 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_builtin_trap.m4,
	  configure.in, include/qthread/common.h.in,
	  include/qthread/qthread.h, src/ds/qarray.c: support
	  __builtin_trap()

2011-08-01 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: maybe fix some deadlocks in feb_barrier

2011-08-01 22:05  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_feb.c: Adds test for stencil_feb to bypass
	  readFF()'s during the first phase of the computation. Also disables
	  destroying of the qt_feb_barrier (which is causing intermittent
	  deadlocks).

2011-08-01 21:49  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_feb.c, test/time_stencil_pre.c: Cleans up 'pre'
	  and 'feb' stencil codes.

2011-08-01 19:31  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_bsp.c, test/time_stencil_feb.c,
	  test/time_stencil_pre.c: Adds parameter for setting variable
	  workload for stencil computations.

2011-08-01 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: qthread_shep_next and
	  friends

2011-08-01 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: be more picky about specified topology libraries

2011-08-01 16:45  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: sanity-check the --with-topology flag

2011-08-01 16:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_debug.h: include limits.h for INT_MAX

2011-08-01 15:41  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c: omp parallel region termination implies a barrier --
	  in some cases we're missing it. (all the work is within the Single
	  pragma) Solution -- force barrier at end of function that calls the
	  rose produced inner parallel function.  If the qloop_step_wrapper
	  function ever called from outside rose this would be a problem (but
	  its ifdef wrapped rose only)

2011-08-01 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: backwards-compatible behavior for the
	  --enable-debug flag

2011-07-28 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_precond_fib.c,
	  test/time_swap.c: avoid precond_fib collisions with environment
	  variables; remove time_swap (done better in time_threading)

2011-07-28 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c, src/qthread.c: move walkSyncTaskList
	  back into xomp.c

2011-07-28 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: ensure that workers is always valid, and
	  straighten out the over-use of #ifdefs in
	  qt_omp_parallel_region_create

2011-07-28 18:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c: remove a compiler warning

2011-07-28 18:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/log_arrivaldetector.c,
	  src/qt_barrier.c: work with new debug framework

2011-07-28 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: remove warnings

2011-07-28 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: precond_fib seems to be broken

2011-07-28 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_debug.h,
	  include/qthread_innards.h, src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/no_affinity.c, src/ds/qarray.c, src/feb.c,
	  src/futurelib.c,
	  src/interfaces/rose/log_arrivaldetector.c,
	  src/interfaces/rose/xomp.c, src/io.c, src/locks.c,
	  src/qloop.c, src/qthread.c, src/syncvar.c: a more comprehensive
	  debug output system (makes it easier to limit debug output to one
	  area of interest

2011-07-28 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: dont rely on qthread_debug outside of the library
	  itself

2011-07-28 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: uncrustification

2011-07-28 14:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: white space

2011-07-28 12:48  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, include/qthread/qthread.h,
	  include/qthread_innards.h, src/interfaces/rose/xomp.c,
	  src/qloop.c, src/qthread.c, src/rcrtool/maestro_sched.c,
	  src/threadqueues/sherwood_threadqueues.c: (include/qthread/qthread.h) add fields for new loop structure
	  handling (include/qthread_innards.h) add declaratoin on qthread_steal_stat (include/qloop_innards.h) add fields for new loop structure
	  handling (src/interfaces/rose/xomp.c) fix compilation for steal_profile
	  	config option rebuild loop structure code (now works with nested
	  		task/for loops and for nowait loops (I think anyway) 	moved two functions to qthread.c to compile correctly (src/rcrtool/maestro_sched.c) rebuild model based on LDMAPPER2 --
	  		needs to be made more generic sometime soon (src/threadqueues/sherwood_threadqueues.c) qthread_steal_stat
	  called externally (src/qthread.c) fix bug in uberfork (and way that it is called by
	  	copyto_args) build circular list of loop structures for use by
	  		nested for nowait loops 	add functions from xomp.c for compilation (src/qloop.c) initialize return field correctly

2011-07-28 01:46  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_bsp.c, test/time_stencil_feb.c,
	  test/time_stencil_pre.c: Fixes issues with "precond" stencil
	  code; adds compile-time argument to disable synchronizing on static
	  boundary conditions; removes synchronization on previous value of
	  "this" stencil point; and removes synchronization on initial stage.

2011-07-27 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: support shepherd boundary setting
	  at the "core" level

2011-07-27 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: disable alignment checking by default

2011-07-26 23:21  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_pre.c: Adds support for arbitrary NUM_STAGES >
	  2.

2011-07-26 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: make hwloc use the
	  QTHREAD_SHEPHERD_BOUNDARY envariable more intelligently

2011-07-26 20:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/sherwood_threadqueues.c: oops; this wasnt
	  supposed to get committed

2011-07-26 20:12  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* test/time_stencil_bsp.c, test/time_stencil_feb.c,
	  test/time_stencil_pre.c: Switches stencil code from 9-pt to 5-pt.

2011-07-26 18:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix memory over-provisioning

2011-07-26 18:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/locks.c, src/syncvar.c: depend on hash interface

2011-07-26 18:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: add profiling dependencies

2011-07-26 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_profiling.h: fix profiling details, add qtimer header

2011-07-26 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: improving valgrind output (still awful)

2011-07-26 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix valgrind building

2011-07-26 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: fix destroy race condition

2011-07-26 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_stencil_bsp.c,
	  test/time_stencil_feb.c, test/time_stencil_pre.c: stencil
	  benchmarks

2011-07-26 06:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: make locks work right without pooled memory again

2011-07-26 02:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix qt_loop return value logic (I can't believe I
	  was that obvlivious)

2011-07-25 22:42  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fixes error in preconds code where the pointer to
	  the array of preconds was being decremented instead of the counter.

2011-07-25 21:33  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, src/qthread.c: Adds a version of fork
	  with preconds that also copies the function args.

2011-07-25 18:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_locks.h, src/locks.c, src/qthread.c: move generic
	  memory pools for locking into the lock subsystem

2011-07-25 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/default_threadqueues.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c,
	  src/threadqueues/sherwood_threadqueues.c: add the init function
	  to the rest of the threadqueues

2011-07-25 17:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: re-uncrustified

2011-07-25 17:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h, src/qthread.c,
	  src/threadqueues/nemesis_threadqueues.c: threadqueues need an
	  init function for generic mempools

2011-07-25 17:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: ASM_ALLOWED should toggle on actual ASM support

2011-07-25 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: SYNCVAR_EMPTY_INITIALIZER is defined in qthread.h

2011-07-25 17:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: MUTEX_INCREMENT not needed if we have atomic CAS
	  builtins

2011-07-25 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: ASM_ALLOWED should toggle on actual ASM support

2011-07-25 17:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread/qthread.h: now, lets handle
	  the atomics with compiler builtins instead of inline assembly, if
	  available

2011-07-25 17:25  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: hardware increments are possible without inline
	  assembly, as long as we have compiler builtins

2011-07-25 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: reorganize the cpp tests

2011-07-25 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_precond_fib.c: add fib precond test
	  code (basic idea based on OCR presentation); basically, this just
	  works the precond implementation pretty hard, its not meant to be
	  performant

2011-07-21 22:05  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_mpool.c: Fixes deadlock associated with mem. pool alloc.

2011-07-21 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix a deadlock in preconds

2011-07-20 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c: avoid the
	  double-alloc by moving currentParallelRegion into qthread_s

2011-07-19 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnuma_affinity.c: avoid unused variables

2011-07-19 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: why didnt the compiler complain about this one?

2011-07-18 23:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: fix behavior on simple single-cpu
	  system

2011-07-18 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: test is backwards

2011-07-18 16:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: ignore calls to activate non-existent workers

2011-07-18 16:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/context.c: simplify the stack math

2011-07-18 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/rose/xomp.c: Cap the number of requested threads
	  to the number of available threads; otherwise bad things (read:
	  segfaults) happen.

2011-07-12 03:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/Makefile.am, src/qthread.c: unify
	  qthread forking semantics through the qthread_uberfork() internal
	  function (eventually, we may want to expose the uberfork); also
	  some minor cleanup to the way environment variables are handled

2011-07-12 03:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: handle a null string, and add a size_t
	  type to qthread_debug; also, rename the NONE debug level, so it
	  isnt so easy to conflict with

2011-07-12 03:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_expect.h: more expect macros

2011-07-12 03:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: commenting and reordering some of
	  the struct components

2011-07-12 03:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_threading.c: uncrustified

2011-07-12 03:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_precond.c: uncrustified

2011-07-12 03:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_basic.c: assert the return values

2011-07-12 03:36  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: add the rest of the test meta-targets

2011-07-12 03:35  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_builtin_expect.m4: fix broken expect test (fails
	  with -Werror)

2011-07-12 03:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: remove extraneous newline

2011-07-08 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: uncrustified

2011-07-06 13:47  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rcrtool/bcGen.c, src/rcrtool/common_rcrtool.c,
	  src/rcrtool/qt_rcrtool.h: Fix for environment variable controls
	  of RCRTool logging.

2011-07-05 20:27  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rcrtool/blackboard.h: Adding meter names and labels to
	  blackboard structure.

2011-07-05 15:46  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c, src/qthread.c,
	  src/rcrtool/Makefile.inc, src/rcrtool/bcGen.c,
	  src/rcrtool/qt_rcrtool.c, src/rcrtool/qt_rcrtool.h: Update to
	  RCRTool daemon and qthreads to log more clearly sequential v.
	  parallel sections, to log number of active workers, and to add
	  separate environemnt variables to control RCR throttling and
	  logging

2011-07-05 14:31  Stephen Olivier <olivier@cs.unc.edu>

	* src/interfaces/rose/xomp.c: replace stray uses of
	  qthread_internal_self with qthread_self in xomp.c

2011-07-05 14:24  Stephen Olivier <olivier@cs.unc.edu>

	* src/qthread.c: fix null shepherd pointer due to assignment
	  mistakenly under RCRTOOL guard

2011-07-01 16:46  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/rose/xomp.c, src/rcrtool/bcGen.c,
	  src/rcrtool/bcGen.h, src/rcrtool/blackboard.h,
	  src/rcrtool/common_rcrtool.c,
	  src/rcrtool/common_rcrtool.h, src/rcrtool/qt_rcrtool.c,
	  src/rcrtool/qt_rcrtool.h: Update to RCRTool daemon and qthreads
	  so that start and end of loops are logged.

2011-06-30 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: fix ROSE linking...
	  needs otherwise "secret" functions to be public

2011-06-30 14:52  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Adds guards around RCRTool and multithreaded shep.
	  specific code.

2011-06-27 21:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: align the data block

2011-06-27 21:23  Stephen Olivier <olivier@cs.unc.edu>

	* src/qthread.c: add rcrtool guard on ref to active_workers

2011-06-27 20:00  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h, src/qthread.c,
	  src/rcrtool/maestro_sched.c: add first pass at work throttling
	  (under RCRTOOL ifdef) (qt_shepherd_innards.h) add count of active workers (maestro_sched.c)add calls to runtime to limit threads (rose_xomp.c) add loop hang if rcr requests

2011-06-27 19:59  Stephen Olivier <olivier@cs.unc.edu>

	* src/interfaces/rose/xomp.c: fix to rose_xomp as follow-up to
	  moving child_task_affinity to rdata struct

2011-06-27 16:05  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Adds support for Chapel's
	  serial keyword using task-local data.

2011-06-27 16:02  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Fixes spawning of
	  chpl_main() by wrapping it with chapel_wrapper().

2011-06-27 15:10  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fixes issue with allocation of task-local data.

2011-06-24 14:48  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/interfaces/chapel/tasks-qthreads.c: Updates
	  chpl_task_callMain() to synchronize on the completion of the
	  chpl_main() task.

2011-06-23 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/interfaces/rose/Makefile.inc,
	  src/interfaces/rose/log_arrivaldetector.c,
	  src/interfaces/rose/xomp.c,
	  src/rose_log_arrivaldetector.c, src/rose_xomp.c: rearrange ROSE
	  XOMP support files to parallel the Chapel organization

2011-06-23 20:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: formatting

2011-06-23 20:35  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: remove chapel cruft, now that its a Makefile.inc
	  file

2011-06-23 20:08  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Removes copied debug message that prevents
	  building with --enable-debug.

2011-06-23 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: fix chpl_task_callMain

2011-06-23 14:47  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_shep.3,
	  man/man3/qthread_worker.3: document qthread_worker function

2011-06-22 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: formatting

2011-06-22 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: make "worker" map to
	  "shepherd" in the single-threaded-shepherd world

2011-06-22 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: make sure sherwood and MTS are selected when
	  enabling rose

2011-06-22 16:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: make
	  qthread_num_workers do something rational in all situations (even
	  without multithreaded shepherds)

2011-06-22 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* README: update to reflect modern state of things

2011-06-22 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: name the sherwood scheduler

2011-06-22 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* SCHEDULING, configure.in, src/Makefile.am,
	  src/threadqueues/sherwood_threadqueues.c: name the sherwood
	  scheduler

2011-06-22 15:12  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_qthread_struct.h, include/qthread/qthread.h,
	  include/qthread_innards.h, man/man3/Makefile.am,
	  man/man3/qthread_fork.3, man/man3/qthread_fork_precond.3,
	  man/man3/qthread_fork_precond_to.3, src/feb.c,
	  src/qthread.c, test/Makefile.am, test/test_precond.c: Adds
	  qthread_fork_precond() and qthread_fork_precond_to() methods for
	  delaying qthread instantiation until a set of preconditions are met
	  (a set of locations are filled); adds a test too.

2011-06-22 14:53  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* : Adds more test build files to SVN ignores list.

2011-06-22 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/default_threadqueues.c: sanity improvement

2011-06-22 14:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/interfaces/chapel/Makefile.am,
	  src/interfaces/chapel/Makefile.inc: include Chapel build in
	  top-level buildset, so that it builds in parallel

2011-06-21 20:34  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_threadqueues.h,
	  src/threadqueues/default_threadqueues.c,
	  src/threadqueues/lifo_threadqueues.c,
	  src/threadqueues/mtsfifo_threadqueues.c,
	  src/threadqueues/mutexfifo_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c: Fixes thread queues to
	  work when pooled memory is disabled.

2011-06-21 20:33  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_io.h, src/io.c,
	  src/syscalls/sys_user_defined.c: Adds memory management support
	  for syscall jobs when pooled memory is disabled.

2011-06-21 20:31  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_blocking_structs.h, src/hazardptrs.c,
	  src/locks.c: Includes system header files to silence build
	  warnings.

2011-06-21 20:29  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fixes malloc of qthread to include space for
	  argcopy and task-local data when pooled memory is disabled.

2011-06-21 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/Makefile.am: Chapel can now be built as a
	  dynamic library

2011-06-17 17:29  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rcrtool/Makefile.inc, src/rcrtool/bcGen.c,
	  src/rcrtool/bcGen.h, src/rcrtool/blackboard.h,
	  src/rcrtool/common_rcrtool.c,
	  src/rcrtool/common_rcrtool.h, src/rcrtool/qt_rcrtool.c,
	  src/rcrtool/triggers.c, src/rcrtool/triggers.h: First check-in of
	  ....   Moving blackboard to shared memory rather than debug file
	  system.  Also, moving daemon code out of qthreads.

2011-06-17 17:15  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qt_loop.3, man/man3/qt_loop_balance.3,
	  man/man3/qt_loop_future.3: clarify the loop descriptions a little

2011-06-16 19:43  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* man/man3/Makefile.am: Adds task-local-related man pages to build
	  system.

2011-06-16 15:31  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* man/man3/qthread_get_tasklocal.3,
	  man/man3/qthread_size_tasklocal.3: Adds man pages for new
	  task-local data functions.

2011-06-15 20:42  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* : Sets SVN ignore for generated files.

2011-06-14 16:01  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* TODO: Removes task-specific data TODO.

2011-06-14 14:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: whoops; use qassert, not
	  ptl_assert (can you tell I borrowed this code from Portals? :D)

2011-06-14 14:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: swap is apparently deprecated in SparcV9,
	  so lets use the CAS implementation

2011-06-14 14:30  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Correction to the previous check-in.

2011-06-13 21:03  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fixed seg fault caused by rdata not being
	  allocated when currentParallelRegion is saved in
	  qthread_fork_syncvar_copyargs_to().

2011-06-13 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/threadqueues/mtsfifo_threadqueues.c: give the
	  mtsfifo queue a name

2011-06-13 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4: arguments are not used for
	  commands

2011-06-13 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix the hardware_increments test (logic was
	  backwards)

2011-06-13 14:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.hpp: fix #defs for filename (bad Greg!)

2011-06-10 23:23  dylan.stark@gmail.com <dylan.stark@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_qthread_struct.h, include/qthread/qthread.h,
	  include/qthread_innards.h, src/qthread.c,
	  test/Makefile.am, test/test_tasklocal.c,
	  test/test_tasklocal_no_argcopy.c,
	  test/test_tasklocal_no_default.c: Adds support for
	  runtime-configurable task-local data.

2011-06-10 22:42  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: make nemesis the default non-multithreaded
	  scheduler (unless you dont have hardware increments, obviously)

2011-06-10 20:06  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: pretty-print the scheduler

2011-06-10 20:03  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/threadqueues/default_threadqueues.c: force
	  scheduler to be mutexfifo; remove mutex cruft from default
	  scheduler

2011-06-10 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/threadqueues/mutexfifo_threadqueues.c: separate
	  out the mutexfifo threadqueues, for systems without good atomics
	  support

2011-06-10 15:55  Kyle Wheeler <kbwheel@sandia.gov>

	* : mergeinfo stuff?

2011-06-10 14:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: use CAS instead of qthread_lock() in qsort

2011-06-10 14:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_hazardptrs.h,
	  include/qt_shepherd_innards.h, src/Makefile.am,
	  src/hazardptrs.c: preliminary hazard pointer support (not used
	  yet)

2011-06-10 07:11  Brad Chamberlain <bradcray@gmail.com>

	* src/interfaces/chapel/tasks-qthreads.c: Updated to support new
	  comm thread interface Changed Chapel interface to replace old chpl_task_perPthreadInit()
	  call with new chpl_task_createCommTask() call designed to create a
	  dedicated task for communication progress.  This call creates a
	  pthread to execute the function in question and should be
	  equivalent to what was done before -- simply without requiring
	  pthread calls in the GASNet code any longer.  With this change, and other changes to Chapel's trunk/ this
	  evening, I believe qthreads + multilocale works, at least for some
	  tests.  Broader testing is still required to gain confidence.

2011-06-09 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4, configure.in: fix 64-bit incr
	  detection on 32-bit platforms

2011-06-09 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: more idiocy

2011-06-09 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: I am an idiot

2011-06-09 14:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h: being explicit... fix compiler warning
	  about qt_threadqueue_advisory_queuelen()

2011-06-09 14:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/rose_xomp.c: fix a couple compiler warnings

2011-06-09 14:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c: move
	  currentParallelRegion to runtime data

2011-06-09 14:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c,
	  src/rose_xomp.c: move child_affinity to runtime-allocated data
	  (which is what it is)

2011-06-09 14:07  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: begin 1.6.1

2011-06-06 20:03  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: 

2011-06-06 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* : mergeinfo property? no idea what svn is talking about

2011-06-06 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread_innards.h,
	  src/qthread.c: compile on SparcV9-32 again

2011-06-06 19:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h: need the right #include for ssize_t

2011-06-06 18:31  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: Fix static loop assignment when chunk size is
	  greater than 1

2011-06-06 18:30  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_threadqueues.h: remove externally visable declaration 	qt_threadqueue_advisory_queuelen(only used internally) 	to allow compilation

2011-06-06 02:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: using syncvars here seems to add a little bit of
	  performance

2011-06-06 00:49  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: select default scheduler if none is specified

2011-06-06 00:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qutil_qsort.c: a little more output

2011-06-04 05:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/lifo_threadqueues.c: lock-free lifo threadqueues

2011-06-04 05:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/nemesis_threadqueues.c: switch to using
	  SPINLOCK_BODY() for portability, and remove a redundant assert()

2011-06-04 05:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/threadqueues/default_threadqueues.c: mark these functions as
	  INTERNAL

2011-06-04 05:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: include threadqueue files in distribution

2011-06-04 02:43  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: whoops; fix autoconf syntax error

2011-06-04 02:29  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_atomics.h, src/Makefile.am,
	  src/qthread.c, src/threadqueues.c,
	  src/threadqueues/default_threadqueues.c,
	  src/threadqueues/nemesis_threadqueues.c: new threadqueue
	  implementation: nemesis queue (still FIFO, but faster & simpler
	  than the default lock-free queue)

2011-06-03 22:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: provide the SPINLOCK_BODY() macro for
	  efficient spinning on hyperthreaded Intel machines

2011-06-03 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h: make the next pointer volatile, to
	  enable more efficient queue implementations (like NEMESIS)

2011-06-03 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: add cacheline width configure option (for speed
	  freaks who want to optimize internal data layout)

2011-06-03 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h, src/threadqueues.c: enqueue_yielded
	  should apply to all threadqueue implementations

2011-06-03 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h, include/qt_threadqueues.h,
	  src/qthread.c, src/threadqueues.c: more modularity, so that the
	  threadqueue and its associated data structures can be *entirely*
	  implementation-dependent

2011-06-03 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h, src/qthread.c,
	  src/threadqueues.c: move the queue node definition into the
	  threadqueue.c file to make the threadqueue API more modular

2011-06-02 20:23  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, src/rcrtool/maestro_sched.c,
	  src/rose_xomp.c: Make the arrays for the shepherds be dynamically
	  sized (qloop_innards.h) current_workers dynamic not hard coded to 4 (maestro_sched.c) allowed_workers dynamic not hard coded to 4 (rose_xomp.c) allocated dynamic current_worker array

2011-06-02 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix CHPL_HOME preservation for distcheck

2011-06-02 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: fix warnings from old Intel compiler

2011-06-02 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, src/threadqueues.c: fix warnings from old
	  Intel compiler

2011-06-02 05:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, src/feb.c, src/locks.c,
	  src/qt_c_hash.c, src/syncvar.c: add more asserts, change the
	  return values of some of the hash functions

2011-06-02 04:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, include/qt_profiling.h: we don't support
	  cprops anymore, so remove old cprops #defs

2011-06-01 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h,
	  include/fastcontext/taskimpl.h,
	  include/fastcontext/tile-ucontext.h,
	  src/fastcontext/context.c: simplifying; removing superfluous
	  #includes and such, now that we are not trying to duplicate the
	  makecontext() interface EXACTLY

2011-06-01 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h: adding some documentation comments

2011-06-01 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* COPYING: update to reflect file rename and repurposing

2011-06-01 18:20  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ac_prog_sed.m4: needed to use an older definition of
	  AC_PROG_SED to stay compatible with autoconf 2.59; this one has
	  been tested with old autoconf, and seems to work.

2011-06-01 17:50  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/ac_prog_sed.m4: first attempt at backwards
	  compatibility for AC_PROG_SED

2011-06-01 05:49  Kyle Wheeler <kbwheel@sandia.gov>

	* AUTHORS, ChangeLog, NEWS: updating Changelog/News/Authors to
	  prepare for 1.6

2011-06-01 05:34  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: even more ideas

2011-06-01 05:16  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: more detail

2011-06-01 05:09  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: more ideas

2011-05-30 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h,
	  include/fastcontext/power-ucontext.h: more formatting updates

2011-05-30 17:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: minor formatting fix

2011-05-30 17:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/fastcontext/asm.S: I *THINK* this fixes the %esi problem. If
	  so, it was actually a stack location problem. I was using a
	  slightly wrong stack pointer (I was including a stale return
	  location) which made function calls corrupt the stack, when ended
	  up manifesting as a wrong %esi for reasons I don't entirely
	  understand.

2011-05-30 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: convenience target for building tests

2011-05-30 17:24  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: only test the read feature if syscall
	  intercepting is turned on

2011-05-30 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h, src/fastcontext/asm.S: this
	  is not at all Marcell's code anymore, so remove the copyright
	  notice. And store/restore SSE2 control and status word on 32-bit
	  platforms. <sigh> (this is not the %esi bug)

2011-05-28 06:54  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix the assert-enable logic

2011-05-28 01:39  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/ds/qarray.c: change the way profiling is
	  enabled; also fix rlimit logic

2011-05-28 01:21  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/ds/qarray.c: reorganized configure.in to make
	  it easier to maintain and to follow the logic

2011-05-27 22:17  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: beginning a reorganization of configure to be
	  easier to read

2011-05-27 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread/qthread.h,
	  include/qthread_innards.h, src/syncvar.c,
	  test/test_cas.c, test/test_syncvar2.c, test/testincr.c: fix
	  atomic behavior on old compilers (<= gcc4.0) in 32-bit environments

2011-05-26 18:40  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread_innards.h, src/qthread.c,
	  src/rcrtool/common_rcrtool.c, src/rose_xomp.c: insert code to
	  change the number of active workers on demand from rcrtool (qthread_innerds,h) add flag to allow dynamic thread control to be
	  turned off (common_rcrtool.c) add optional output statements giving L3 misses
	  per socket (rose_xomp.c) add dynamic control of active workers (qthread.c) add flag  to allow dynamic thread control to be turned
	  	off fix code on termination forces worker 0 (leave with same thread
	  		that enters -- makes the stack correct during termination)

2011-05-26 01:40  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/syscalls/Makefile.inc: do not intercept
	  syscalls by default (needs testing)

2011-05-26 01:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/fastcontext/386-ucontext.h,
	  include/fastcontext/taskimpl.h: why was this in here?

2011-05-26 00:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/sys_connect.c: connect != accept

2011-05-25 23:27  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4: __sync_synchronize() failure
	  only happens when you link...

2011-05-25 23:18  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4, configure.in,
	  src/affinity/hwloc_affinity.c,
	  src/interfaces/chapel/tasks-qthreads.c: be a little more portable
	  with __sync_synchronize()

2011-05-25 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: make CXX test flag work again

2011-05-25 22:57  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4, src/io.c,
	  src/syscalls/Makefile.inc: connect may not exist

2011-05-25 22:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: qthread_exec is internal

2011-05-25 14:10  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread_innards.h: fix typo inside ROSE ifdef section

2011-05-25 08:31  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4, src/io.c,
	  src/syscalls/Makefile.inc: wrong syscall; need to check
	  accept()... because solaris is being dumb and has a *close* but not
	  equivalent declaration. <sigh>

2011-05-25 08:21  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4: extra testing for accept()
	  intercepting (this is dumb)

2011-05-25 08:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c, src/io.c: fixing some Solaris compiling issues
	  (not done)

2011-05-25 07:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2_affinity.c: fix the compiler warning

2011-05-25 07:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/Makefile.am: install the header to the
	  correct location

2011-05-25 06:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/Makefile.am: compile without an installed
	  qthreads

2011-05-25 06:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am: fix ordering on the uninstall-local
	  target

2011-05-25 06:34  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4: fix typo that prevented
	  optional syscalls from being built

2011-05-25 06:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/futurelib_innards.h,
	  include/qt_affinity.h, include/qt_visibility.h,
	  include/qthread_innards.h, src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c, src/ds/qarray.c,
	  src/fastcontext/context.c, src/futurelib.c, src/io.c,
	  src/qt_c_hash.c, src/qthread.c, src/threadqueues.c: add GCC
	  visibility support

2011-05-25 05:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/tasks-qthreads.c: avoid a dumb compiler
	  warning in some circumstances

2011-05-25 05:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/Makefile.am,
	  src/interfaces/chapel/include/tasks-qthreads.h,
	  src/interfaces/chapel/src/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.c,
	  src/interfaces/chapel/tasks-qthreads.h: simplifying the file
	  structure

2011-05-25 05:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/interfaces/chapel/Makefile.inc,
	  src/interfaces/chapel/README,
	  src/interfaces/chapel/src/Makefile,
	  src/interfaces/chapel/src/Makefile.include,
	  src/interfaces/chapel/src/Makefile.share: remove extraneous
	  Chapel files

2011-05-25 05:21  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, configure.in, include/qthread/Makefile.am,
	  shims/chapel/README,
	  shims/chapel/include/tasks-qthreads.h,
	  shims/chapel/src/Makefile,
	  shims/chapel/src/Makefile.include,
	  shims/chapel/src/Makefile.share,
	  shims/chapel/src/tasks-qthreads.c, src/Makefile.am,
	  src/interfaces/chapel/Makefile.am,
	  src/interfaces/chapel/Makefile.inc,
	  src/interfaces/chapel/README,
	  src/interfaces/chapel/include/tasks-qthreads.h,
	  src/interfaces/chapel/src/Makefile,
	  src/interfaces/chapel/src/Makefile.include,
	  src/interfaces/chapel/src/Makefile.share,
	  src/interfaces/chapel/src/tasks-qthreads.c: change the way we do
	  support for Chapel; this way Brad seems to like better, and makes a
	  more convincing case that the Chapel support code actually part of
	  qthreads

2011-05-24 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4, include/qt_io.h,
	  src/io.c, src/syscalls/Makefile.inc,
	  src/syscalls/sys_pread.c: intercept pread() too

2011-05-24 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4, configure.in,
	  src/io.c, src/syscalls/Makefile.inc: fix compile on Solaris

2011-05-24 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: this seems to avoid segfaults... not sure why yet

2011-05-23 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* shims/chapel/src/Makefile,
	  shims/chapel/src/Makefile.include,
	  shims/chapel/src/Makefile.share: remove Cray copyright (whoops!)

2011-05-23 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* shims/chapel/src/tasks-qthreads.c: match current Chapel svn

2011-05-23 12:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: header files for abort and gettimeofday

2011-05-23 11:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qlfqueue.c: formatting

2011-05-23 11:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qtimer.c: machines are fast enough now... zero-length
	  qtimer results may just mean sub-micro-second execution

2011-05-23 11:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: include qt_io.h header

2011-05-23 11:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls/sys_accept.c, src/syscalls/sys_connect.c,
	  src/syscalls/sys_nanosleep.c, src/syscalls/sys_poll.c,
	  src/syscalls/sys_select.c, src/syscalls/sys_wait4.c: on Linux,
	  syscall() requires unistd.h

2011-05-19 16:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: remove unnecessary Q_DEPRECATED
	  comment (qthread_num_shepherds is here to stay)

2011-05-19 05:01  Kyle Wheeler <kbwheel@sandia.gov>

	* shims/chapel/src/tasks-qthreads.c: better comments and some
	  debugging functions implemented

2011-05-19 04:44  Kyle Wheeler <kbwheel@sandia.gov>

	* shims/chapel/src/tasks-qthreads.c: avoid using malloc in spawning
	  tasks

2011-05-19 04:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: make copyargs fork function public

2011-05-13 00:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/io.c, src/qthread.c: correctly
	  shut down the IO interface *BEFORE* shutting down the worker
	  threads (otherwise bad things can happen)

2011-05-11 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: whitespace

2011-05-11 22:52  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_syscalltypes.m4, include/qt_io.h,
	  include/qthread_innards.h, src/io.c,
	  src/syscalls/Makefile.inc, src/syscalls/sys_poll.c,
	  src/syscalls/sys_read.c, src/syscalls/sys_select.c,
	  src/syscalls/sys_system.c, src/syscalls/sys_wait4.c,
	  src/syscalls/sys_write.c: the rest of the important syscalls

2011-05-11 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h, include/qthread_innards.h, src/io.c,
	  src/qthread.c, src/syscalls/Makefile.inc,
	  src/syscalls/sys_accept.c, src/syscalls/sys_nanosleep.c,
	  src/syscalls/sys_sleep.c,
	  src/syscalls/sys_user_defined.c,
	  src/syscalls/sys_usleep.c, test/Makefile.am,
	  test/test_user_defined_block.c: allow/enable arbitrary blocking
	  operations

2011-05-11 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: fix compiler warning

2011-05-11 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: change the latency arbitrarily

2011-05-11 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/syscalls.c,
	  src/syscalls/Makefile.inc, src/syscalls/sys_accept.c,
	  src/syscalls/sys_connect.c, src/syscalls/sys_nanosleep.c,
	  src/syscalls/sys_read.c, src/syscalls/sys_sleep.c,
	  src/syscalls/sys_usleep.c: re-organize syscall functions into
	  files, to make it easier to turn them on and off

2011-05-11 20:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h, src/io.c, src/qthread.c, src/syscalls.c,
	  test/Makefile.am, test/test_read.c: basic proof-of-concept read
	  operation proven to work

2011-05-11 18:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_cpp.cpp: always test C++

2011-05-11 18:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.hpp: fix the #include

2011-05-10 15:54  Greg Mackey <gmackey@sandia.gov>

	* README: Oops!  Didn't mean to commit on that last one.  Was just
	  testing something out.  This reverts the previous commit.

2011-05-10 15:53  Greg Mackey <gmackey@sandia.gov>

	* README: lsdkfj

2011-05-10 15:50  Greg Mackey <gmackey@sandia.gov>

	* src/io.c, test/Makefile.am, test/test_cpp_interface.cpp: Adding a
	  test of the new C++ interface, and adding the test as an extra
	  program in the makefile.  Include stdio.h in src/io.c so things
	  will compile.

2011-05-09 19:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/qloop.hpp: C++ qloop
	  interface

2011-05-09 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix memory leak (thanks Greg!)

2011-05-04 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_syscalltypes.m4,
	  configure.in, include/qt_io.h, src/io.c, src/syscalls.c: first
	  real syscall (untested)

2011-05-04 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syscalls.c: sleep should work outside of qthreads

2011-05-04 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/io.c, src/syscalls.c: sleep syscalls

2011-05-04 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/io.c: detect missing syscalls

2011-05-04 20:10  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_hash_maps.m4: no external hash maps

2011-05-04 20:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_io.h, include/qt_qthread_struct.h,
	  src/Makefile.am, src/io.c, src/qthread.c: io.c now compiles;
	  still does nothing

2011-05-04 19:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: whitespace readability

2011-05-04 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: how did this EVER work???

2011-05-03 23:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/io.c: not yet functional

2011-05-02 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_syncvar.c: make test faster on systems with lots of
	  processors

2011-05-02 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qdqueue.c, test/test_qlfqueue.c: work faster on
	  work-stealing shepherds

2011-05-02 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_internal_mod.c: this test does not
	  work under work-stealing regimes

2011-05-02 14:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: fix compiler warning w/ gcc 4.6

2011-05-02 14:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: compile with debug turned on

2011-04-30 07:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c, src/ds/qarray.c,
	  src/ds/qdqueue.c, src/ds/qlfqueue.c, src/ds/qpool.c,
	  src/patterns/allpairs.c, src/qtimer/altix.c,
	  src/qtimer/gethrtime.c, src/qtimer/gettime.c,
	  src/qtimer/gettimeofday.c, src/qtimer/mach.c: reformatting

2011-04-30 06:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c, src/cacheline.c,
	  src/ds/qarray.c, src/patterns/allpairs.c,
	  src/patterns/wavefront.c, src/qloop.c: fix misc compiler warnings
	  (-Wextra)

2011-04-30 06:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qt_mpool.h,
	  src/qt_feb_barrier.c, src/qt_mpool.c, src/qthread.c,
	  src/syncvar.c: fix misc compiler warnings (-Wextra)

2011-04-29 14:30  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: added needed ifdef and remove debugging printfs

2011-04-29 14:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: remove debug variables

2011-04-29 14:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove unused variable in
	  qt_omp_parallel_region_create

2011-04-20 20:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_external_fork.c, test/test_external_syncvar.c: fix the
	  includes

2011-04-18 14:38  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: new thoughts

2011-04-18 14:38  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_shep_ok.3: typo

2011-04-15 18:28  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/maestro_sched.h, include/qloop_innards.h,
	  src/rcrtool/Makefile.inc, src/rcrtool/bcGen.c,
	  src/rcrtool/common_rcrtool.c,
	  src/rcrtool/maestro_sched.c, src/rose_xomp.c: Start at rcrdaemon
	  infomation changing MAESTRO scheduling of loops (tasks later).
	  Adding prototype interface between daemon and scheduler and making
	  changes in both the daemon and scheduler to use the interface.  (qloop_innards.h) modify loop structure to track active thread per
	  socket (maestro_sched.h) add interface include file between daemon and
	  scheduler (bcGen.c) use new interface in daemon and reduce calls to interface (maestro_sched.c) initial prototype of interface (Makefile.inc) add new files to compilation (common_rcrtool.c) fix bug (rose_xomp.c) use interface to limit threads when memory
	  concurrency is high

2011-04-13 15:20  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, src/rcrtool/RCRlogger.c,
	  src/rcrtool/bcGen.c, src/rcrtool/common_rcrtool.c,
	  src/rcrtool/common_rcrtool.h, src/rcrtool/qt_rcrtool.c,
	  src/rcrtool/qt_rcrtool.h, src/rcrtool/triggers.c,
	  src/rcrtool/triggers.h, src/rose_xomp.c: Fix to log the
	  numberOfThreads in a call to XOMP_parallel_start.  Fixed use of
	  rcrtoollevel.  Attempt to pin rcrtool daemon.

2011-04-12 19:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_external_syncvar.c: external syncvar
	  test

2011-04-12 19:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_external_fork.c: <sigh> now make it *really* work

2011-04-12 19:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_external_fork.c: pthread_join is a blocking call;
	  cannot use it in the main thread

2011-04-11 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_shep_ok.3: fix typo

2011-04-11 19:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: make it compile

2011-04-08 17:52  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/rose_xomp.h: need the ifClause argument to compile

2011-04-08 12:02  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: Fix to rose_xomp.c.  Previous check-in left off
	  a function parameter.

2011-04-08 11:59  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread_innards.h, include/rose_xomp.h,
	  src/qthread.c, src/rcrtool/RCRlogger.c,
	  src/rcrtool/bcGen.c, src/rcrtool/common_rcrtool.c,
	  src/rcrtool/common_rcrtool.h, src/rcrtool/qt_rcrtool.c,
	  src/rcrtool/qt_rcrtool.h, src/rcrtool/triggers.c,
	  src/rcrtool/triggers.h, src/rose_xomp.c: Some clean up and
	  organization of code in the RCRTool files.

2011-04-07 18:28  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, src/rose_xomp.c: (rose_xomp.c) switch to interruptable barrier from spin lock when
	  		nested parallelism has been detected someplace in the code (qthread.c) return 1 qt_omp_parallel_region_create from  if nested
	  	parallelism fix previous pointer so that works when not nested

2011-04-07 15:44  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h, src/qthread.c,
	  src/rose_xomp.c: (qt_shepherd_innards.h) remove unneeded member (parallel region now 		all in threads) (rose_xomp.c) add if clause to parallel_start (from ROSE) 	add num_threads caluse support 	if nested allow switch to non spin barriers (qthread.c) all parallel region control now in threads

2011-04-06 15:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: external threads may use basic (original) FEBs

2011-04-06 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/locks.c: external threads may use lock/unlock

2011-04-06 14:27  Kyle Wheeler <kbwheel@sandia.gov>

	* AUTHORS, ChangeLog, NEWS: update ChangeLog - 1.5.2b

2011-04-06 14:19  Kyle Wheeler <kbwheel@sandia.gov>

	* : remove clutter

2011-04-06 13:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/fastcontext/386-ucontext.h,
	  include/fastcontext/power-ucontext.h,
	  include/fastcontext/taskimpl.h,
	  include/fastcontext/tile-ucontext.h,
	  include/osx_compat/386-ucontext.h,
	  include/osx_compat/power-ucontext.h,
	  include/osx_compat/taskimpl.h,
	  include/osx_compat/tile-ucontext.h, include/qt_context.h,
	  src/Makefile.am, src/fastcontext/COPYRIGHT,
	  src/fastcontext/Makefile.inc, src/fastcontext/asm.S,
	  src/fastcontext/context.c, src/osx_compat/COPYRIGHT,
	  src/osx_compat/Makefile.inc, src/osx_compat/asm.S,
	  src/osx_compat/context.c, test/Makefile.am,
	  test/time_swap.c: its not OSX compatibility anymore

2011-04-06 13:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c: fix compiler complaint about stdio

2011-04-06 13:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/osx_compat/386-ucontext.h,
	  include/osx_compat/power-ucontext.h,
	  include/osx_compat/taskimpl.h,
	  include/osx_compat/tile-ucontext.h, include/qt_context.h,
	  include/qt_qthread_struct.h, include/qthread_innards.h,
	  src/osx_compat/context.c, src/qthread.c: rename local context
	  datastructures to allow better integration with linux and shared
	  libraries (3 of 3)

2011-04-06 12:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h,
	  include/osx_compat/power-ucontext.h,
	  include/osx_compat/taskimpl.h, src/osx_compat/asm.S: rename local
	  get/setcontext to allow better integration with linux and shared
	  libraries (2 of 3)

2011-04-06 12:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h,
	  include/osx_compat/power-ucontext.h,
	  include/osx_compat/taskimpl.h, src/osx_compat/context.c,
	  src/qthread.c: rename local makecontext to allow better
	  integration with linux and shared libraries (0 of 3)

2011-04-06 12:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h,
	  include/osx_compat/power-ucontext.h,
	  include/osx_compat/taskimpl.h,
	  include/qthread/feb_barrier.h, src/osx_compat/context.c,
	  src/qthread.c: rename local swapcontext to allow better
	  integration with linux and shared libraries (1 of 3)

2011-04-06 12:25  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am: remove man pages

2011-04-06 12:24  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qarray_iter_loop_nb.3: missed a man page

2011-04-06 05:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/allpairs.h, include/qthread/cacheline.h,
	  include/qthread/feb_barrier.h,
	  include/qthread/futurelib.h, include/qthread/qalloc.h,
	  include/qthread/qarray.h, include/qthread/qdqueue.h,
	  include/qthread/qlfqueue.h, include/qthread/qloop.h,
	  include/qthread/qpool.h, include/qthread/qtimer.h,
	  include/qthread/qutil.h, include/qthread/wavefront.h: 
	  reformatting

2011-04-06 05:23  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_syncvar_fill.3: fix typo

2011-04-06 04:49  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_loop_queue_create.3,
	  man/man3/qt_loop_queue_setchunk.3: add documentation for setchunk

2011-04-06 03:56  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qtimer_fastrand.3: qtimer_fastrand
	  documentation

2011-04-06 03:53  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am: install them

2011-04-06 03:51  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qt_loop.3, man/man3/qt_loop_future.3,
	  man/man3/qt_loop_step.3, man/man3/qt_loop_step_future.3: 
	  qt_loop_step* documentation

2011-04-06 03:44  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qarray_iter.3: qarray_iter_loop_nb documentation

2011-04-06 03:18  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_feb_barrier_create.3,
	  man/man3/qthread_feb_barrier_destroy.3,
	  man/man3/qthread_feb_barrier_enter.3,
	  man/man3/qthread_feb_barrier_resize.3: feb barrier documentation

2011-04-06 02:50  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/future_acquire.3, man/man3/future_exit.3,
	  man/man3/future_fork.3, man/man3/future_join_all.3,
	  man/man3/future_yield.3, man/man3/qarray_elem.3,
	  man/man3/qarray_iter.3, man/man3/qdqueue_dequeue.3,
	  man/man3/qdqueue_destroy.3, man/man3/qdqueue_empty.3,
	  man/man3/qdqueue_enqueue.3, man/man3/qlfqueue_dequeue.3,
	  man/man3/qlfqueue_destroy.3, man/man3/qlfqueue_empty.3,
	  man/man3/qlfqueue_enqueue.3, man/man3/qpool_alloc.3,
	  man/man3/qpool_free.3, man/man3/qt_double_prod.3,
	  man/man3/qt_loop.3, man/man3/qt_loop_balance.3,
	  man/man3/qt_loop_future.3,
	  man/man3/qt_loop_queue_create.3,
	  man/man3/qt_loopaccum_balance.3,
	  man/man3/qthread_debuglevel.3,
	  man/man3/qthread_distance.3, man/man3/qthread_empty.3,
	  man/man3/qthread_fork.3, man/man3/qthread_id.3,
	  man/man3/qthread_lock.3, man/man3/qthread_migrate_to.3,
	  man/man3/qthread_num_shepherds.3,
	  man/man3/qthread_prepare.3,
	  man/man3/qthread_prepare_detached.3,
	  man/man3/qthread_prepare_for.3,
	  man/man3/qthread_readFE.3, man/man3/qthread_readFF.3,
	  man/man3/qthread_readstate.3, man/man3/qthread_retloc.3,
	  man/man3/qthread_schedule.3,
	  man/man3/qthread_schedule_on.3, man/man3/qthread_self.3,
	  man/man3/qthread_shep.3, man/man3/qthread_shep_ok.3,
	  man/man3/qthread_sorted_sheps.3,
	  man/man3/qthread_stackleft.3,
	  man/man3/qthread_syncvar_empty.3,
	  man/man3/qthread_syncvar_readFE.3,
	  man/man3/qthread_syncvar_readFF.3,
	  man/man3/qthread_syncvar_writeEF.3,
	  man/man3/qthread_syncvar_writeF.3,
	  man/man3/qthread_writeEF.3, man/man3/qthread_writeF.3,
	  man/man3/qthread_yield.3, man/man3/qutil_double_max.3,
	  man/man3/qutil_double_min.3,
	  man/man3/qutil_double_mult.3,
	  man/man3/qutil_double_sum.3, man/man3/qutil_qsort.3: update
	  semantics to 1.5

2011-04-05 23:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: single argument wrappers for readFF
	  and readFE

2011-04-05 18:32  Kyle Wheeler <kbwheel@sandia.gov>

	* shims/chapel/src/tasks-qthreads.c: fixes to enable multilocale

2011-04-05 17:22  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: move empty of taskWaitLock until after worker is
	  initialized (and only do once)

2011-04-05 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: tidying up qthread.c...

2011-04-05 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/feb.c, src/locks.c: fix the qthread.h path problem (whoops!)

2011-04-05 15:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: reduce unnecessary include lines

2011-04-05 14:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c, src/threadqueues.c, src/touch.c: uncrustifying

2011-04-05 14:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/syncvar.c: uncrustifying

2011-04-05 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: uncrustified

2011-04-05 14:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_addrstat.h,
	  include/qt_atomics.h, include/qt_blocking_structs.h,
	  include/qt_locks.h, include/qt_qthread_struct.h,
	  src/Makefile.am, src/feb.c, src/locks.c, src/qthread.c,
	  src/syncvar.c: extract locks and FEB operations into their own
	  respective files

2011-04-05 13:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: allow syncvar opterations from outside qthreads

2011-04-04 21:05  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Fixed problem with bad reference to rcrtoollevel

2011-04-04 20:37  debiddo99 <debiddo99@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qthread_innards.h,
	  include/rose_xomp.h, src/Makefile.am, src/qthread.c,
	  src/rcrtool/Makefile.inc, src/rcrtool/RCRdaemon.c,
	  src/rcrtool/RCRlogger.c, src/rcrtool/bcGen.c,
	  src/rcrtool/bcGen.h, src/rcrtool/common_rcrtool.c,
	  src/rcrtool/common_rcrtool.h, src/rcrtool/perf_util.c,
	  src/rcrtool/perf_util.h, src/rcrtool/qt_rcrtool.c,
	  src/rcrtool/qt_rcrtool.h, src/rcrtool/triggers.c,
	  src/rcrtool/triggers.h, src/rose_xomp.c: Adding initial version
	  of RCRTool daemon support.

2011-04-04 13:35  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_atomics.h, include/qt_qthread_struct.h,
	  include/qt_threadqueues.h, include/qthread_innards.h,
	  include/rose_xomp.h, src/qloop.c, src/qt_barrier.c,
	  src/qthread.c, src/rose_xomp.c, src/threadqueues.c: Changes to
	  speed up parallel loop start up/execution Added personal spin loop
	  under config to ease debugging (qt_qthread_struct.h) add flag to force thread to worker 0 for
	  termination (qt_threadqueues.h) add stealable task count (qt_atomics.h) add mechanism to get to debug spin lock (seems to 	be measurably faster than pthreads spin_lock) (qthread_innards.h) add call declation to force thread to worker 0 (rose_xomp.h) add new Rose extention 	add new lock type (spin lock) to XOMP (threadqueues.c) add debug spin lock 	add stealable task cnt (rose_xomp.c) rework critical sections 	add spuin barrier (Mis-named XOMP_spin_lock?) (qthread.c) add function to force thread to worker 0 (qloop.c) change parallel loops startup (non-future) to tree based
	  		rather than loop based (qt_barrier.c) make dummy unsigned to remove compile warnings

2011-04-01 23:45  Stephen Olivier <olivier@cs.unc.edu>

	* src/threadqueues.c: adjustment in OMP affinity stealing control

2011-04-01 18:33  Stephen Olivier <olivier@cs.unc.edu>

	* include/omp_affinity.h, src/rose_xomp.c: Added more OMP affinity
	  functions

2011-03-31 22:51  Stephen Olivier <olivier@cs.unc.edu>

	* include/omp_affinity.h, include/qt_shepherd_innards.h,
	  src/qthread.c, src/rose_xomp.c: Set OpenMP child task affinity
	  off by default Make affinity-related flags visible at user level

2011-03-30 23:34  Stephen Olivier <olivier@cs.unc.edu>

	* include/omp_affinity.h, src/rose_xomp.c: Added OpenMP affinity
	  wrappers to memory affinity functions qt_affinity_*

2011-03-30 22:04  Stephen Olivier <olivier@cs.unc.edu>

	* configure.in, include/omp_affinity.h,
	  include/qt_qthread_struct.h,
	  include/qt_shepherd_innards.h, src/rose_xomp.c,
	  src/threadqueues.c: First shot at some experimental affinity
	  extensions for OpenMP.  Added code is guarded by
	  QTHREAD_OMP_AFFINITY with a corresponding configure script entry.

2011-03-30 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/syncvar.c: uncrustified

2011-03-29 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: uncrustified

2011-03-29 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c, src/qt_mpool.c: uncrustified

2011-03-29 21:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qalloc.c, src/qt_c_hash.c: uncrustified

2011-03-29 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: uncrustified

2011-03-29 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, src/qloop.c: uncrustified

2011-03-29 21:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: uncrustified

2011-03-29 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: uncrustified

2011-03-25 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: 1.5.1 stuff

2011-03-22 15:42  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_makecontext.m4,
	  include/osx_compat/386-ucontext.h,
	  include/osx_compat/taskimpl.h, include/qthread/qthread.h,
	  include/qthread/syncvar.hpp, src/osx_compat/asm.S,
	  src/qthread.c, src/qutil.c, test/argparsing.h: fixes to compile
	  and run on CYGWIN (that's right, I said Cygwin)

2011-03-22 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: alphabetize ordering (to emphasize that there is
	  no implicit dependency)

2011-03-21 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnuma_affinity.c, src/qt_mpool.c,
	  src/qtimer/altix.c, src/syncvar.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c: Itanium compiler warning fixes && ICC
	  compile fixes

2011-03-21 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testloop.cpp: fixing compiler warnings on Itanium

2011-03-21 15:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c, test/test_basic_syncvar.c,
	  test/test_cacheline.c, test/test_cas.c,
	  test/test_disabled.c, test/test_external_fork.c,
	  test/test_feb_barrier.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_migrate.c,
	  test/test_qarray.c, test/test_qarray_accum.c,
	  test/test_qdqueue.c, test/test_qlfqueue.c,
	  test/test_qpool.c, test/test_qtimer.c,
	  test/test_queue_loop.c, test/test_qutil.c,
	  test/test_qutil_qsort.c, test/test_reinit.c,
	  test/test_stackleft.c, test/test_syncvar.c,
	  test/test_syncvar2.c, test/testdincr.c, test/testfincr.c,
	  test/testincr.c, test/testq.c, test/testqloop.c: fixing compiler
	  warnings on Itanium

2011-03-21 15:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_basic.c: fix newline

2011-03-21 15:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnuma_affinity.c: fixes compiling (thanks for
	  pointing it out Allan!)

2011-03-17 14:06  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: bump version to 1.5.1b

2011-03-17 14:05  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: include chapel shim files in the standard
	  distribution

2011-03-17 14:04  Kyle Wheeler <kbwheel@sandia.gov>

	* shims/chapel/README,
	  shims/chapel/include/tasks-qthreads.h,
	  shims/chapel/src/Makefile,
	  shims/chapel/src/Makefile.include,
	  shims/chapel/src/Makefile.share,
	  shims/chapel/src/tasks-qthreads.c: chapel is now part of the
	  standard checkout

2011-03-17 13:55  Kyle Wheeler <kbwheel@sandia.gov>

	* : lets just make this part of qthreads proper

2011-03-16 20:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testincr.c: uncrustified

2011-03-16 20:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: uncrustified

2011-03-16 19:54  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: comment out parallel region cleanup -- there is a
	  	race condition that occasionly causes a hang as data is cleaned up
	  	before it is use for the last time

2011-03-16 19:51  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: rewrite XOMP_critical to use compare ans swap
	  rather than FEB for speed

2011-03-15 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: fix compilation without multiple
	  shepherds

2011-03-15 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: MACHINE_READABLE option

2011-03-15 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: false sharing should be volatile, to
	  avoid optimizations on that loop

2011-03-15 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_affinity.h, src/affinity/hwloc_affinity.c: deal with
	  old hwloc versions (i.e. without memory affinity)

2011-03-15 14:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c: fix the guess_num_workers function
	  call name (thanks Allan!)

2011-03-14 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c: undo affinity specifications
	  when finalize is called

2011-03-14 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_affinity.h, src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c, src/qthread.c: improve the affinity
	  interface with Romain's patch (modified slightly to suit my taste)

2011-03-14 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: unnecessary header information

2011-03-14 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: more predictable handling of
	  qthread_debug integer args

2011-03-11 20:40  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/affinity/hwloc_affinity.c: Deleted the last change from the
	  SVN ci file but it changed it anyway.  I think this backs the
	  affinity changes out from the last checkin, (I don't understand why
	  I need these locally to compile but should keep them tlocal until I
	  do

2011-03-11 20:35  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h, include/qthread/qthread.h,
	  src/affinity/hwloc_affinity.c, src/qloop.c,
	  src/qthread.c, src/rose_log_arrivaldetector.c,
	  src/rose_xomp.c: Changes to mover from hardware thread number to
	  software thread number for barrier computations in OpenMP (qthread.h) add barrier id call (qt_shepherd_innards.h) add function to get current worker
	  structure (rose_xomp.c) switch to using software id for all barrier-like
	  calls (rose_log_arrivaldetector.c) switch to using software id for all 	barrier-like calls (qthread.c) add barrier id call 	add and switch to internal call to get current worker structure (qloop.c) set software id when generating chucks of work from loops

2011-03-10 17:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: remove debugging printouts

2011-03-10 17:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_affinity.h, src/affinity/hwloc_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c, src/ds/qarray.c,
	  src/ds/qpool.c: Pushing memory affinity operations into the
	  affinity shim API.  Also pushed the changes from Romain Dolbeau to
	  improve hwloc support.

2011-03-10 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c: remove unnecessary functions

2011-03-09 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: alter the way worker threads bind
	  themselves to member-objects of shared resources to improve
	  performance. In other words, if more than one shepherd is sitting
	  within a shepherd boundary (e.g. a socket), their worker threads
	  will bind to different cores. (note: not the solution Allan and I
	  found, because that solution was broken)

2011-03-09 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: more cache options, from Romain
	  Dolbeau

2011-03-09 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_affinity.h, src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c, src/ds/qpool.c: starting a memory
	  affinity interface shim

2011-03-08 19:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, src/threadqueues.c: fix a stealing problem where
	  the pthread_id() changes between qthread_initialize() and
	  qthread_finalize()

2011-03-04 16:40  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: omp_get_dynamic takes and returns a true value
	  of whether dynamic thread counts are allowed -- not a specific
	  number

2011-03-01 19:09  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: fixes 	allow multiple parallel loops within a single parallel region 		clean up after loop (double barrier for now - should 		be within barrier) 	fix static scheduling -- allow late joins even after first 		thread completes its allocation

2011-02-28 22:33  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, src/qloop.c, src/qthread.c,
	  src/rose_xomp.c: (qthread.h) add function declaration to allow a thred making itself
	  unstealable (rose_xomp.c) set the original function as unstealable to allow
	  		parallel region cleanup 	add code to track departed workers -- to figure out when loops can
	  		be cleaned up (qthread.c) add function to set thread as unstealable 	try again on parallel region cleanup (qloop.c) add function to wait for completion and clean up linked
	  list of loops

2011-02-25 22:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: completely ignoring the return value is an
	  unacceptable solution to the problems that crop up when you don't
	  match the defined thread prototype

2011-02-25 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/syncvar.hpp: add assertion

2011-02-25 22:19  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: Rose generated fuctions have void return values.
	  	Writing the return value to a syncvar occasionally finds a negative
	  	value -- this causes problems change to write a 1 after the
	  function completes

2011-02-25 15:51  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_barrier.c, src/qthread.c: (qthread.c) remove debugging (qt_barrier.c) fix uplocking -- don't try to overstep array on way
	  		down - It has never been emptied

2011-02-25 14:01  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_barrier.c, src/qthread.c: Work on log barrier routine
	  (using syncvar_t under the covers) turn off clean up in parallel
	  	region termination -- may have active loops still fix soon (qthread.c) turn off clean up in parallel region termination (qt_barrier.c)use smaller hammer (qthread_syncvar_writeEF instead
	  	of qthread_syncvar_fill) gives me better assurance that everything
	  	is in sync

2011-02-24 18:36  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_barrier.c: fix some typos in switch to FEB's within log
	  barrier -- need better testing strategy

2011-02-23 22:06  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, include/qthread/qthread.h,
	  src/qloop.c, src/qthread.c, src/rose_xomp.c: work on nested loop
	  termination -- you can't delete the loop if anyone may at sometime
	  in the future look at it.  Save until parellel region termination
	  and then delete all outstanding loops (we know they are done) (qthread.h) add list of loops (generic to ease include problems) (qloop_innards.h) give loops next ponter so we can build linked
	  lists (rose_xomp.c) remove loop deleting in middle of loop_end 	remove code to reuse loops 	add call to qt_omp_parallel_region_destroy() (qthread.c) add qt_omp_parallel_region_destroy to clean up parallel
	  	region link parallel regions so we can back up during deletin (qloop.c) add hook to link loops together

2011-02-23 20:21  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_barrier.c: change log barrier to use syncvars so that when
	  long stalls occur we can leave barrier and do other work.  This was
	  not previously possible before the thread numbering was changed,
	  since it possible for the same hardware worker/ shepherd to hit a
	  barrier more than once. With id's embedded in the thread this is
	  not possible.

2011-02-22 22:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: avoid warning

2011-02-22 22:37  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: preserve mt_sheps and rose extensions through
	  distcheck

2011-02-22 22:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/rose_xomp.c: dont use linux-specific apis

2011-02-22 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am: include omp_defines.h in dist
	  tarballs

2011-02-22 19:50  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, include/qt_barrier.h,
	  include/qthread/qthread.h, src/qthread.c: Really implement code
	  to allow configuration depended decision on the type of barrier to
	  use (qt_barrier.h) Change call type to avoid multiple include problems (qthread.h) make barrier type #ifdef dependent 	and return type of qt_thread_barrier call (configure.in) add QTHREAD_LOG_BARRIER (qthread.c) initialize the barrier the correct way depending on
	  type

2011-02-22 19:46  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: Adding code to limit mallocs of loop structures
	  inside of loops -- reuse previous loop start using
	  QTHREAD_LOG_BARRIER to decide which barrier type to use

2011-02-18 19:17  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, src/qloop.c, src/rose_xomp.c: (qloop_innards.h) add start so that static scheduling can use as
	  		base for iteration distribution (rose_xomp.h) fix static iteration distribution (loop count correct 		off of correct base) -- may still need work for 		negative increments (qloop.c) initial start field

2011-02-17 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: qt_affinity.h

2011-02-17 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/taskimpl.h,
	  include/osx_compat/tile-ucontext.h: fix compiling on the tilera

2011-02-17 16:56  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, src/rose_xomp.c: minor fixes (rose_xomp.c) close race condition starting omp for loop 	allow late thread to progress without executing any iterations 	add double barrier so that we can clean up and release the loop 		after the completion of all iterations (qthread.c) set the barrier size in a parallel region to the number 		of workers (if MTS) rather than the number of shepherds

2011-02-17 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* AUTHORS, ChangeLog, NEWS, TODO: preparing to release 1.5

2011-02-16 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qpool.c: fix behavior with multithreaded shepherds

2011-02-15 20:09  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: (rose_somp.c) close race condition in loop initialization

2011-02-15 19:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qdqueue.c, test/test_qlfqueue.c: fix queue tests (id
	  can sometimes be 0)

2011-02-15 19:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h, include/qthread/qthread.h,
	  include/qthread/qthread.hpp, include/qthread_innards.h,
	  src/qthread.c, src/qutil.c, src/rose_xomp.c,
	  src/sst/futurelib-sst.c, src/sst/qthread-sst.c,
	  src/syncvar.c, src/touch.c: officially deprecate external
	  qthread_self(), and avoid using it when possible inside the library
	  (use qthread_internal_self() when truly necessary)

2011-02-15 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c, test/test_basic.c,
	  test/test_basic_syncvar.c, test/test_disabled.c,
	  test/test_external_fork.c, test/test_feb_barrier.c,
	  test/test_log_barrier.c, test/test_qarray.c,
	  test/test_qarray_accum.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c, test/test_qtimer.c,
	  test/test_reinit.c, test/test_syncvar.c,
	  test/test_wavefront.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c: stop using
	  qthread_self()

2011-02-15 18:26  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_arrive_first.h, include/qt_qthread_struct.h,
	  include/qt_shepherd_innards.h, include/qthread/qthread.h,
	  src/qthread.c, src/rose_log_arrivaldetector.c,
	  src/rose_xomp.c: Fix/complete rewrite of nested parallelism code
	  	-- now supports two flavors -- each OpenMP for loop surrounded by
	  	its own OpenMP parallel start(reasonably tested) -- and inner
	  	parallel loop is just an iteration of the outer loop (not tested
	  nearly as well) (qt_qthread_struct.h) add currunt parallel region pointer to the
	  		extra data structure of a thread (qthread.h) add data structure for a parallel region -- contains
	  		generic loop pointer and barrier pointer for this region 	thread flag values moved to include file 	add 3 calls to create and access parallel region (calls in
	  	rose_xopm.c) (qt_arrive_first.h) nesting no longer needed as flag to
	  qt_global_arrive_first (qt_shepherd_innards.h) add current parallel region to shepherd
	  struct (rose_xomp.c) remove old nested code -- detection of nesting is no
	  		longer explicit and many static values not needed 	new loop init code checks loop structure first pointed to by the
	  		thread and then in the argument to build independent loop
	  		structure for each active loop 	quided_loop_init rebuilt for the new nesting code and Rose
	  		changing to make top bound inclusive (rose_log_arrivaldetector.c) simplify/remove nesting code (qthread.c) add parallel region and remove staticly declared
	  		barrier -- now loop specific 	mccoy thread empties is taskWaitLock on startup 	thread flag values moved to include file 	pack thread numbers across shepherds and then up cores 	access functions for parallel region/barrier within it

2011-02-15 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_qthread_struct.h, src/qthread.c,
	  src/threadqueues.c: make threads unstealable, move thread flags
	  into qthread_struct header

2011-02-08 20:02  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: (rose_xomp.c) completely rebuild the code to execute ordered loops
	  		-- save current loop execution in loop structure and check it
	  		before allowing threads to leave the XOMP_ordered_start function

2011-02-07 20:03  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues.c: (threadqueues.c) stealing QTHREAD_STATE_SHEP_TERM thread make
	  		termination tricky -- so don't steal

2011-02-07 19:32  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: (qthread.c) switch compution of worker number and shepherd number /
	  add asserts

2011-02-07 15:26  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, src/rose_xomp.c: (rose_xomp.c) using new worker array to keep track of which
	  		iteration block currently needs to be executed by this worker for
	  		static scheduling (qloop_innards.h) added an unspecified size worker_array to the end
	  		of qqloop_step_handle_s -- allocation creates extra space on the 		end equal to the number of workers -- to be used to pass 		worker specific loop information

2011-02-04 15:47  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: (rose_xomp.c) force static scheduling to use same path as other
	  types

2011-02-03 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/context.c: ignore swap files and fix compiling
	  issue on non-x86 boxes

2011-02-02 21:21  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qloop_innards.h, include/qthread/qloop.h,
	  include/rose_xomp.h, src/qloop.c, src/rose_xomp.c: (qloop.h) remove dead code 	remove unneccessary volatile from argument list (qloop_innards.h) make variables 64 bits so overwrites don't happen 	change/removents for qloop_internal_computeNextBlock (rose_xomp.h) add loop structure to most XOMP_*loop calls --
	  		matching ROSE change also must happen (rose_xomp.c) cleanup 	remove a lot of code that implemented parallel loop stack -- 		ROSE interface change information now held in a loop 		variable passed in with the calls 	removed the loop timing code for quided self-scheduling 	restructured some of the XOMP_loop calls to use a common
	  		implementation function (qloop.c) removed arguments to qloop_internal_computeNextBlock 	removed active shepherd count from loop structure

2011-02-02 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: remove debug printfs

2011-02-02 20:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: fix loop logic

2011-02-02 20:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: better guessing of shepherd (I
	  think)

2011-02-02 19:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: allow guessing to work when environment variable
	  is not specified

2011-02-02 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: re-arranging some stuff

2011-02-02 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove debug output

2011-02-02 19:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: do not re-scale num workers if the number has been
	  specified already

2011-02-01 22:52  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/osx_compat/taskimpl.h,
	  include/osx_compat/tile-ucontext.h,
	  include/qthread_innards.h, src/affinity/tile_affinity.c: 
	  improving compilation on tilera (something is still fundamentally
	  broken, though)

2011-02-01 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnuma_affinity.c, src/affinity/shepcomp.h: better
	  support for ancient libnuma

2011-02-01 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/altix.c, src/threadqueues.c: fix compiler warnings on
	  altix

2011-02-01 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: disable fastcontext on IA64 (Itanium) machines

2011-02-01 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect library for nanosleep

2011-02-01 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp_affinity.c, src/qthread.c: improve lgrp
	  behavior with multithreaded shepherds

2011-02-01 19:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: up interface number

2011-02-01 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/context.c, src/qt_mpool.c: fix compile issues with
	  PGI compiler

2011-02-01 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: more verbose debug output

2011-02-01 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/no_affinity.c: correct debug output

2011-02-01 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/no_affinity.c: improve no_affinity guessing of
	  number of workers

2011-02-01 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/no_affinity.c: fix behavior of no_affinity, add
	  debug statements

2011-02-01 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: whoops - last commit was backwards

2011-02-01 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/hwloc_affinity.c: fix for old hwloc

2011-02-01 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c, src/qthread.c: improve libnuma
	  behavior with multithreaded shepherds

2011-02-01 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c: correctly reset nshepherds
	  before counting bits in all_cpus_ptr

2011-02-01 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c: error detection

2011-02-01 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_affinity.h, src/affinity/hwloc_affinity.c,
	  src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/no_affinity.c,
	  src/affinity/plpa_affinity.c,
	  src/affinity/tile_affinity.c, src/qthread.c,
	  src/threadqueues.c: fix build on solaris/lgrp

2011-02-01 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: support new version of solaris (2.10)

2011-02-01 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: dist files

2011-02-01 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: disable fastcontext on solaris machines

2011-02-01 16:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp_affinity.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c, src/affinity/shepcomp.h,
	  src/qthread.c: linux build fixes

2011-02-01 15:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c: numa should compile now (needs
	  multithreaded shepherd work)

2011-02-01 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp_affinity.c: lgrp fix... needs to be tested

2011-02-01 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/plpa_affinity.c: plpa should compile now (and do
	  something reasonable for multithreaded shepherds)

2011-02-01 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/tile_affinity.c: tile should compile now (and reject
	  multithreaded shepherds)

2011-02-01 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/lgrp.c, src/affinity/lgrp_affinity.c,
	  src/affinity/libnuma.c, src/affinity/libnumaV2.c,
	  src/affinity/libnumaV2_affinity.c,
	  src/affinity/libnuma_affinity.c, src/affinity/plpa.c,
	  src/affinity/plpa_affinity.c, src/affinity/tile.c,
	  src/affinity/tile_affinity.c: renaming to match new convention

2011-02-01 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_affinity.h, src/Makefile.am,
	  src/affinity/hwloc.c, src/affinity/hwloc_affinity.c,
	  src/affinity/mach_affinity.c, src/affinity/mach_topo.c: making
	  the naming consistent and sensible

2011-02-01 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/mach_topo.c: fix mach topology to match prototypes
	  (sync with hwloc)

2011-02-01 00:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/affinity/no_affinity.c, src/qthread.c: fixed no_affinity;
	  need to fix mach/tile/plpa/lgrp/libnuma/libnumaV2

2011-02-01 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_affinity.h,
	  include/qt_shepherd_innards.h, include/qthread_innards.h,
	  src/Makefile.am, src/affinity/hwloc.c,
	  src/affinity/lgrp.c, src/affinity/libnuma.c,
	  src/affinity/libnumaV2.c, src/affinity/mach_topo.c,
	  src/affinity/no_affinity.c, src/affinity/plpa.c,
	  src/affinity/tile.c, src/qthread.c, test/test_basic.c: reworked
	  affinity to be MUCH cleaner and more portable. hwloc implementation
	  now supports multithreaded shepherds correctly (I think), obviating
	  the need for raw (non-portable) sched_setaffinity calls; other
	  topology options need multithreaded love too, but maybe later

2011-01-25 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread_innards.h,
	  src/qloop.c, src/qthread.c, src/qutil.c: modify behavior along
	  the lines suggested by Allan

2011-01-25 00:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_migrate.c: remove printfs

2011-01-25 00:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_log_barrier.c: update to new api

2011-01-24 23:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, include/qt_qthread_struct.h,
	  include/qthread/qthread.h, include/qthread_innards.h,
	  src/futurelib.c, src/qloop.c, src/qthread.c,
	  src/rose_log_arrivaldetector.c, src/rose_xomp.c: cleanup of arg
	  copying; its now an official (internal) function, rather than split
	  across several files with multiple (unnecessary) arguments

2011-01-24 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: fix compiling with debug turned on

2011-01-24 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c: qt_loopr_f no longer has a
	  qthread_t argument

2011-01-24 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c,
	  test/test_queue_loop.c, test/time_febs.c,
	  test/time_increments.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c: qt_loop_f no longer has a qthread_t argument

2011-01-24 19:13  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h, include/qthread/qloop.h,
	  src/qloop.c, src/qthread.c, src/rose_xomp.c,
	  src/threadqueues.c: (qloop.h) remove arguments from ROSE version of qt_loop_step_f) --
	  		only uses first arg in XOMP calls (qt_shepherd_innards.h) make number of workers dynamically
	  allocated (threadqueues.c) use lock type that compiles (rose_xomp.c) dynamically allocate a bunch of internals as prep for
	  		running on more than 64 threads 	rework loop code for MTS -- rewrite when Rose fixed to pass
	  	structure remove some qthread_t (me's) that have been eliminated
	  elsewhere (qthread.c) cleanup 	remove warning when moving a thread -- will be fixed and
	  	reinserted dynamically allocate workers (qloop.c) only use the one variable XOMP calls expect 	add _to back to future_fork_syncvar since it doesn't exist 	add _to back to qthread_fork_syncvar since arguments are different

2011-01-24 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_templates.hpp: cleanup from rarely used code

2011-01-24 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/futurelib_innards.h, include/qthread/futurelib.h,
	  include/qthread/loop_iter.hpp,
	  include/qthread/loop_templates.hpp,
	  include/qthread_innards.h, src/futurelib.c, src/qthread.c: future
	  functions no longer have a qthread_t argument

2011-01-24 18:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/feb_barrier.h, src/qt_feb_barrier.c,
	  test/test_feb_barrier.c: feb_barrier functions no longer have a
	  qthread_t argument

2011-01-24 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qdqueue.h, src/ds/qdqueue.c,
	  src/patterns/allpairs.c, src/patterns/wavefront.c,
	  test/test_qdqueue.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c: qdqueue functions no longer have a
	  qthread_t argument

2011-01-24 18:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qlfqueue.h, src/ds/qdqueue.c,
	  src/ds/qlfqueue.c, test/test_qlfqueue.c,
	  test/time_qlfqueue.c: qlfqueue functions no longer have a
	  qthread_t argument

2011-01-24 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qpool.h, src/ds/qlfqueue.c,
	  src/ds/qpool.c, src/patterns/wavefront.c, src/qloop.c,
	  src/qthread.c, test/test_migrate.c, test/test_qpool.c,
	  test/time_qdqueue_sizes.c, test/time_qpool.c: qpool functions no
	  longer have a qthread_t argument

2011-01-21 23:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_shepherd_innards.h: fix external fork with
	  multithreaded shepherds

2011-01-21 23:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, include/qt_arrive_first.h,
	  include/qt_barrier.h, include/qthread/qloop.h,
	  include/qthread/qthread.h, src/qloop.c, src/qt_barrier.c,
	  src/qthread.c, src/rose_log_arrivaldetector.c,
	  src/rose_xomp.c: propogate API changes to ROSE code

2011-01-21 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c, test/time_chain_bench.c,
	  test/time_cncthr_bench.c, test/time_incr_bench.c,
	  test/time_lul_bench.c, test/time_mutex_bench.c,
	  test/time_producerconsumer.c, test/time_qarray_sizes.c,
	  test/time_qdqueue.c, test/time_qdqueue_sizes.c,
	  test/time_qlfqueue.c, test/time_qpool.c,
	  test/time_qutil_qsort.c, test/time_spin_bench.c,
	  test/time_syncvar_producerconsumer.c,
	  test/time_thrcrt_bench.c, test/time_threading.c,
	  test/time_wavefront.c: propogate API changes to benchmarking code

2011-01-21 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_templates.hpp,
	  include/qthread/qloop.h, include/qthread/qthread.h,
	  include/qthread/qthread.hpp, include/qthread/qutil.h,
	  src/ds/qarray.c, src/futurelib.c, src/qloop.c,
	  src/qthread.c, src/qutil.c, test/test_basic.c,
	  test/test_basic_syncvar.c, test/test_cas.c,
	  test/test_disabled.c, test/test_external_fork.c,
	  test/test_feb_barrier.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_migrate.c,
	  test/test_qdqueue.c, test/test_qlfqueue.c,
	  test/test_qpool.c, test/test_qutil.c,
	  test/test_qutil_qsort.c, test/test_reinit.c,
	  test/test_syncvar.c, test/test_syncvar2.c,
	  test/test_wavefront.c, test/testdincr.c,
	  test/testfincr.c, test/testincr.c, test/time_febs.c,
	  test/time_increments.c, test/time_qarray.c: qthread FEB functions
	  no longer require a qthread_t argument

2011-01-21 22:14  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread/qthread.hpp,
	  include/qthread/syncvar.hpp, src/qloop.c,
	  src/qt_feb_barrier.c, src/qthread.c, src/qutil.c,
	  src/syncvar.c, test/test_basic_syncvar.c,
	  test/test_syncvar.c, test/test_syncvar2.c: qthread_syncvar_*
	  functions no longer require a qthread_t argument

2011-01-21 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread/syncvar.hpp,
	  src/syncvar.c: qthread_syncvar_incrF no longer require a
	  qthread_t argument

2011-01-21 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread/qthread.hpp,
	  src/ds/qdqueue.c, src/futurelib.c, src/qloop.c,
	  src/qthread.c, src/qutil.c, test/test_allpairs.c,
	  test/test_basic.c, test/test_external_fork.c,
	  test/test_reinit.c, test/test_stackleft.c: qthread_lock/unlock no
	  longer require a qthread_t argument

2011-01-21 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: qthread_sorted_sheps no
	  longer requires a qthread_t argument

2011-01-21 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qloop.c, src/qthread.c: 
	  qthread_shep_ok no longer requires a qthread_t argument

2011-01-21 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: qthread_retloc no
	  longer requires a qthread_t argument

2011-01-21 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/test_disabled.c, test/test_stackleft.c: qthread_stackleft no
	  longer requires a qthread_t argument

2011-01-21 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/ds/qarray.c,
	  src/ds/qdqueue.c, src/ds/qpool.c, src/futurelib.c,
	  src/patterns/allpairs.c, src/qloop.c, src/qthread.c,
	  test/test_disabled.c, test/test_internal_mod.c,
	  test/test_migrate.c, test/test_queue_loop.c: qthread_shep no
	  longer requires a qthread_t argument

2011-01-21 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c, test/test_id.c,
	  test/test_qlfqueue.c, test/test_reinit.c,
	  test/test_stackleft.c: qthread_id no longer requires a qthread_t
	  argument

2011-01-21 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/ds/qarray.c,
	  src/qthread.c, test/test_disabled.c, test/test_migrate.c: 
	  qthread_migrate_to no longer requires a qthread_t argument

2011-01-21 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: remove deprecated
	  functions

2011-01-21 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/ds/qarray.c,
	  src/patterns/allpairs.c, src/patterns/wavefront.c,
	  src/qloop.c, src/qthread.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c: qthread_yield no longer requires a
	  qthread_t argument

2011-01-21 21:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_iter.hpp,
	  include/qthread/loop_templates.hpp,
	  include/qthread/qarray.h, include/qthread/qthread.h,
	  src/ds/qarray.c, src/futurelib.c,
	  src/patterns/allpairs.c, src/qloop.c, src/qthread.c,
	  src/qutil.c, test/test_allpairs.c, test/test_basic.c,
	  test/test_basic_syncvar.c, test/test_cas.c,
	  test/test_disabled.c, test/test_external_fork.c,
	  test/test_feb_barrier.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_migrate.c,
	  test/test_qarray.c, test/test_qarray_accum.c,
	  test/test_qdqueue.c, test/test_qlfqueue.c,
	  test/test_qpool.c, test/test_qutil.c, test/test_reinit.c,
	  test/test_stackleft.c, test/test_syncvar.c,
	  test/test_syncvar2.c, test/testdincr.c, test/testfincr.c,
	  test/testincr.c: qthread_f no longer takes a qthread_t argument;
	  this should begin to simplify things for ROSE

2011-01-21 20:44  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/threadqueues.c: (threadqueues.c) My compile need stdio.h -- should bug anyone else

2011-01-21 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: resolve the shep0 issue

2011-01-21 19:42  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/Makefile.am, include/qt_atomics.h,
	  include/qt_qthread_struct.h,
	  include/qt_shepherd_innards.h, include/qt_threadqueues.h,
	  include/qt_touch.h, src/Makefile.am, src/qthread.c,
	  src/rose_xomp.c, src/syncvar.c, src/threadqueues.c,
	  src/touch.c: move threadqueues to their own file

2011-01-21 18:39  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_shepherd_innards.h, src/qthread.c: allow building with
	  MTS (qt_shepherd_innards.h) move qthread_worker_t definition before use (qthreads.c) move  qthread_worker_t definition to include file
	  	before use remove static from externally (to qthread.c) visible
	  functions

2011-01-21 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove some unused code

2011-01-21 17:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_blocking_structs.h,
	  include/qt_profiling.h, include/qt_qthread_struct.h,
	  include/qt_shepherd_innards.h, include/qthread_innards.h,
	  src/Makefile.am, src/qthread.c, src/syncvar.c: split syncvars
	  into their own file

2011-01-21 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: please stop committing code that won't compile
	  (with or without ROSE)

2011-01-21 16:36  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c: (qloop.c) remove unused function (and associated warnings)

2011-01-21 16:25  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_arrive_first.h, include/qthread/omp_defines.h,
	  include/qthread/qthread.h, src/qloop.c, src/qthread.c,
	  src/rose_log_arrivaldetector.c, src/rose_xomp.c: Checkin to
	  remove warnings and improvement to steal profiling Also changed
	  worker id -- may handle MTS barriers/arrive_first better (qthread.h) add 4 external functions added to qthread.c for omp
	  support (omp_defines.h) new file -- prototypes of OMP calls supplied by
	  Qthreads (qt_arrive_first.h) add external calls for arrive first tree
	  		(second pass needed to correct names here and at use) (rose_xomp.c) prototype and cast away a lot of warnings 	print steal info in XOMP_terminate (rose_log_arrivaldetector.c) prototype and cast away a lot of
	  	warnings a little code cleanup and rearrangement (qthread.c) prototype and cast away a lot of warnings 	a little code cleanup and rearrangement 	improve steal profiling to give Stephen numbers he wants 	add function to print steal info 	 changed worker id -- may handle MTS barriers/arrive_first better (qloop.c) changed task initial assignment to do mod internally --
	  		allows better handle of MTS barriers

2011-01-19 18:32  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, src/qthread.c: (configure.in) add --enable-steal-profile so that the effectiveness 		of stealing can be studied (qthread.c) added a number of fprintfs and counter increments to
	  		study what is really happening during an application  by the 		stealing code (not final - but wanted to separate from 		next piece of work which will be in same file)

2011-01-18 21:43  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, src/rose_xomp.c: (rose_xomp.c) fix RDTSC to interact with multithreaded shepherds
	  		(MTS) correctly 	add code (#ifdefed out for the time being) to search for a task 		before it is waited on to make sure someone is executing 		it -- if not junp to it  -- on todo list (qthreads.c) separate rdata initialization into its own function --
	  		may want to use it to start tasks from middle of queue 	spell fix on thief_shepherd 	code cleanup/closer to my wierd perferencs for if trees 	add qt_threadqueue_dequeue_specific to find specific value on 		queue and remove it -- not currently used 	add qthread_run_needed_task  to run previous task -- not currently
	  	used

2011-01-13 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: file needed to be included in the dist

2011-01-13 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_external_fork.c: test external forks
	  (important for Chapel)

2011-01-13 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: allow non-shepherds to spawn again

2011-01-11 23:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more paranoia asserts, and fix portability issues
	  with the syncvar unlocking

2011-01-10 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore syncvar programs

2011-01-10 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: behave better without memset

2011-01-10 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_syncvar2.c: use the generic type conversion utilities,
	  match comments with Chapel

2011-01-10 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread/qthread.hpp,
	  include/qthread/syncvar.hpp: support data conversions for
	  syncvar_t's

2011-01-10 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_syncvar2.c: match Chapel initial value

2011-01-10 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_syncvar2.c: match Chapel code more exactly

2011-01-10 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_syncvar2.c: new syncvar test to match
	  Chapel prodCons.chpl code... unfortunately, it seems to work fine

2011-01-10 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_syncvar.c: unused variable

2011-01-06 20:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix unpooled execution

2011-01-06 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: easy syncvar
	  initialization for non-static cases

2011-01-04 15:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: turn syncvars hash into
	  a striped hash

2011-01-03 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more compiler-friendly solution to the unsigned
	  long literal problem

2011-01-03 16:09  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c: (qthread.c) the value 1 is treated as an int and the shift of 32
	  	causes the value to be lost.  Cast to an unsigned long seems to fix
	  	the problem.

2010-12-30 15:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_syncvar.c: reduce the default test length

2010-12-30 15:08  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, src/rose_xomp.c: Misc fixes to get most of BOTS
	  benchmark suite working (rose_xomp.c) fix bug in guided loop init that allowed threads out
	  	too early fix bug where wrong id used in guided loop start 	move barrier in XOMP_loop_end to before loop cleanup 	add OMP_in_final 	implement omp_*_lock (qthread.c) add parameter to qt_threadqueue_dequeue_blocking (for 		multithread shepherd case) to specify whether worker is active 	fix bug in disable worker to assign threads to shepherds correctly 	logical not bitwise and to find initial thread 	only steal when active

2010-12-17 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix minor race condition in writeEF; add
	  assertions

2010-12-17 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: wrap barrier init calls with
	  QTHREAD_USE_ROSE_EXTENSIONS

2010-12-17 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix HWLOC typo

2010-12-17 03:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: some convenience targets

2010-12-17 03:04  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_syncvar.c: fix bug in stress test

2010-12-17 03:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c: fix the race condition Micheal Ferguson
	  pointed out

2010-12-16 03:26  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_syncvar.c: stress test for syncvars
	  ... seems to be a bug in here somewhere

2010-12-16 00:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix a race condition in writeEF and fix a logic
	  error in fill (only triggered when there are no waiters), and fix a
	  few more assertions

2010-12-15 20:40  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_barrier.c, src/qthread.c,
	  src/rose_log_arrivaldetector.c: Allow single shepherd single
	  worker to work in barriers and arrive_first code (rose_log_arrivaldetector.c) if only one thread return true 	use qthread_num_workers() for worker count (qthread.c) fix up initialization code from previous clean up (qt_barrier.c) allow barriers with only one thread to complete

2010-12-15 19:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: grrrr - protect multithreaded stuff with ifdefs

2010-12-15 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix the assert (copy-paste error)

2010-12-15 18:08  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h, include/qthread_innards.h,
	  include/rose_log_arrivaldetector.h, src/qthread.c,
	  src/rose_log_arrivaldetector.c, src/rose_xomp.c: Another too big
	  checkin -- clean up get nested parallelsm to work (qthread.h) add calls to disable/enable workers, to pack worker ids
	  	and to get total number of active workers (qthread_innards.h) add active worker count to qlib_s (rose_log_arrivaldetector.h) comment and add size function (rose_xomp.c) replace total shepherd count with total worker count 		where thread count needed 	fix up current loop assignment when dealing with nested loops 	add gate single to stop thread from leaving before everything
	  	ready pack thread counts when reducing the number of active
	  threads (rose_log_arrivaldetector.c) add size function 	add barrier to prevent one thred from getting to next loop 		before everyone reaches this one (qthread.c) only allow active workers to get work (and slow
	  		inactive workers down) 	apply patch to create workers after first thread is transformed 		into shepherd 0 	only allow real mccoy thread on worker 0 	add disable/enable worker functions 	use packed worker numbers where needed 	add function to return active worker count 	fix bug in locked queue length count 	allow stealing of last thread (needed when the software thread 		count == the hardware thread count)

2010-12-15 17:21  Stephen Olivier <olivier@cs.unc.edu>

	* src/rose_xomp.c: modified omp_get_max_threads(),
	  omp_get_num_threads(), omp_get_thread_num() to be correct for
	  multithreaded shepherds

2010-12-13 23:13  Stephen Olivier <olivier@cs.unc.edu>

	* src/qthread.c, src/rose_xomp.c: (qthread.c) Changed scheduling to use work stealing when
	  multithreaded shepherds are enabled.  Queue implementation is
	  lock-based per-shepherd queue.  (rose_xomp.c) Changed initial task placement to queue tasks on
	  local shepherd for work stealing.  Also fixed a bug that
	  incorrectly set barriers to wait for the number of shepherds
	  instead of the number of workers.  We still did not apply Kyle's
	  patch to move the creation of shepherd 0 workers because we are
	  still testing it with our test codes, but hope to apply it soon.

2010-12-03 14:00  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qthread.c, src/rose_xomp.c: (rose_xomp.c) use worker id a bunch of places that a unique id is
	  	needed(under QTHREAD_MULTHREADED_SHEPHERDS ifdef 	minor code cleanup (qthread.c) reenable affinity for multithreaded shepherds 	remove shepherd zero worker creation in init function (master
	  		thread has not been transform into shepherd zero yet and some
	  		wierd initialization problems happen -- reenabled worker creation 		for shepherd zero in qthread_shepherd function (after 		master transformation) 	changed inits to use qlib value for number of shepherd (other was 		corrupt -- should figure out why)

2010-12-02 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix typo

2010-12-02 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix old libnuma code

2010-12-02 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/rose_xomp.c: fix config.h include behavior

2010-12-02 14:05  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/rose_xomp.c: compile fix (rose_xomp.c) need to pick up the configuration before qthreads.h
	  	(it doesn't seem to be done inside that include)

2010-12-01 23:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better hwloc support; preparing for API change in
	  hwloc v1.1

2010-12-01 23:37  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: prefer hwloc to mach, now that its been fixed

2010-12-01 22:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: attempt to use hwloc intelligently; remove
	  compiler warnings in qthread_worker()

2010-12-01 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: revert typo created by r1712

2010-12-01 22:08  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qthread/qthread.h: missed include def (qthread.h) add qthread_worker call

2010-12-01 22:03  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qloop.c, src/qt_barrier.c, src/qthread.c,
	  src/rose_log_arrivaldetector.c, src/rose_xomp.c: change to fix
	  performance problem with dynamic loop scheduling (rose_xomp.c) add and use rdtsc function to access cycle counter
	  	function change barrier like functions to use worker number not
	  	shepherd number switch dynamic scheduling to quided until Rose
	  fixed (rose_log_arrivaldetector.c) thread count needs to account for
	  	workers not only shepherds (qthread.c) account for workers not only shepherds 	add qthread_worker call (qloop.c) change quided scheduling to use rdtsc function output (qt_barrier.c) account for workers not only shepherds

2010-12-01 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: separate multithreaded
	  shepherds from rose extensions

2010-12-01 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: old assertion

2010-12-01 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix typo in multithreaded shepherd enabling

2010-11-29 16:43  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* configure.in, src/qloop.c, src/qthread.c: (configure.in) add two options 	1) HPCToolkit support - markers to stop stackunwind 	2) Multithreaded shepherds separated from Rose support 		-- only sets up the #def -- Stephen needs to use it (qthread.c) put markers in qthread_wrapper to stop HPCToolkit
	  	unwind add function to make the markers visable (qloop.c) put markers in qthreads_step_wrapper to stop HPCToolkit
	  	unwind add function to make the markers visable

2010-11-29 15:54  allanporterfield@gmail.com <allanporterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_mpool.c, src/qthread.c, src/rose_xomp.c: (rose_xomp.c) Fix race condition on each tasks list of generated
	  tasks(add lock) (qthread.c) Add unnecessary () to make if easy to read (qthread.c) If negative arg length -- treat like no arg list (qt_mpool.c) Fix race contition allocating new block -- the read of
	  	base and the read of current offset need to agree. Add lock to
	  	prevent changing the base and cur from being interleaved with
	  	reading the values.

2010-11-26 01:27  Stephen Olivier <olivier@cs.unc.edu>

	* include/qthread_innards.h, src/qthread.c: Added multithreaded
	  shepherd support

2010-11-16 13:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: chunked needs to be more strict; no optimizing by
	  violating chunksize!

2010-11-15 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_queue_loop.c: test all the different varieties of queue
	  loop

2010-11-15 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, include/qthread/qloop.h,
	  src/qloop.c: implement CHUNKED queue loops, allow the chunksize
	  to be specified by the user

2010-11-15 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qt_loop_balance.3: minor cleanup

2010-11-14 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qlfqueue.c: attempting to reduce the compiler warnings
	  about aliasing

2010-11-14 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qt_mpool.h,
	  src/qt_feb_barrier.c, src/qt_mpool.c, src/qthread.c: remove node
	  and lock from qt_mpool, since neither are used anymore; also remove
	  some spurious compiler warnings about aliasing

2010-11-12 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qdqueue.c: remove strict aliasing complaints

2010-11-12 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h,
	  include/osx_compat/taskimpl.h, src/osx_compat/asm.S: finish
	  correcting behavior on 32-bit platforms; swap is now more
	  formal-looking

2010-11-11 16:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h, src/osx_compat/asm.S: the x87
	  control word needs to be preserved on 32-bit systems as well

2010-11-11 16:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: fix behavior on 32-bit platforms

2010-11-10 20:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h, src/osx_compat/asm.S,
	  src/osx_compat/context.c: save x87 control and SSE2 control
	  correctly on x86_64; add some prefetching that seems to slightly
	  improve performance

2010-11-09 22:37  AllanPorterfield@gmail.com <AllanPorterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_barrier.c, src/qthread.c: fix initialization --- short
	  form causes OMP taskwait to hang remove double barrier -- no longer
	  needed -- don't need to reset forCount within barrier

2010-11-09 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qloop.c, src/qthread.c: make it
	  compile after resolving Allans changes

2010-11-09 21:26  AllanPorterfield@gmail.com <AllanPorterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* src/qt_barrier.c, src/qt_feb_barrier.c, src/qthread.c: but some
	  	of forCount code back but remove resets in barrier

2010-11-09 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initialize ROSE rdata

2010-11-09 20:29  AllanPorterfield@gmail.com <AllanPorterfield@gmail.com@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* include/qt_arrive_first.h, include/qthread/qthread.h,
	  src/futurelib.c, src/qloop.c, src/qt_mpool.c,
	  src/qthread.c, src/rose_log_arrivaldetector.c,
	  src/rose_xomp.c: test

2010-11-09 19:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h, src/osx_compat/asm.S,
	  src/osx_compat/context.c: lighter-weight 64-bit context swap,
	  fixing bugs in 32-bit context swap (now it sometimes works again!)

2010-11-09 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: remove 32-bit compiler warning

2010-11-09 00:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: avoid using locks when allocating from the big
	  block

2010-11-08 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4,
	  include/qthread_prefetch.h, src/qt_c_hash.c,
	  src/qthread.c: PGI portability

2010-11-08 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: reduce the size of the qthread_t and push all
	  runtime-type data out to be allocated at exec time, thus reducing
	  the footprint of zillions of un-run threads and reducing the cost
	  of a threadspawn

2010-11-08 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: make the context part of the rdata structure

2010-11-08 20:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: re-arranging access to the qthreads data
	  structure, preparing to separate runtime-only data into a
	  runtime-allocated structure

2010-11-02 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: rearrange qthread_s to improve memory performance,
	  use prefetching, avoid unnecessary qlib references in
	  qthread_empty()

2010-11-02 20:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: support prefetching

2010-11-02 20:24  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4, configure.in: check for
	  __builtin_prefetch

2010-10-29 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: syncvar static empty initializer

2010-10-29 15:00  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: 

2010-10-29 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_threading.c: more portability

2010-10-29 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix HWLOC behavior when num shepherds is nonzero

2010-10-29 14:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: reduce allocation
	  overhead by merging ucontext_t into qthread_t

2010-10-29 14:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: remove compiler warning

2010-10-29 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_threading.c: better benchmark results

2010-10-27 05:45  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: 

2010-10-27 05:37  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/future_init.3,
	  man/man3/qthread_cas.3, man/man3/qthread_debuglevel.3,
	  man/man3/qthread_disable_shepherd.3,
	  man/man3/qthread_distance.3, man/man3/qthread_empty.3,
	  man/man3/qthread_feb_status.3,
	  man/man3/qthread_finalize.3, man/man3/qthread_fork.3,
	  man/man3/qthread_fork_syncvar.3,
	  man/man3/qthread_fork_syncvar_to.3,
	  man/man3/qthread_id.3, man/man3/qthread_incr.3,
	  man/man3/qthread_init.3, man/man3/qthread_lock.3,
	  man/man3/qthread_migrate_to.3,
	  man/man3/qthread_num_shepherds.3,
	  man/man3/qthread_prepare.3, man/man3/qthread_readFE.3,
	  man/man3/qthread_readFF.3, man/man3/qthread_readstate.3,
	  man/man3/qthread_retloc.3, man/man3/qthread_schedule.3,
	  man/man3/qthread_self.3, man/man3/qthread_shep.3,
	  man/man3/qthread_shep_ok.3,
	  man/man3/qthread_sorted_sheps.3,
	  man/man3/qthread_stackleft.3,
	  man/man3/qthread_syncvar_empty.3,
	  man/man3/qthread_syncvar_readFE.3,
	  man/man3/qthread_syncvar_readFF.3,
	  man/man3/qthread_syncvar_status.3,
	  man/man3/qthread_syncvar_writeEF.3,
	  man/man3/qthread_syncvar_writeF.3,
	  man/man3/qthread_writeEF.3, man/man3/qthread_writeF.3,
	  man/man3/qthread_yield.3, man/man3/qutil_double_max.3,
	  man/man3/qutil_double_min.3,
	  man/man3/qutil_double_mult.3,
	  man/man3/qutil_double_sum.3, man/man3/qutil_qsort.3: update
	  documentation

2010-10-27 05:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in, include/qthread/qthread.h: use
	  deprecated

2010-10-27 05:36  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4, configure.in: detect
	  deprecated attribute

2010-10-25 19:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/rose_log_arrivaldetector.c: bugfix from Allan

2010-10-25 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: reverse default on fastcontext

2010-10-25 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_disabled.c: fix test for new num_shepherds semantics

2010-10-25 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: minor warning fix

2010-10-25 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qloop_innards.h,
	  include/qt_arrive_first.h, include/qt_barrier.h,
	  include/qthread/feb_barrier.h, include/qthread/qloop.h,
	  include/qthread/qthread.h,
	  include/rose_log_arrivaldetector.h, include/rose_xomp.h,
	  src/qloop.c, src/rose_log_arrivaldetector.c,
	  src/rose_xomp.c: updates from Allan

2010-10-25 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread_innards.h,
	  src/qthread.c: updates from Allan; also moving toward using
	  qthread_readstate more broadly

2010-10-25 14:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: fixes from Allan

2010-10-20 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: chapel fun

2010-10-06 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: attempting to fix behavior within cpu subsets

2010-10-06 16:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_threading.c: benchmark syncvar threads, and prime it to
	  avoid memory issues

2010-10-05 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignores

2010-10-05 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: remove timer-progs argument

2010-10-05 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_threading.c: threading timing

2010-10-05 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: avoid relying on struct layout for correctness

2010-10-05 16:15  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4: fix quoting for portability

2010-09-27 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: disable setrlimit by default on ALL platforms

2010-09-20 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread/syncvar.hpp,
	  src/qthread.c: syncvar incrF (ignores state, but leaves the
	  syncvar full, much like writeF)

2010-09-20 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/gettime.c: better fastrand

2010-09-17 22:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: fix bug

2010-09-17 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: diffracting trees (from Simon Kahan)

2010-09-17 22:19  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qtimer.h, src/qtimer/altix.c,
	  src/qtimer/gethrtime.c, src/qtimer/gettime.c,
	  src/qtimer/gettimeofday.c, src/qtimer/mach.c: fast random based
	  on time

2010-09-09 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_swap.c: make time_swap work

2010-09-09 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S: slim, trim x86 context swapping

2010-09-09 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h,
	  include/osx_compat/taskimpl.h, src/osx_compat/asm.S: slim, trim
	  x86_64 context swapping

2010-09-08 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_makecontext.m4, configure.in,
	  include/osx_compat/taskimpl.h: allow handwritten context swapping
	  to work on machines with working swapcontext, because the
	  handwritten one is faster (doesnt make syscalls)

2010-09-08 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S: make #defs more readable, add possibility
	  of using on linux x86 and others

2010-08-24 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: comment

2010-08-24 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: syncvar logic error fix from Allan

2010-08-20 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: avoid copying the mutex

2010-08-20 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use symbolic names instead of literals

2010-08-18 14:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: oops

2010-08-18 14:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: too eager to fill the syncvar

2010-08-16 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix syncvar writeEF

2010-08-05 18:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix rets leak

2010-08-05 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: whoops - need calloc to ensure that hash values
	  are properly initialized

2010-08-03 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: avoid compiler warning

2010-08-03 22:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: portability to other memalign regimes

2010-08-03 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_c_hash.c: whitespace

2010-08-03 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_hash.h, src/Makefile.am,
	  src/qt_c_hash.c, src/qt_cp_hash.c, src/qt_hash.cpp,
	  src/qt_judy_hash.c, test/Makefile.am: finally got rid of cprops
	  and judy and replaced with a builtin, cache-aware hash table

2010-07-29 02:14  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/Makefile.am, src/qt_judy_hash.c: support for
	  Judy trees as the qt_hash backend

2010-07-29 02:12  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: more TODOs

2010-07-29 02:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_febs.c, test/time_increments.c,
	  test/time_qdqueue.c, test/time_qdqueue_sizes.c,
	  test/time_qlfqueue.c, test/time_qpool.c: fix api behavior

2010-07-23 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: back to devel

2010-07-23 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: use an assert to detect barrier abuse

2010-07-23 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix syncvar fill/empty functions to handle corner
	  cases correctly

2010-07-23 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: fix race condition in feb barrier

2010-07-22 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix C++ header inclusion

2010-07-21 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: move fork_syncvar_future_to so that it
	  doesnt show up on the sst

2010-07-21 22:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h: support syncvars

2010-07-21 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: move pooled memory decision to after dependencies

2010-07-21 22:48  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_sst.m4: match new SST layout

2010-07-21 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: attempting to use SST FEB primitives in non-native
	  mode... thereby creating semi-non-native mode

2010-07-20 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: oops, typo

2010-07-20 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: contextlib not built separately

2010-07-20 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: 1.4

2010-07-20 15:21  Kyle Wheeler <kbwheel@sandia.gov>

	* : fix ignores

2010-06-29 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_bitfield_order.m4: fix variable typo; add
	  ability to force detection (i.e. for cross-compiling)

2010-06-29 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qlfqueue.c: remove compiler warnings in cprops case

2010-06-29 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: make testincr into test_incr (and friends)

2010-06-28 20:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix typo in ifndef

2010-06-28 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: use correct function name

2010-06-28 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, include/qthread/futurelib.h,
	  include/qthread/qloop.h, src/futurelib.c, src/qloop.c,
	  src/rose_xomp.c, test/test_queue_loop.c: reverted some qloop API
	  changes so as to not break MTGL compatibility, and separated
	  qqloop_handle_t from the rose interface (since they dont actually
	  overlap yet)

2010-06-24 20:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/Makefile.inc: whitespace

2010-06-24 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/Makefile.am, src/ds/Makefile.am,
	  src/ds/Makefile.inc, src/osx_compat/Makefile.am,
	  src/osx_compat/Makefile.inc, src/patterns/Makefile.am,
	  src/patterns/Makefile.inc, src/qtimer/Makefile.am,
	  src/qtimer/Makefile.inc: enable a more parallel build

2010-06-22 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qloop_innards.h,
	  include/rose_log_arrivaldetector.h, include/rose_xomp.h,
	  src/qloop.c, src/rose_log_arrivaldetector.c,
	  src/rose_xomp.c: updates per Allan's request

2010-06-17 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: include qloop_innards.h

2010-06-16 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qloop_innards.h, src/Makefile.am, src/qloop.c,
	  src/rose_log_arrivaldetector.c, src/rose_xomp.c: import updates
	  from Allan

2010-06-16 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qt_feb_barrier.c,
	  src/qthread.c: cleanup callbacks to make reinit safe when using
	  such things (only applies to feb barrier at the moment)

2010-06-16 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread_innards.h,
	  src/qt_feb_barrier.c, src/qthread.c,
	  test/test_feb_barrier.c: qt_feb_barrier needs a one-time
	  initialization

2010-06-16 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: incr functions take same-sized
	  arguments

2010-06-16 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: typo

2010-06-16 17:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread/qthread.h: push PGI fixes
	  to all ASM

2010-06-16 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: workaround for a PGI bug

2010-06-16 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: dont depend on __tile__; use QTHREAD_TILE

2010-06-16 14:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: typo in PPC64 ifdef

2010-06-15 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix mwaitc on ppc32

2010-06-15 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_bitfield_order.m4: fix behavior on 32-bit
	  hosts

2010-06-14 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: more efficient helper functions (weird bug in ppc64)

2010-06-14 22:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: slight correctness improvement on qutil functions

2010-06-14 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qutil_qsort.c,
	  test/time_syncvar_producerconsumer.c: fix compiler warnings on
	  32-bit platforms

2010-06-14 21:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_disabled.c, test/test_migrate.c: setenv is preferred to
	  putenv

2010-06-14 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix clang warning

2010-06-14 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qtimer_create.3,
	  man/man3/qtimer_destroy.3, man/man3/qtimer_secs.3,
	  man/man3/qtimer_start.3, man/man3/qtimer_stop.3: document qtimers

2010-06-14 17:50  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qarray_dist_like.3: document
	  qarray_dist_like

2010-06-14 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qloop.c, src/qthread.c: 
	  implemented qthread_fork_syncvar_future_to

2010-06-14 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qt_loop_queue_run_there.3: oops, forgot this one

2010-06-14 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am: convenience; qthread/qthread.h ought
	  to be deprecated, but keep it for now

2010-06-14 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: full list

2010-06-14 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qt_loop_queue_addworker.3,
	  man/man3/qt_loop_queue_create.3,
	  man/man3/qt_loop_queue_run.3: document qt_loop_queue_* stuff

2010-06-14 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix const

2010-06-14 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use named constants for BUILD_UNLOCKED_SYNCVAR
	  states, and do better ENOMEM error handling in syncvar functions

2010-06-14 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: add more error possibilities (for
	  syncvars) and fix some slightly incorrect restrict pointer
	  declarations (specifically, readFF/FE *can* use the same pointer
	  for both arguments)

2010-06-14 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_syncvar_status.3: document
	  syncvar status

2010-06-14 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_readFE.3,
	  man/man3/qthread_readFF.3,
	  man/man3/qthread_syncvar_readFE.3: document syncvar readFE

2010-06-14 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_readFF.3,
	  man/man3/qthread_syncvar_readFF.3,
	  man/man3/qthread_syncvar_writeEF.3,
	  man/man3/qthread_syncvar_writeF.3: document syncvar readFF

2010-06-14 15:08  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_syncvar_writeEF.3,
	  man/man3/qthread_syncvar_writeF.3,
	  man/man3/qthread_syncvar_writeF_const.3,
	  man/man3/qthread_writeF.3: document syncvar writeF(_const)

2010-06-14 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_syncvar_writeEF.3,
	  man/man3/qthread_syncvar_writeEF_const.3,
	  man/man3/qthread_writeEF.3: document syncvar writeEF(_const)

2010-06-14 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_empty.3: minor corrections

2010-06-14 14:58  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_syncvar_empty.3,
	  man/man3/qthread_syncvar_fill.3: document syncvar_empty/fill

2010-06-10 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: PGI flags

2010-06-10 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix icc compiler warnings

2010-06-10 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread/syncvar.hpp: fix the
	  virtual declaration, and skip the static initializer bit

2010-06-10 14:03  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in, include/qthread/qthread.h: avoid
	  static-selector compiler warnings

2010-06-07 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix general race condition with qloop waiting; it's
	  only an efficient solution because syncvars are so darn quick.
	  Still need to implement future_fork_syncvar_to

2010-06-03 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: better error handling
	  for syncvar timeouts

2010-06-01 15:55  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_FUNCTION.m4,
	  configure.in: add __FUNCTION__ checking, as well as error out if
	  no hash table method is available

2010-05-28 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: set picky mode on SunStudio correctly, and fail if
	  no hash table method is available

2010-05-26 21:29  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: it should be CXXLD instead of CXX

2010-05-26 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_hash_maps.m4, configure.in,
	  test/Makefile.am: automatically adjust CCLD if using c++ hashes
	  and compiling without shared libraries

2010-05-25 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: hwloc 1.0 support

2010-05-25 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: hwloc requires globally accessible
	  topology widget

2010-05-25 21:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: use +r notation rather than separate
	  =&r and 0 arguments

2010-05-25 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: __PIC__ only reserves ebx in 32-bit builds!

2010-05-25 20:56  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_hwloc.m4, configure.in: check
	  for hwloc, and make topology library preferences more sensible

2010-05-25 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/syncvar.hpp: simplify

2010-05-24 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp, include/qthread/syncvar.hpp: 
	  syncvar_t c++ wrappers

2010-05-24 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testloop.cpp: make sure syncvar.hpp compiles

2010-05-24 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am: preliminary C++ support for syncvar
	  class

2010-05-24 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp, include/qthread/syncvar.hpp: 
	  preliminary C++ support for syncvar class

2010-05-24 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: allan updates

2010-05-24 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: use the much faster syncvar_t instead of aligned_t
	  synchronization when possible

2010-05-24 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_febs.c: time loop synchronization style

2010-05-24 15:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: do not assert(me) in readFF

2010-05-21 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: use syncvars in qt_loopaccum_balance rather than
	  aligned_ts

2010-05-21 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: syncvar versions of
	  fork

2010-05-20 17:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: more verbosity

2010-05-20 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_basic_syncvar.c: better printouts

2010-05-20 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: tilera mwaitc implementation with test-and-set,
	  also make mwaitc more efficient on 64-bit-atomic-rw platforms, and
	  fix some debug statements

2010-05-19 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_basic_syncvar.c: use writeF_const

2010-05-19 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: quiet ANOTHER of Intel's idiotic compiler warning

2010-05-19 20:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: quiet Intel's idiotic compiler warning

2010-05-19 19:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: forgot to expire the timeout on state checks in
	  mwaitc

2010-05-19 04:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix some compiler warnings about pointer
	  conversion

2010-05-18 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix syncvar readFF shortcut

2010-05-18 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: limits.h

2010-05-18 20:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: optimistic syncvar read-only operations

2010-05-18 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/test_basic_syncvar.c: make syncvar_status match feb_status
	  semantics

2010-05-18 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_gcd.c, test/time_increments.c,
	  test/time_qdqueue.c, test/time_qdqueue_sizes.c,
	  test/time_qlfqueue.c, test/time_qpool.c, test/time_swap.c: match
	  new qloop semantics

2010-05-18 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_febs.c: add time_febs to measure the
	  difference between using syncvars and using aligned_ts

2010-05-18 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_basic_syncvar.c,
	  test/time_syncvar_producerconsumer.c: test syncvar stuff

2010-05-18 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_basic.c: remove forced verbosity

2010-05-18 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: continue standardizing
	  qthread_debug calls, add syncval idea

2010-05-18 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qloop.c: begin standardizing
	  qthread_debug output

2010-05-18 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: bugfixes from allan

2010-05-18 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: extra assert

2010-05-18 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_bitfield_order.m4,
	  configure.in, include/qthread/common.h.in: check bitfield
	  ordering

2010-05-18 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_working_valloc.m4: update copyright

2010-05-18 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect variadic macro styles

2010-05-18 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_vamacros.m4: detect variadic macro
	  styles

2010-05-18 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* config/version-gen: improved version generation

2010-04-29 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_basic.c, test/test_cas.c, test/test_id.c,
	  test/test_qtimer.c, test/test_qutil.c, test/testincr.c: a bit
	  more verbosity and other sst-related fixes

2010-04-29 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h: sst behavior convenience

2010-04-29 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sst/futurelib-sst.c, src/sst/qthread-sst.c: remove compiler
	  warnings

2010-04-29 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h: sync with master

2010-04-28 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: need cprops in SST context too

2010-04-28 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: fix typo

2010-04-26 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: avoid unintentional bitwidth downgrade

2010-04-26 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_queue_loop.c: REALLY_VERBOSE

2010-04-26 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testincr.c: check for verbose

2010-04-26 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fix race condition on freeing rets, without
	  sacrificing efficiency

2010-04-26 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: separate barrier from for-loops

2010-04-26 14:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: remove ICC ROSE warnings

2010-04-26 14:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: fix bugs that Allan found

2010-04-26 14:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: remove ICC warnings

2010-04-22 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: reformatting

2010-04-22 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: need qtimer for normal build now

2010-04-22 17:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c,
	  test/test_queue_loop.c: created a new type of queue loop (TIMED)
	  based on Allans work; made runtime loop type switching possible

2010-04-22 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: more changes from allan, adding step
	  values to the queue loops (currently only a step of 1 is supported)

2010-04-22 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c, test/test_queue_loop.c: more changes from allan,
	  adding step values to the queue loops (currently only a step of 1
	  is supported)

2010-04-22 15:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: avoid assert fails on low shepherd counts

2010-04-22 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more verbose debug info

2010-04-22 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: remove memory leak

2010-04-22 14:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qtimer.c: allow for zero (or apparently-zero) call time

2010-04-22 14:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_barrier.c: handle low shepherd numbers safely

2010-04-22 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_reinit.c: more verbose

2010-04-21 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: use builtin CAS if available on
	  Sparc64 for increment

2010-04-21 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: ROSE now handles correct num_shepherds values

2010-04-21 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c: static declarations

2010-04-21 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: no static initializer

2010-04-21 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_log_barrier.c: match allans interface

2010-04-21 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: static initializers for FASTLOCKS

2010-04-21 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: use FASTLOCKs instead of home-made cas-based lock;
	  this way is more reliable, but long term we want to get rid of the
	  locking here altogether

2010-04-21 16:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c: compiles cleanly

2010-04-21 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: more changes from allan to fix lower-bound problem

2010-04-20 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: support ROSE in header

2010-04-20 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: update to Allans new code (from paper)

2010-04-20 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_barrier.h, src/qt_barrier.c: changes from Allan to the
	  loop barrier (maybe it works now?)

2010-04-08 14:45  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: detect TileCC; also move
	  GNU test to the end, since so many of these blasted compilers
	  pretend to be the GNU compiler

2010-04-08 14:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: remove unreachable break

2010-04-08 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_cp_hash.c: handle needSync argument to qt_hash_create()
	  correctly

2010-04-05 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: avoid compiler warnings on non-Suns

2010-04-05 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testloop.cpp: remove a few more warnings from icc

2010-04-05 16:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_cacheline.c, test/test_cas.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_qarray_accum.c,
	  test/test_qtimer.c, test/test_queue_loop.c,
	  test/test_reinit.c, test/testdincr.c, test/testfincr.c,
	  test/testincr.c, test/testq.c: fix gcc warnings about function
	  declarations

2010-04-05 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, src/qt_hash.cpp: handle needSync argument to
	  _create()

2010-04-05 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: add _PTR versions of FASTLOCK macros, for
	  convenience

2010-04-05 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qalloc.h, include/qthread/qtimer.h: remove gcc
	  warnings about prototypes

2010-04-05 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: remove gcc warnings about prototypes

2010-04-05 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qalloc.c: remove gcc warnings about prototypes

2010-04-05 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_libnuma.m4, configure.in: developer default
	  for enable-picky; also report libnumaV1 or V2

2010-04-05 15:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: ignore icc remark about constant
	  selector

2010-04-05 15:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_hash.cpp: ignore icc error

2010-04-05 14:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: whitespace

2010-04-05 14:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: mark guided as unused (for now) to quiet icc

2010-04-05 14:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: whitespace

2010-04-05 14:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: explicitly convert log() results to quite icc

2010-04-05 14:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/patterns/wavefront.c: explicitly convert ceil results to
	  quite icc

2010-04-02 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_libnuma.m4, src/qthread.c: handle really
	  ancient versions of libnuma

2010-04-02 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* : update ignores

2010-04-02 14:42  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qtimer.c: better qtimer test

2010-04-01 18:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: numa_set_interleave_mask is broken, and I noted my
	  observation about numa_max_node(); come to think of it, this now
	  handles CPU-less nodes

2010-04-01 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fixed bug in new libnuma node allocation

2010-04-01 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: new way to allocate libnuma nodes that deals with
	  heterogeneity (3leaf)

2010-04-01 14:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: fflush test name so we know what we're up
	  to

2010-04-01 14:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: factored is better

2010-04-01 14:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: fixed output formatting of new tests

2010-03-31 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: fixed the "Balanced competing loop" to do
	  what I thought it was doing, and added the Streaming loops to test
	  what BCL used to be testing

2010-03-30 20:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: guided fixes

2010-03-30 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: better end-of-loop handling in factored queue

2010-03-30 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: single-shep shortcut in loop scheduling

2010-03-29 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, src/qloop.c: what was I thinking?
	  queue_run handles the object deletion already

2010-03-29 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: free shep0 total_time timer

2010-03-29 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_feb_barrier.c: C++ casting

2010-03-29 18:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: function to destroy loop handles

2010-03-29 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: function to destroy loop handles

2010-03-24 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_queue_loop.c: test loop queues

2010-03-24 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: guided/factored self-scheduling in loop queues

2010-03-18 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/ds/qarray.c: keep ilnb wrapper private

2010-03-17 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore Makefile.in

2010-03-17 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am, src/allpairs.c,
	  src/patterns/Makefile.am, src/patterns/allpairs.c,
	  src/patterns/wavefront.c, src/wavefront.c: move allpairs and
	  wavefront into their own subdirectory

2010-03-11 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: minor debug output improvement

2010-03-11 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: properly handle rets

2010-03-11 18:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: threadqueue assumes calloc'd data

2010-03-11 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: free rets array

2010-03-11 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: rename testid to test_id for consistency

2010-03-11 18:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better handling of mccoy_thread memory

2010-03-11 18:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: be more efficient when calculating unique address
	  totals

2010-03-11 18:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: behave when using UNPOOLED

2010-03-11 16:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: compute average concurrency

2010-03-10 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: oops, fix non-profiling stuff

2010-03-10 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: add valgrind support to
	  protect DIST location markers, add nonblocking iter_loop wrapper,
	  make loopaccum use a heuristic to avoid spawning threads to all
	  shepherds on small ranges, fix memory leak, add more error checks
	  to set_shepof

2010-03-10 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: enable forced printout

2010-03-10 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fixed up the profiling code; removed the FIXME
	  warning by fixing the shep0 issue

2010-03-09 17:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qtimer.h: C++ compatibility

2010-03-03 22:07  Dylan Stark <dstark@sandia.gov>

	* src/qarray.c: bad math in loopaccum

2010-03-03 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: moved the paren

2010-03-03 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: QTHREAD_CASLOCK2 for initializing

2010-03-03 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qtimer.c, test/time_gcd.c,
	  test/time_incr_bench.c, test/time_incr_bench_pthread.c,
	  test/time_increments.c, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c,
	  test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c, test/time_qutil_qsort.c,
	  test/time_spin_bench.c, test/time_spin_bench_pthread.c,
	  test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: handle moved qtimer.h

2010-03-03 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_swap.c: moved qtimer.h

2010-03-03 20:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: handle unpooled memory

2010-03-03 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: egads... (ROSE)

2010-03-03 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: weird ROSE change to num shepherds reporting

2010-03-03 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: log barrier only works with rose extensions at
	  the moment

2010-03-03 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: FEB barrier is public (because I understand it)

2010-03-03 19:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: AKP updates

2010-03-03 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_log_barrier.c: safety

2010-03-03 19:28  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_log_barrier.c: test log barrier
	  (BROKEN)

2010-03-03 19:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_barrier.h, src/qt_barrier.c: make the barrier
	  interfaces similar

2010-03-03 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: remove warning

2010-03-03 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: oops

2010-03-03 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_feb_barrier.c: feb test does timing
	  now too

2010-03-03 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_feb_barrier.c: 

2010-03-03 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, src/qt_feb_barrier.c: rename feb
	  barrier header

2010-03-03 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_feb_barrier.h,
	  include/qthread/Makefile.am,
	  include/qthread/feb_barrier.h: FEB barrier is now public

2010-03-03 19:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_feb_barrier.c: remove debug printf

2010-03-03 15:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix boundary condition in loopaccum

2010-03-01 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: use compiler detection for -restrict flag

2010-03-01 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qtimer.h, src/qthread.c,
	  src/qtimer/altix.c, src/qtimer/gethrtime.c,
	  src/qtimer/gettime.c, src/qtimer/gettimeofday.c,
	  src/qtimer/mach.c, test/test_qtimer.c,
	  test/time_allpairs.c, test/time_chain_bench.c,
	  test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_gcd.c,
	  test/time_incr_bench.c, test/time_incr_bench_pthread.c,
	  test/time_increments.c, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c,
	  test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c, test/time_qutil_qsort.c,
	  test/time_spin_bench.c, test/time_spin_bench_pthread.c,
	  test/time_swap.c, test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c, test/time_wavefront.c: make
	  qtimer interface more consistent with other qthread functions

2010-03-01 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qtimer.c: make qtimer always available

2010-03-01 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qthread/Makefile.am,
	  include/qthread/qtimer.h, include/qtimer.h,
	  src/Makefile.am, src/qtimer/Makefile.am,
	  src/qtimer/altix.c, src/qtimer/gethrtime.c,
	  src/qtimer/gettime.c, src/qtimer/gettimeofday.c,
	  src/qtimer/mach.c, test/Makefile.am,
	  test/time_allpairs.c, test/time_chain_bench.c,
	  test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_wavefront.c: make
	  qtimer always available

2010-03-01 18:37  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: make qtimer always available

2010-02-25 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: set up reconfigure dependencies

2010-02-25 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: cant check news anymore

2010-02-25 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: fix configure generation to handle dynamic version
	  number

2010-02-25 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* config/version-gen: better svn revision detection; use different
	  behavior if there isnt a b at the end of the version

2010-02-25 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS, config/ChangeLogGen.sh,
	  config/version-gen: better version generation; automatically
	  detect releases based on NEWS file

2010-02-25 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_barrier.h,
	  include/qt_feb_barrier.h, src/Makefile.am, src/qloop.c,
	  src/qt_barrier.c, src/qt_feb_barrier.c, src/qthread.c: feb
	  barrier

2010-02-25 20:26  Kyle Wheeler <kbwheel@sandia.gov>

	* config/version-gen, configure.in: generate package version
	  programmatically

2010-02-25 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c, test/time_qarray_sizes.c: update constants

2010-02-25 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: update constants

2010-02-24 23:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: qarray_dist_like(), first
	  pass

2010-02-24 22:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray_accum.c: example 2

2010-02-24 22:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h: for getenv

2010-02-24 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qarray_accum.c: new test for qarray
	  iter_loopaccum

2010-02-24 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: whitespace reformatting

2010-02-24 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: forgot to pass accumulator argument

2010-02-23 19:58  Dylan Stark <dstark@sandia.gov>

	* test/test_qarray.c: Updates DIST_REG_FIELDS and DIST_REG_STRIPES
	  to DIST_FIELDS and DIST_STRIPES, respectively.

2010-02-23 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h: rename DIST_REG*

2010-02-23 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: rename DIST_REG*

2010-02-23 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qarray_create.3,
	  man/man3/qarray_set_shepof.3, man/man3/qarray_shepof.3: update
	  docs for new qarray behavior

2010-02-23 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: qarray_set_shepof()

2010-02-23 19:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: spinlocks with qthread_yield() makes this debug
	  info really annoying

2010-02-23 19:18  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: more useful assertions

2010-02-23 19:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fixed the FIXED_FIELDS math (which was completely
	  bogus if num_segments wasnt evenly divisible by num_shepherds),
	  started on qarray_set_shepof()

2010-02-22 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: change else to assert

2010-02-22 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove icc warnings

2010-02-22 20:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: FIXED_FIELDS

2010-02-22 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: added vim folds

2010-02-22 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: not quite so inconceivable that the
	  shepherd count would be huge now

2010-02-22 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h: FIXED_FIELD and qarray accumulator
	  definitions

2010-02-22 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: add FIXED_FIELDS test, restore full testing

2010-02-22 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: create FIXED_FIELDS distribution type; also fix
	  ALL_RAND problem (basically, a typo that became a logic error)

2010-02-20 00:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix dincr on ppc32

2010-02-20 00:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: ppc64 implementation of cas

2010-02-20 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_swapcontext.m4,
	  configure.in: do a better job of working around the broken
	  swapcontext implementation on MacOSX

2010-02-18 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, man/man3/Makefile.am,
	  man/man3/qarray_iter.3, man/man3/qarray_iter_loopaccum.3,
	  src/qarray.c: qarray_iter_loopaccum

2010-02-18 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: whitespace

2010-02-18 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: avoid floating point in debug print

2010-02-18 15:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix concurrentthreads_lock issue (bug found by
	  David Evensky)

2010-02-16 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: 1.3.1

2010-02-16 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qt_loop.3, man/man3/qt_loop_future.3: unify the qt_loop*
	  interfaces

2010-02-16 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: use QTHREAD_SST_PRIMITIVES, and note
	  that the while loops in qthread_debug were just asking for trouble

2010-02-16 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: unify the qt_loop* interfaces

2010-02-16 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: unify the qt_loop* interfaces

2010-02-16 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: document version info stuff

2010-02-15 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: comment change

2010-02-15 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: minor tweaks for SST

2010-02-15 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: move to QTHREAD_SST_PRIMITIVES to allow unix-like
	  behavior in the SST

2010-02-15 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: fix config file distribution inclusion

2010-02-09 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_sst.m4, configure.in,
	  include/qthread/common.h.in,
	  include/qthread/qthread-sst.h, include/qthread/qthread.h,
	  include/qthread_innards.h, src/qthread.c,
	  src/sst/futurelib-sst.c: updates for new SST

2010-02-09 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h: apparently restrict is hard to use in typedefs

2010-02-09 18:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: default; only test the basic operation

2010-02-09 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_barrier.h, src/qthread.c: clean up global barrier

2010-02-09 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: only check atomics if we haven't explicitly
	  disabled them

2010-02-09 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h: cprops doesnt care for the restrict keyword

2010-02-09 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/Makefile.am, include/qt_barrier.h,
	  src/Makefile.am, src/qt_barrier.c, src/qthread.c: qt_barrier
	  initial commit (slightly modified from Allan's source)

2010-02-09 15:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: test_wavefront has issues

2010-02-09 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testloop.cpp: roll back previous change... prevents compile

2010-02-09 15:12  Kyle Wheeler <kbwheel@sandia.gov>

	* : 

2010-02-08 23:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: reduce default workload

2010-02-08 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testloop.cpp: fix GCC compiler warnings about dead code

2010-02-08 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_reinit.c: 

2010-02-08 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmark.c, test/test_allpairs.c, test/test_cas.c,
	  test/test_disabled.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_migrate.c,
	  test/test_qarray.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c, test/test_qpool.c,
	  test/test_qutil.c, test/test_qutil_qsort.c,
	  test/test_reinit.c, test/test_stackleft.c,
	  test/testdincr.c, test/testfincr.c, test/testincr.c,
	  test/testq.c, test/testqloop.c, test/time_allpairs.c,
	  test/time_gcd.c, test/time_increments.c,
	  test/time_producerconsumer.c, test/time_swap.c: formatting

2010-02-08 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/test_cas.c, test/test_internal_mod.c,
	  test/test_stackleft.c, test/test_wavefront.c,
	  test/testloop.cpp, test/time_allpairs.c,
	  test/time_chain_bench.c, test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_incr_bench.c,
	  test/time_incr_bench_pthread.c, test/time_increments.c,
	  test/time_lul_bench.c, test/time_lul_bench_pthread.c,
	  test/time_mutex_bench.c, test/time_mutex_bench_pthread.c,
	  test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c, test/time_qutil_qsort.c,
	  test/time_spin_bench.c, test/time_spin_bench_pthread.c,
	  test/time_swap.c, test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c, test/time_wavefront.c: remove
	  Intel warnings

2010-02-08 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: export new qqloop functions

2010-02-08 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h: removing ICC warnings

2010-02-08 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: C++ doesn't need the strict-aliasing exception
	  (yet?)

2010-02-08 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qalloc.c, src/qloop.c, src/qthread.c, src/qutil.c,
	  src/wavefront.c: removing ICC warnings

2010-02-08 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: copy/paste typo

2010-02-08 18:09  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_hash_maps.m4: CXXFLAGS was not being properly
	  restored after ext/hash check

2010-02-08 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: many compilers use EDG
	  front-end; so move it to the end of the tests

2010-02-08 17:58  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: Fix the unknown-cxx issue

2010-02-08 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_detect_compiler_type.m4: Intel's compiler pretends
	  to be GNU

2010-02-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: better picky flag detection

2010-02-08 17:49  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS, acinclude.m4,
	  config/qthread_detect_compiler_type.m4, configure.in: preparing
	  for 1.3.1

2010-02-08 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: removing icc warnings

2010-02-08 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: remove icc compiler warnings

2010-02-08 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: remove icc compiler warnings

2010-02-08 16:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: remove icc compiler warnings

2010-02-08 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: remove icc compiler warnings

2010-02-08 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_gcd.c, test/time_increments.c, test/time_swap.c: remove
	  compiler warnings

2010-02-08 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: remove dead code

2010-02-08 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: unused variable

2010-02-05 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore htmlized output

2010-02-05 19:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: formatting

2010-02-05 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_shep_ok.3: document
	  qthread_shep_ok

2010-02-05 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_finalize.3, man/man3/qthread_fork.3,
	  man/man3/qthread_init.3, man/man3/qthread_self.3,
	  man/man3/qthread_yield.3: reference qthread_initialize instead of
	  qthread_init

2010-02-05 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_init.3,
	  man/man3/qthread_initialize.3: document qthread_initialize

2010-02-05 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: simplify the #defs... they were unnecessarily
	  complex after the AMD-PIC changes

2010-02-04 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: LFQNODE remnant

2010-02-04 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: rename internal lfqueue to "threadqueue" to
	  represent its true nature (as in not-necessarily lock-free)

2010-02-02 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS, configure.in: 1.3

2010-02-02 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: remove empty #elif

2010-02-02 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qalloc.h, test/testq.c: rename mapinfo_s structs

2010-02-02 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: AMD64 may have PIC as well <sigh>

2010-02-02 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_stackleft.c: test fails for some optimization

2010-02-02 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/Makefile.am: gcse flag is no longer necessary

2010-02-02 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c, test/test_id.c,
	  test/test_qdqueue.c, test/test_qlfqueue.c,
	  test/test_qpool.c, test/test_qutil.c,
	  test/test_qutil_qsort.c, test/test_wavefront.c,
	  test/testq.c, test/testqloop.c: remove c++ compile warnings

2010-02-02 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/cacheline.h: c++ compatibility

2010-02-02 20:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_stackleft.c: make the test succeed on IA64 (not sure
	  why it breaks, or what a better way to do it might be)

2010-02-02 16:10  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qloop.c, src/qthread.c: make ROSE extensions
	  optional for now

2010-02-01 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: experimental loop work by Allan

2010-02-01 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: fiddling with removing
	  -Wall warnings; also added some (NON-PUBLIC) functions for tracking
	  for loops for Allan (I don't like them, but I haven't figured out a
	  good way of avoiding them yet).

2010-02-01 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: treat things as unsigned... just to avoid
	  potential problems

2010-01-28 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: atomic_stripes_locks

2010-01-28 18:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: oops - stupid assert

2010-01-28 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: allow selection of only certain tests

2010-01-28 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better error checking in unpooled memory
	  allocation

2010-01-27 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: this is goofy, but makes the compiler happy

2010-01-27 22:58  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qtimer/gettime.c: fix clock_gettime (found a
	  system to test)

2010-01-27 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qtimer/Makefile.am,
	  src/qtimer/gettime.c: new timer type: clock_gettime

2010-01-26 20:56  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: change error message

2010-01-26 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: typo

2010-01-26 20:01  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: make lock stripes
	  variable based on number of shepherds

2010-01-26 20:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_hash.cpp: missing a typedef

2010-01-26 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_reinit.c: test reinitialization

2010-01-26 15:14  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_hash_maps.m4: arguments

2010-01-22 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix off-by-one error in disabling shepherds

2010-01-22 20:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: avoid spurious failures in parallel environments

2010-01-22 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* : updated ignores

2010-01-22 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_ucstack_ssflags.m4: test for ssflags in a
	  slightly cleaner fashion

2010-01-22 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: enable silent rules

2010-01-21 22:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: faster mutex-based CAS
	  operations

2010-01-21 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: faster mutex increments

2010-01-21 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: fastlock sfnf_lock

2010-01-21 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fastlocks in the memory pool

2010-01-21 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: faster mutex increments

2010-01-21 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_cp_hash.c: match changes in qt_hash.cpp

2010-01-21 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: remove compiler warnings

2010-01-21 18:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_hash.cpp: use fastlocks for qt_hash

2010-01-21 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, src/qt_hash.cpp, src/qthread.c: remove
	  reliance on PTHREAD_RECURSIVE

2010-01-21 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_hash.cpp: fix double-lock bug

2010-01-21 16:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: make more configurable, more reliable

2010-01-21 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c, test/time_producerconsumer.c: only output
	  unnecessary stats if VERBOSE=1

2010-01-21 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test1.c, test/test_qutil.c: rename test1
	  to test_qutil, reorder tests to be in increasing order of
	  complexity

2010-01-21 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test2.c, test/test_stackleft.c: rename
	  test2 to test_stackleft

2010-01-21 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test3.c, test/test_basic.c: rename test3
	  to test_basic

2010-01-21 15:10  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: typo

2010-01-21 15:05  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: report when spinlocks are available

2010-01-20 23:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: ditch MUTEX_CAS; pointless

2010-01-20 23:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: fastlock operations may
	  not have return values

2010-01-20 23:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: tmc_sync_mutex_t's are faster than even
	  spinlocks on tilera, for some reason

2010-01-20 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: avoid issues if the node is undefined

2010-01-19 23:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove debug printf

2010-01-19 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: CPU affinity and rudimentary distances on tilera

2010-01-19 23:18  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_tiletopo.m4,
	  configure.in: detect tilera topology library

2010-01-19 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_incr_bench_pthread.c: warning

2010-01-19 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_chain_bench.c, test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c,
	  test/time_incr_bench_pthread.c, test/time_lul_bench.c,
	  test/time_mutex_bench.c, test/time_qarray.c,
	  test/time_qutil_qsort.c, test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: dont *require* verbose

2010-01-19 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c, test/time_chain_bench.c,
	  test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_gcd.c,
	  test/time_incr_bench.c, test/time_incr_bench_pthread.c,
	  test/time_increments.c, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c,
	  test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c, test/time_qutil_qsort.c,
	  test/time_spin_bench.c, test/time_spin_bench_pthread.c,
	  test/time_swap.c, test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c, test/time_wavefront.c: make
	  timer progs produce output (since tey arent run via make check)

2010-01-18 22:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_swap.c: allow VERBOSE check

2010-01-18 22:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c, test/time_producerconsumer.c,
	  test/time_qpool.c: remove compiler warnings on Tilera

2010-01-18 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: more debug output

2010-01-18 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, src/qt_mpool.c: make qt_mpool work in a
	  non-atomic world (via the CASLOCK macros)

2010-01-18 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_internal_mod.c, test/testdincr.c,
	  test/testfincr.c, test/testincr.c: need to include argparsing.h

2010-01-18 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: only init the output_lock in debug mode
	  (obviously)

2010-01-18 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testfincr.c: use "me"

2010-01-18 16:26  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_internal_mod.c: more verbosity

2010-01-18 16:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testfincr.c: more verbosity; match testdincr

2010-01-18 16:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: make the output_lock a
	  FASTLOCK

2010-01-18 16:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: unconditionally include pthread.h, for the
	  FASTLOCK stuff

2010-01-18 16:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better init of two-mutex queue

2010-01-18 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: missing QT_CAS macro for architectures with
	  CAS atomics

2010-01-18 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: fix typo

2010-01-18 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread_innards.h,
	  src/qthread.c: many changes getting it to work on tilera... not
	  done yet. Using the Maged Michael two-lock queue instead of
	  lock-free queue for speed, added support for pthread spinlocks
	  (which for some reason dont work on Tilera... maybe Im doing
	  something wrong)

2010-01-14 23:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: attempting to handle CAS via mutex safely,
	  at least internally... not done yet

2010-01-14 23:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: fastlock support (why broken on
	  tilera???)

2010-01-14 23:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testdincr.c, test/testincr.c: more verbosity

2010-01-14 23:30  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect pthread spinlocks

2010-01-14 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: since the alignment of malloc is a finicky thing,
	  lets avoid relying on the result of that alignment test if possible
	  (this is important on systems that incorrectly generate
	  HAVE_16ALIGNED_MALLOC, such as the Tilera)

2010-01-14 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: since the alignment of malloc is a finicky thing,
	  lets avoid relying on the result of that alignment test if possible
	  (this is important on systems that incorrectly generate
	  HAVE_16ALIGNED_MALLOC, such as the Tilera)

2010-01-14 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qdqueue.c, test/test_qpool.c, test/testqloop.c: oops;
	  fix typo

2010-01-14 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c, test/test_qdqueue.c,
	  test/test_qpool.c, test/testqloop.c: more configurable

2010-01-14 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qlfqueue.c: more configurable

2010-01-14 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_templates.hpp: remove pointless const
	  declaration

2010-01-14 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: recognize QTHREAD_TILE

2010-01-14 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test3.c: remove unused variable warnings

2010-01-14 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h: tile cant handle iprintf for some bizarre
	  reason

2010-01-14 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test3.c: even more verbosity, since this is such a basic
	  test

2010-01-14 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: Tilera cache lines are always 64-byte

2010-01-14 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/osx_compat/taskimpl.h,
	  include/osx_compat/tile-ucontext.h, src/osx_compat/asm.S,
	  src/osx_compat/context.c: wrote my own Tilera
	  getcontext/setcontext

2010-01-14 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_makecontext.m4, configure.in,
	  src/Makefile.am, src/osx_compat/Makefile.am,
	  test/Makefile.am: rename OSX_MAKECONTEXT macros, because they are
	  useful on non-OSX platforms; also, use AC_CHECK_SIZEOF builtin
	  autoconf macro

2010-01-14 16:36  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_assembly.m4: detect tilera assembly

2010-01-12 20:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: fixed up handling of
	  atomics on systems without useful hardware features (still work to
	  do here... mutex-based CAS is broken)

2010-01-07 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: restore debugging #def

2010-01-07 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog: updated

2010-01-07 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: more beta stuff

2010-01-04 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qt_hash.h, src/Makefile.am,
	  src/qt_cp_hash.c: restore cprops compatibility; make it possible
	  to build an all-C (static) library again

2009-12-15 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: handle sysconf errors

2009-12-15 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: support Linux's sysconf() interface
	  for detecting number of shepherds (even if we can't do affinity
	  with them, necessarily)

2009-12-15 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: support using sysctl() to detect the
	  number of available CPUs (which is the official method for doing so
	  on Macs)

2009-12-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: clarity: s/non-competing/independent/g

2009-12-08 17:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: increment benchmarks now make more sense

2009-12-08 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, src/qthread.c: better const handling to avoid
	  warnings when compiling without alignment checks

2009-12-07 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: qthread_debuglevel and
	  an additional assert in qthread_stackleft()

2009-12-07 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test2.c: more interesting test

2009-12-07 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: nicer qthread_debug function

2009-12-03 17:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: added a few assertions, and fixed a potential
	  crasher (freeing a null ptr)

2009-12-03 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: qt_loop_queue stuff

2009-12-03 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more qthread_fork() debugging output

2009-12-03 00:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: borked up the boundary conditions again

2009-12-02 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: tolerate redundant init calls

2009-12-02 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: AHA! make qthread_init work as expected

2009-12-02 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove correct-but-not-helpful const declaration

2009-12-02 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix bound checking in a few other functions

2009-12-02 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix bound checking on qthread_fork_to

2009-12-01 15:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: qthread_shep_ok

2009-11-24 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c, test/time_chain_bench.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_incr_bench.c,
	  test/time_incr_bench_pthread.c, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c, test/time_qarray.c,
	  test/time_spin_bench.c, test/time_spin_bench_pthread.c,
	  test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: remove -Wall -pedantic warnings

2009-11-24 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h,
	  include/osx_compat/taskimpl.h, include/qt_mpool.h,
	  include/qthread/qthread.h, include/qthread_innards.h: ansi

2009-11-24 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test2.c: remove cruft

2009-11-24 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_templates.hpp, src/allpairs.c,
	  src/osx_compat/context.c, src/qloop.c, src/qthread.c,
	  src/qutil.c: fixing -Wall -pedantic errors

2009-11-24 20:14  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: whitespace and comments; make the
	  integer check standardized

2009-11-24 20:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c, test/test_qarray.c,
	  test/test_wavefront.c, test/testloop.cpp: fixing -Wall -pedantic
	  errors

2009-11-24 15:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qutil_qsort.c: remove unused variable

2009-11-23 23:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix race on shep0arg

2009-11-23 23:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: qsort implementation that doesnt use so much stack
	  (also faster than glibc qsort())

2009-11-23 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: some pretty stupid explicit casting

2009-11-23 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: add an assert to detect broken makecontext
	  argument handling (mostly, this detects an llvm bug)

2009-11-23 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4: a way to force the use of manual
	  assembly (probably a bad idea)

2009-11-23 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_hash_maps.m4: un-cache header checks when
	  rechecking alternate CXXFLAGS

2009-11-19 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/context.c, src/qalloc.c, src/qthread.c: remove
	  compiler warnings

2009-11-19 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: current summary

2009-11-19 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_qsort.m4,
	  configure.in, src/qthread.c: properly detect qsort_r style
	  variants

2009-11-18 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: reworked shepherd logic to make enabled/disabled
	  paths easier to follow... threads that yield on a disabled shepherd
	  will get queued twice (once locally and once when it gets forcibly
	  migrated), but thats a small price to pay for clarity

2009-11-18 19:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: skip the goto

2009-11-18 19:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: dont change wandering thread state when sending it
	  home

2009-11-18 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: send wandering threads home if their home shepherd
	  has been reactivated

2009-11-18 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am,
	  man/man3/qthread_disable_shepherd.3,
	  man/man3/qthread_enable_shepherd.3: document
	  qthread_enable/disable_shepherd

2009-11-17 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: use a basic busy-ness
	  estimate for handling disabled shepherds, and forbid disabling
	  shepherd 0

2009-11-17 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qalloc_free.3, man/man3/qalloc_loadmap.3,
	  man/man3/qalloc_malloc.3, man/man3/qt_allpairs.3,
	  man/man3/qt_double_max.3, man/man3/qt_double_min.3,
	  man/man3/qt_double_prod.3, man/man3/qthread_cas.3,
	  man/man3/qthread_distance.3, man/man3/qthread_empty.3,
	  man/man3/qthread_feb_status.3,
	  man/man3/qthread_finalize.3, man/man3/qthread_fork.3,
	  man/man3/qthread_id.3, man/man3/qthread_incr.3,
	  man/man3/qthread_init.3, man/man3/qthread_lock.3,
	  man/man3/qthread_migrate_to.3,
	  man/man3/qthread_num_shepherds.3,
	  man/man3/qthread_prepare.3, man/man3/qthread_readFE.3,
	  man/man3/qthread_readFF.3, man/man3/qthread_retloc.3,
	  man/man3/qthread_schedule.3, man/man3/qthread_self.3,
	  man/man3/qthread_shep.3, man/man3/qthread_sorted_sheps.3,
	  man/man3/qthread_stackleft.3, man/man3/qthread_writeEF.3,
	  man/man3/qthread_writeF.3, man/man3/qthread_yield.3,
	  man/man3/qutil_double_max.3, man/man3/qutil_double_min.3,
	  man/man3/qutil_double_mult.3,
	  man/man3/qutil_double_sum.3, man/man3/qutil_qsort.3: standardize
	  formatting

2009-11-17 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qpool_alloc.3, man/man3/qpool_create.3,
	  man/man3/qpool_destroy.3, man/man3/qpool_free.3,
	  man/man3/qt_allpairs.3, man/man3/qt_double_max.3,
	  man/man3/qt_double_min.3, man/man3/qt_double_prod.3,
	  man/man3/qt_double_sum.3, man/man3/qt_loop.3,
	  man/man3/qt_loop_balance.3, man/man3/qt_loop_future.3,
	  man/man3/qt_loopaccum_balance.3,
	  man/man3/qthread_cacheline.3: standardize formatting

2009-11-17 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qarray_create.3, man/man3/qarray_destroy.3,
	  man/man3/qarray_elem.3, man/man3/qarray_iter.3,
	  man/man3/qarray_shepof.3, man/man3/qdqueue_create.3,
	  man/man3/qdqueue_dequeue.3, man/man3/qdqueue_destroy.3,
	  man/man3/qdqueue_empty.3, man/man3/qdqueue_enqueue.3,
	  man/man3/qlfqueue_create.3, man/man3/qlfqueue_dequeue.3,
	  man/man3/qlfqueue_destroy.3, man/man3/qlfqueue_empty.3,
	  man/man3/qlfqueue_enqueue.3: standardize formatting

2009-11-17 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qalloc_checkpoint.3, man/man3/qalloc_cleanup.3,
	  man/man3/qalloc_free.3, man/man3/qalloc_loadmap.3,
	  man/man3/qalloc_malloc.3: standardize formatting

2009-11-17 18:34  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/future_acquire.3, man/man3/future_exit.3,
	  man/man3/future_fork.3, man/man3/future_init.3,
	  man/man3/future_join_all.3, man/man3/future_yield.3: standardize
	  formatting

2009-11-17 18:22  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_cas.3,
	  man/man3/qthread_cas_ptr.3, man/man3/qthread_incr.3: document
	  qthread_cas and friends

2009-11-16 21:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: avoid warnings on architectures
	  without builtin CAS operations

2009-11-16 21:03  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h, src/qarray.c, src/qdqueue.c,
	  src/qpool.c, src/qt_mpool.c: remove Intel compiler warnings by
	  removing unused goto labels

2009-11-16 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: remove Intel compiler warnings

2009-11-16 20:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: make test more controllable

2009-11-16 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fixed memory leak specific to using libnuma

2009-11-16 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: make cdt thread-safe (remove race condition in
	  initialization; and fix-up its destruction)

2009-11-16 18:57  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in, include/qthread/qthread.h,
	  src/qthread.c: better Sun ASM support (still fighting Sun ICE)

2009-11-16 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: newv is read-only

2009-11-16 17:18  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: transform target_shepherd into a pointer, to speed
	  a few lookups

2009-11-16 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: default to avoid cprops

2009-11-16 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/ax_c_restrict.m4, configure.in,
	  include/qthread/common.h.in, include/qthread/qthread.h: 
	  attempting to fix "restrict" brokenness

2009-11-16 16:26  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore test_cacheline

2009-11-16 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_machtopo.m4: fixed some syntax problems that
	  prevented detection

2009-11-14 00:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: release resources, avoid unnecessary affinity work
	  in single-shepherd case

2009-11-13 23:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better handling of no topo library during
	  disable/enable migration

2009-11-13 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, test/test_disabled.c: fix up the shepherd_ptr on
	  fork_to()

2009-11-13 23:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: ooops, fix typo

2009-11-13 23:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: threads with a second-order affinity (only
	  established via explicit programmer placement, eg via fork or
	  migrate)

2009-11-13 23:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: linux has a separate, incompatible implementation
	  of qsort_r() now

2009-11-13 20:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c, test/test2.c, test/test3.c,
	  test/test_cacheline.c, test/test_disabled.c,
	  test/test_migrate.c, test/test_qarray.c,
	  test/test_qdqueue.c, test/test_qlfqueue.c,
	  test/test_qpool.c, test/test_qutil_qsort.c,
	  test/test_wavefront.c, test/testqloop.c,
	  test/time_allpairs.c, test/time_gcd.c,
	  test/time_incr_bench.c, test/time_lul_bench_pthread.c,
	  test/time_mutex_bench_pthread.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c, test/time_spin_bench.c,
	  test/time_spin_bench_pthread.c, test/time_wavefront.c: change
	  CHECK_INTERACTIVE to CHECK_VERBOSE

2009-11-13 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: report parallelism

2009-11-13 18:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h, test/test_allpairs.c,
	  test/time_chain_bench.c, test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c,
	  test/time_incr_bench_pthread.c, test/time_increments.c,
	  test/time_lul_bench.c, test/time_mutex_bench.c,
	  test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qutil_qsort.c,
	  test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: change TEST_INTERACTIVE into
	  VERBOSE

2009-11-13 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_libnuma.m4, src/qthread.c: use
	  numa_all_cpus_ptr to work around numa_num_thread_cpus bug

2009-11-13 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_libnuma.m4, src/qthread.c: detect CPUs with
	  libnuma... attempt to deal with (what appears to be) a major bug in
	  libnuma

2009-11-13 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: even better way of handling the timer progs

2009-11-13 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_liblgrp.m4,
	  config/qthread_check_machtopo.m4, configure.in,
	  src/qthread.c: straighten out topology interface dtection, and
	  report it in the configuration summary

2009-11-13 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: describe sheps

2009-11-13 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/argparsing.h, test/time_allpairs.c,
	  test/time_qutil_qsort.c: self-documenting arguments

2009-11-12 23:28  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_chain_bench.c,
	  test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c,
	  test/time_incr_bench_pthread.c, test/time_lul_bench.c,
	  test/time_mutex_bench.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qutil_qsort.c,
	  test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: make building tests more sane

2009-11-12 23:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray_sizes.c: short-circuit for testing

2009-11-12 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_disabled.c: hide debug message

2009-11-12 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/Makefile.am, test/test_disabled.c: first pass at
	  enable/disable shepherds

2009-11-12 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/argparsing.h, test/test1.c,
	  test/test2.c, test/test3.c, test/test_allpairs.c,
	  test/test_cacheline.c, test/test_cas.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_migrate.c,
	  test/test_qarray.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c, test/test_qpool.c,
	  test/test_qutil_qsort.c, test/test_wavefront.c,
	  test/testdincr.c, test/testfincr.c, test/testincr.c,
	  test/testqloop.c, test/time_allpairs.c,
	  test/time_chain_bench.c, test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_gcd.c,
	  test/time_incr_bench.c, test/time_incr_bench_pthread.c,
	  test/time_increments.c, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c,
	  test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c, test/time_qutil_qsort.c,
	  test/time_spin_bench.c, test/time_spin_bench_pthread.c,
	  test/time_swap.c, test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c, test/time_wavefront.c: change
	  the way args are handled (now uses environment variables), make
	  time tests quiet by default

2009-11-12 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more debug output for finding the cause of
	  qthread_initialize() errors; and fixed a bad error check

2009-11-11 00:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better warning in qthread_initialize

2009-11-11 00:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/Makefile.am,
	  src/qthread.c, test/test_migrate.c: qthread_initialize() and
	  QTHREAD_NUM_SHEPHERDS replace qthread_init()

2009-11-11 00:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: fix PIC code on intel compiler

2009-11-10 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: identify VirtualBox bug

2009-11-10 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: IA64 tested and corrected

2009-11-10 18:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: compatibility fixes, handle Intel op 4 correctly

2009-11-10 18:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: typo

2009-11-10 18:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: don't leak memory when doing lock profiling and
	  calling qthread_finalize redundantly

2009-11-10 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: correct 0x80000006 handling on AMD

2009-11-10 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: more comprehensive, vendor-specific CPUID
	  manipulation

2009-11-10 17:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_cacheline.c: whitespace

2009-11-10 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/benchmark.c, test/test1.c, test/test2.c,
	  test/test3.c, test/test_allpairs.c,
	  test/test_cacheline.c, test/test_cas.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_migrate.c,
	  test/test_qarray.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c, test/test_qpool.c,
	  test/test_qutil_qsort.c, test/testdincr.c,
	  test/testfincr.c, test/testincr.c, test/testloop.cpp,
	  test/testqloop.c, test/time_allpairs.c,
	  test/time_chain_bench.c, test/time_cncthr_bench.c,
	  test/time_incr_bench.c, test/time_increments.c,
	  test/time_lul_bench.c, test/time_mutex_bench.c,
	  test/time_producerconsumer.c, test/time_qarray.c,
	  test/time_qarray_sizes.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c, test/time_qutil_qsort.c,
	  test/time_spin_bench.c, test/time_thrcrt_bench.c: push
	  qthread_finalize into atexit(); no longer need to call it directly.

2009-11-10 01:14  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix the guard_pages display

2009-11-10 01:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_cacheline.c: test cacheline

2009-11-10 00:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: pay attention to extended attributes correctly

2009-11-05 22:47  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_migrate.c: avoid warning on 64-bit platforms

2009-11-05 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: insist upon a c++ compiler

2009-11-05 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/cacheline.c: safer cacheline detection

2009-11-04 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: guard pages

2009-11-04 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: remove a warning

2009-11-02 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_prepare_for_detached.3: bogus man page

2009-11-02 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS, include/qthread/cacheline.h, man/htmlize.sh,
	  man/man3/Makefile.am, man/man3/qarray_create.3,
	  man/man3/qarray_elem.3, man/man3/qarray_elem_migrate.3,
	  man/man3/qarray_iter.3, man/man3/qdqueue_enqueue.3,
	  man/man3/qt_allpairs.3, man/man3/qt_cacheline.3,
	  man/man3/qt_int_max.3, man/man3/qthread_cacheline.3,
	  man/man3/qthread_sorted_sheps_remote.3, src/allpairs.c,
	  src/cacheline.c, src/qutil.c: preparing documentation for 1.2
	  release; renamed qt_cacheline to qthread_cacheline

2009-11-02 19:08  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_fork.3, man/man3/qthread_init.3: document
	  environment variables

2009-10-30 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS, configure.in, include/qthread/Makefile.am,
	  include/qthread/cacheline.h, include/qthread/common.h.in,
	  man/man3/Makefile.am, man/man3/qt_cacheline.3,
	  src/Makefile.am, src/allpairs.c, src/cacheline.c,
	  src/qutil.c: dynamically detect cacheline size, rather than at
	  library compile time, with qt_cacheline()

2009-10-30 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qdqueue_create.3,
	  man/man3/qdqueue_dequeue.3, man/man3/qdqueue_destroy.3,
	  man/man3/qdqueue_empty.3, man/man3/qdqueue_enqueue.3,
	  man/man3/qdqueue_enqueue_there.3,
	  man/man3/qlfqueue_create.3, man/man3/qlfqueue_dequeue.3,
	  man/man3/qlfqueue_destroy.3, man/man3/qlfqueue_empty.3,
	  man/man3/qlfqueue_enqueue.3, man/man3/qpool_alloc.3,
	  man/man3/qpool_create.3, man/man3/qpool_create_aligned.3,
	  man/man3/qpool_destroy.3, man/man3/qpool_free.3,
	  man/man3/qt_allpairs.3: documentation for all the latest changes

2009-10-30 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS, configure.in: feature freeze for 1.2

2009-10-30 19:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: the difference between input registers
	  and output registers is that input registers are assumed not to
	  change; if they do, things can become very very broken, so ONLY use
	  output registers for "scratch" memory

2009-10-30 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_hash.cpp: compatibility with OSX 10.4's g++, which cannot
	  do uninitialized hash iterators

2009-10-30 17:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am: oops, forgot to include qdqueue.h
	  for distribution

2009-10-30 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_chain_bench_pthread.c: remove unnecessary variables

2009-10-30 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: print progress

2009-10-30 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_hash_maps.m4: make it easier to remove the ifs

2009-10-30 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: eliminate redundant CAS functions when
	  builtin atomic functions are supported

2009-10-30 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_hash.cpp: return ret

2009-10-30 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: reduce icc complaints

2009-10-29 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qutil_qsort.c: asserts

2009-10-29 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: (avg)

2009-10-29 23:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_hash.h, src/qt_hash.cpp: compatibility with gcc 3.4.x

2009-10-29 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: needs stdio all the time (probably bad, but...)

2009-10-29 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: inverted affinity default

2009-10-29 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_hash_maps.m4: add C++ hash frontend to remove
	  dependency on libcprops

2009-10-29 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, configure.in, include/Makefile.am,
	  include/futurelib_innards.h, include/qt_hash.h,
	  include/qthread_innards.h, src/Makefile.am,
	  src/futurelib.c, src/qt_hash.cpp, src/qthread.c,
	  test/time_qlfqueue.c: add C++ hash frontend to remove dependency
	  on libcprops

2009-10-22 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: error detection in envariable parsing

2009-10-22 12:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: casting to avoid warnings

2009-10-20 14:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c, test/test_wavefront.c: remove debugging prints

2009-10-19 23:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: detect 10.4

2009-10-19 23:43  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect 10.4

2009-09-11 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_chain_bench.c, test/time_chain_bench_pthread.c,
	  test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c, test/time_incr_bench.c,
	  test/time_incr_bench_pthread.c, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c, test/time_spin_bench.c,
	  test/time_spin_bench_pthread.c, test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: added "interactive" cycle
	  monitoring

2009-09-11 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_cncthr_bench_pthread.c,
	  test/time_incr_bench_pthread.c,
	  test/time_lul_bench_pthread.c,
	  test/time_mutex_bench_pthread.c,
	  test/time_thrcrt_bench_pthread.c: remove unnecessary argument
	  processing

2009-09-11 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_spin_bench.c,
	  test/time_spin_bench_pthread.c: spin

2009-09-11 13:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_chain_bench_pthread.c: fix chain_bench_pthread

2009-09-10 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_chain_bench.c,
	  test/time_chain_bench_pthread.c,
	  test/time_lul_bench_pthread.c: chain

2009-09-10 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_cncthr_bench.c,
	  test/time_cncthr_bench_pthread.c,
	  test/time_thrcrt_bench.c,
	  test/time_thrcrt_bench_pthread.c: cncthr and thrcrt

2009-09-10 16:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_lul_bench.c,
	  test/time_lul_bench_pthread.c, test/time_mutex_bench.c,
	  test/time_mutex_bench_pthread.c: lul and mutex benchmarks

2009-09-10 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_incr_bench_pthread.c: local ptr

2009-09-10 14:30  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_incr_bench.c,
	  test/time_incr_bench_pthread.c: incr bench

2009-09-08 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use OSX thread affinity interface

2009-09-08 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: check for OSX threading affinity interface

2009-09-08 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_plpa.m4: use arguments, like the comments
	  claim we do

2009-08-11 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qutil_qsort.c: correct libc timing

2009-08-11 18:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: avoid valgrind problems

2009-08-11 18:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qutil_qsort.c: a bit more verbosity, and compar to libc
	  qsort

2009-08-11 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: need a comma

2009-07-01 16:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_gcd.c: more reliable test

2009-07-01 16:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_iter.hpp, test/testloop.cpp,
	  test/time_producerconsumer.c: removing gcc pedantic warnings

2009-07-01 15:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: assertion is backwards

2009-07-01 14:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: error return value

2009-06-30 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: remove autoconf warning about
	  AC_USE_SYSTEM_EXTENSIONS by putting it earlier

2009-06-30 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_migrate.c: this test is critical for porting to new
	  platforms, so lets make it a bit more verbose (in interactive mode)

2009-06-30 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qlfqueue.c: avoid compiler kvetching

2009-06-30 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_internal_mod.c: use the actual number of shepherds,
	  rather than assuming we can always get what we want

2009-06-30 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testfincr.c: just checking...

2009-06-30 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h: update to newer assembly and API
	  for C++ stuff

2009-06-30 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: remove outdated #def

2009-06-30 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: whitespace

2009-06-30 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: handle CACHELINE_BYTES for sst

2009-06-30 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c, src/qt_mpool.c: better error handling, compress
	  valgrind notation

2009-06-30 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h, src/qlfqueue.c: remove qargnonull
	  macro

2009-06-30 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: qthread asserts

2009-06-30 20:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: better error handling, and an SST correction

2009-06-30 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: better error handling

2009-06-30 20:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: better error handling

2009-06-30 20:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: move convenient assertions that need
	  error handling when assertions are not allowed

2009-06-30 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c: better error handling

2009-06-30 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: convenient assertions that need error
	  handling when assertions are not allowed

2009-06-26 04:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: flesh out the lock debugging messages

2009-06-26 03:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: rephrase debug output of yielding

2009-06-26 03:33  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/futurelib.c, src/qthread.c: revise
	  debug output framework, use named states to keep things clear (and
	  re-orderable)

2009-06-23 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: we have CAS now; remove comment, convert to
	  aligned_t

2009-06-23 16:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/osx_compat/386-ucontext.h,
	  include/osx_compat/power-ucontext.h: more descriptive comments

2009-06-23 16:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S: over-saving registers in IA32; comment them
	  out (lightly tested change)

2009-06-23 00:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_migrate.c: check that shepherds identify themselves
	  properly, and that NULL shepherd identification provides the same
	  results as shepherd identification based on a qthread_t

2009-06-23 00:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S: fix pthread_setspecific/getspecific; the
	  value of r13 needs to be set by the parent pthread, rather than be
	  preserved and travel with the qthread

2009-06-23 00:00  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/osx_compat/386-ucontext.h,
	  include/osx_compat/power-ucontext.h,
	  include/osx_compat/taskimpl.h,
	  src/osx_compat/386-ucontext.h,
	  src/osx_compat/Makefile.am, src/osx_compat/context.c,
	  src/osx_compat/power-ucontext.h,
	  src/osx_compat/taskimpl.h: move osx_compat headers someplace
	  sensible

2009-06-22 23:59  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: PPC64 needs bigger stacks

2009-06-22 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, include/qthread/qlfqueue.h,
	  include/qthread/qpool.h, include/qthread/qutil.h: omit extra
	  semicolons to quiet finicky compilers

2009-06-22 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qdqueue.c, test/test_qlfqueue.c,
	  test/test_qpool.c, test/time_increments.c,
	  test/time_qdqueue.c, test/time_qdqueue_sizes.c,
	  test/time_qlfqueue.c: printf pedantry

2009-06-22 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testq.c: avoid compiler warning

2009-06-22 21:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: changing the way I use volatile, to make
	  icc happy

2009-06-22 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c, src/qlfqueue.c, src/qpool.c,
	  src/qt_mpool.c, src/qthread.c: stringent casting to make icc
	  happy

2009-06-22 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: document logic for cas64

2009-06-22 19:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix qthread_cas64 on x86, use
	  xchg/xchg instead of pushl/popl to work around PIC issues (faster,
	  avoids using memory), and rework macros to remind me that the PIC
	  register has to be %4 to work with the macros properly (that was
	  the problem that broke qthread_cas64)

2009-06-16 19:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: handle errors in thread affinity

2009-06-16 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: initialize all of wargs (quiet a compiler
	  complaint)

2009-06-16 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: better ENOMEM handling

2009-06-16 18:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: logic error in exit condition

2009-06-16 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: more volatile access functions

2009-06-16 17:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: use CAS to avoid duplicate work, while allowing
	  duplicate work-units, thus simplifying things a lot

2009-06-16 15:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: detect/handle more malloc failures

2009-06-16 04:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: use a qpool for work units

2009-06-16 04:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: this is a giant near-unconscionable hack, but it
	  prevents threads from spinning on workunits with missing prereqs.
	  essentially, each worker holds on to unusable work units until it
	  finds a usable one (or until there arent any left), and then dumps
	  any (previously) unusable ones back into the queue for others to
	  find

2009-06-16 03:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: remove small memory leak

2009-06-16 03:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: fix small memory leak

2009-06-16 03:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: avoid calling num_shepherds() repeatedly, and
	  avoid minor pooling bug

2009-06-15 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: no need to recalculate QPTR(next) in qt_lfqueue
	  dequeue process every time, and this seems to make some compilers
	  happier

2009-06-15 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c: no need to recalculate QPTR(next) in dequeue
	  process every time, and this seems to make some compilers happier

2009-06-15 20:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: initialize R to avoid compiler warning

2009-06-14 07:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: dont need to keep reallocating local memory in
	  workers: re-use it!

2009-06-14 06:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_wavefront.c: quick timer (update to new wavefront)

2009-06-14 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: remove debugging lines, and fixes a minor
	  "access freed memory" ordering bug

2009-06-14 05:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/wavefront.h, src/wavefront.c,
	  test/test_wavefront.c: new (memory efficient) approach to
	  wavefront. being memory efficient means we can compute bigger
	  problems. bigger problems means more parallelism. Needs a way to
	  compute arbitrary [x,y] in the returned lattice (shouldnt be too
	  hard)

2009-06-14 05:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: no creating idiotic qarrays, even if asserts have
	  been turned off

2009-06-11 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: remove unused code

2009-06-11 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test2.c, test/test_internal_mod.c,
	  test/test_qarray.c, test/time_increments.c,
	  test/time_qarray.c, test/time_qarray_sizes.c,
	  test/time_wavefront.c: minor signed-vs-unsigned comparison fixes

2009-06-11 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/Makefile.am, include/qt_gcd.h,
	  src/qarray.c, src/qpool.c, src/qt_mpool.c,
	  test/time_gcd.c: consolidate gcd/lcm code

2009-06-11 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix debuglevel parsing

2009-06-11 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: oops - affinity logic got confused with all the
	  #defs

2009-06-11 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: assuming that a cache line is a multiple of
	  sizeof(double)... which it always has been so far... calculate the
	  CHUNKSIZE intelligently

2009-06-11 04:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_wavefront.c: fix compiler warning

2009-06-11 04:01  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: PPC cacheline sizes, according to
	  http://developer.apple.com/technotes/tn/tn2087.html - the G4
	  (always 32-bit) has 32-byte cache lines, while the G5 (always
	  64-bit) has 128-byte cache lines

2009-06-11 03:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: correct the argument sizes (minor)

2009-06-11 03:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c, src/qt_mpool.c, src/qthread.c: removing pointless
	  volatile casts (according to ICC)

2009-06-11 03:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: need CAS-32/CAS-64/CASptr in common
	  header

2009-06-11 03:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: adding the volatile back... to reduce
	  compiler warnings

2009-06-11 03:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: remove pointless casts

2009-06-11 03:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_cas.c: properly test CAS varieties

2009-06-11 03:09  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am: use the -restrict flag for icpc
	  (detecting this *should* be libtool's responsibility, IMHO)

2009-06-11 02:33  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4, include/qt_atomics.h,
	  include/qthread/qthread.h: properly detect systems that CAN do a
	  CAS-64 but whose compilers dont know how

2009-06-11 01:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_wavefront.c: always return a value

2009-06-10 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread/qthread-sst.h,
	  include/qthread/qthread.h, src/qthread.c: remove "portability"
	  bodge ("m"(*operand)) because PGI compiler miscompiles it (it
	  actually dereferences operand, rather than just taking the address
	  from operand); also fix a minor issue of redefining
	  QTHREAD_PIC_PREFIX

2009-06-10 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c, src/qthread.c: cast arg2 of qthread_cas_ptr and
	  qt_cas to void* to remove the PGI warning

2009-06-10 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: correct the qthread_cas_ptr arg (the
	  memory pointed to by arg needs to be considered volatile... the
	  memory pointed to by the memory pointed to by arg is somewhat
	  besides the point).

2009-06-10 21:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_iter.hpp: remove pointless const
	  declarations, and add PGI to the list of special-case compilers

2009-06-10 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: correct the qt_cas ptr (the memory pointed
	  to by ptr needs to be considered volatile... the memory pointed to
	  by the memory pointed to by ptr is somewhat besides the point).
	  Also a slight modification to cmpxchg syntax... might make PGI
	  compiler happy (maybe not)

2009-06-10 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: PGI compiler has a cpp bug such that string appends
	  ignore subsequent whitespace. A workaround (used here) is to make
	  sure that when this is important, there is always a terminating
	  string. In other words, a declaration like "struct qt##initials
	  arg;" must become "struct qt##initials##_s arg;" or else PGI will
	  treat it as if it was "struct qt##initials##arg;

2009-06-10 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more accurate requirement description on ia32
	  cmpxchg8b---makes PGI compiler happy. also avoid the noaffinity
	  label and goto (was kinda lame anyway)

2009-06-10 20:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: more accurate requirement description
	  on ia32 cmpxchg8b---makes PGI compiler happy

2009-06-09 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix incr/cas summary on some systems

2009-06-09 21:38  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_ia_cacheline.m4: icc without pic... should work,
	  but doesnt without this change (why?)

2009-06-09 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: use the correct register in 64-bit
	  IA32 CAS

2009-06-05 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_wavefront.c: finer-grained blocking

2009-06-05 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix major migration bug on some platforms

2009-06-05 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: mark unused args

2009-06-05 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: mark unused args

2009-06-05 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: avoid signed/unsigned warning

2009-06-05 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: mark unused args

2009-06-05 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: remove unnecessary vol func

2009-06-05 16:01  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: altix cache-line

2009-06-05 00:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c, src/wavefront.c: use detected cacheline size

2009-06-05 00:30  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_ia_cacheline.m4, configure.in,
	  include/qthread/common.h.in: detect cache line size

2009-06-04 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c, src/qloop.c, src/qpool.c, src/qt_mpool.c,
	  src/qthread.c, src/wavefront.c, test/time_wavefront.c: whitespace

2009-06-04 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_wavefront.c: tidying up

2009-06-04 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: avoid compiler bugs with volatile

2009-06-04 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: avoid compiler bugs with volatile

2009-06-04 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: avoid compiler bugs with volatile

2009-06-04 17:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: avoid compiler bugs with volatile

2009-06-04 17:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c: avoid compiler bugs with volatile

2009-06-04 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: avoid compiler bugs with volatile

2009-06-04 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c, src/qarray.c, src/qdqueue.c,
	  src/qthread.c, src/qtimer/altix.c: whitespace

2009-06-04 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: whitespace

2009-06-04 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: avoid compiler bugs with volatile

2009-06-04 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: avoid compiler bugs with volatile

2009-06-04 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: avoid compiler bugs with volatile

2009-06-04 14:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: make it possible to remove ABA protection (i.e. for
	  VALGRIND use)

2009-06-04 14:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/altix.c: work around potentially broken compiler
	  handling of volatile keyword

2009-06-04 14:32  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4, configure.in: check for the
	  noinline attribute

2009-06-03 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: trimmed

2009-06-03 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: align the chunksize

2009-06-03 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: dont use too much affinity on Niagara2 (kickass
	  cache architecture means we dont care so much about exactly which
	  core each shepherd uses)

2009-06-03 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_qutil_qsort.c: time qutil_qsort

2009-06-03 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_cas.c: CAS64 doesn't exist on ppc32

2009-06-02 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: fix valgrind typo

2009-06-02 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_wavefront.c: make it a little more interesting

2009-06-02 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_check_16aligned_malloc.m4: attempt to detect more
	  tricky platforms

2009-06-02 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: VALGRIND

2009-06-02 21:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: VALGRIND placeholder, and a few extra
	  pointers to make sure memory can be cleaned up properly at the end

2009-06-02 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: VALGRIND macros to assist with debugging

2009-06-02 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: VALGRIND macros to assist with debugging

2009-06-02 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: VALGRIND macros, freeing some more memory, and
	  clearing all allocated LFQ nodes in an attempt to avoid problems

2009-06-02 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c: interactive output

2009-05-29 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: sun things

2009-05-29 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: lots of lgrp fixes, and a fix to unpooled memory
	  behavior

2009-05-29 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: lots of garbage left in the code, but this has
	  much-improved heuristics

2009-05-29 14:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: try out perfect halfway algorithm

2009-05-28 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: shep is unused without distance tracking

2009-05-28 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: cast to remove warnings on some systems

2009-05-28 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c, src/qlfqueue.c, src/qpool.c: use qthread_cas for
	  user-side objects

2009-05-28 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, test/Makefile.am,
	  test/test_cas.c: adding qthread_cas

2009-05-28 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: check result of qarray_create

2009-05-28 05:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix qarray_create_tight

2009-05-28 03:47  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: tighter, small segments

2009-05-28 03:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: a few improved heuristic options

2009-05-27 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_wavefront.c: 10x

2009-05-27 18:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c, src/qt_mpool.c: better exit condition

2009-05-27 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c, src/qt_mpool.c: Fix potential NULL dereference
	  (idiot error)

2009-05-27 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: check qthread_init value

2009-05-27 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: always initialize lgrp_cookie

2009-05-27 14:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: membar is probably a good idea

2009-05-27 14:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c: 

2009-05-27 01:49  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: fix typo

2009-05-27 01:45  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: hamming is unnecessarily slow

2009-05-27 01:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c: 10x

2009-05-27 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_allpairs.c, test/time_wavefront.c: fix qtimer_destroy

2009-05-26 23:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_allpairs.c,
	  test/time_wavefront.c: time wavefront

2009-05-26 23:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_allpairs.c: time allpairs

2009-05-22 17:45  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_tbbq.cpp, test/time_tbbq_sizes.cpp: for comparison to
	  Intel TBB

2009-05-22 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c: gnu_source <sigh>

2009-05-22 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/wavefront.c: eliminate harmless compiler warning

2009-05-22 17:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_wavefront.c: no need to empty arrays

2009-05-22 17:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/wavefront.h, src/wavefront.c: use colprogress
	  instead of febs to allow more parallelism

2009-05-22 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_wavefront.c: remove verbosity in non-interactive
	  sessions

2009-05-22 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/wavefront.h,
	  src/Makefile.am, src/wavefront.c, test/Makefile.am,
	  test/test_wavefront.c: wavefront

2009-05-22 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c, src/qpool.c, src/qt_mpool.c: dont care about QCTR
	  type

2009-05-22 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: minor typo and added folding

2009-05-22 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: use the QPTR stuff to avoid ABA problems (copied
	  from qt_mpool.c)

2009-05-22 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: typo in #def

2009-05-22 16:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: qthread-int.h for uintptr_t

2009-05-22 16:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: use the QPTR stuff to avoid ABA problems (needs
	  testing)

2009-05-13 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c: initloops

2009-05-13 07:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c: hamming

2009-05-13 07:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: fixing the shep==shep case

2009-05-12 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/allpairs.h, src/allpairs.c,
	  test/test_allpairs.c: finesse the allpairs interface a little
	  (still not perfect)

2009-05-12 22:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: extra parens

2009-05-12 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: int is faster

2009-05-12 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: another icc recommendation

2009-05-12 21:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c: allpair work units get queued halfway between
	  their two components (halfway being a vague description for using
	  the sorted neighbor list in a unique way); this avoids problems
	  where the second array is not well distributed, but assumes several
	  things, including that all distances are commutative/bidirectional
	  and that the penalty for distlocal+distremote <= penalty for
	  dist/2remote+dist/2remote

2009-05-12 21:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fold qthread_distance()

2009-05-12 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: folds

2009-05-12 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qdqueue.h, src/qdqueue.c: qdqueue_enqueue_there()

2009-05-12 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qarray_create.3,
	  man/man3/qarray_create_configured.3,
	  man/man3/qarray_create_tight.3,
	  man/man3/qarray_destroy.3, man/man3/qarray_elem.3,
	  man/man3/qarray_elem_nomigrate.3, man/man3/qarray_iter.3,
	  man/man3/qarray_iter_constloop.3,
	  man/man3/qarray_iter_loop.3, man/man3/qarray_shepof.3: qarray
	  documentation

2009-05-12 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix qarray_iter typo

2009-05-11 23:22  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attributes.m4,
	  include/qthread/common.h.in, include/qthread/qthread.h: using
	  autoconf to define macros with arguments doesnt always work. <sigh>

2009-05-11 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c: skip the verbose output

2009-05-11 22:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initialize qdle

2009-05-11 22:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: misspelled QTHREAD_HAVE_LIBNUMA

2009-05-11 22:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: use quotes for config.h

2009-05-11 22:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix pthread_join error reporting

2009-05-11 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: missing close-brace

2009-05-11 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c, src/futurelib.c, src/qarray.c,
	  src/qdqueue.c, src/qloop.c, src/qpool.c, src/qt_mpool.c,
	  src/qthread.c, src/qutil.c: removed some icc Wall warnings;
	  simplified mpool internal alloc; fixed qthread_retloc bug

2009-05-11 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread/futurelib.h,
	  include/qthread/qloop.h, include/qthread/qthread.h: removed a few
	  icc Wall warnings

2009-05-11 20:51  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c, test/test2.c, test/test3.c,
	  test/test_allpairs.c, test/test_id.c,
	  test/test_internal_mod.c, test/test_migrate.c,
	  test/test_qarray.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c, test/test_qpool.c,
	  test/testdincr.c, test/testfincr.c, test/testincr.c: removed a
	  few icc Wall warnings

2009-05-11 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/allpairs.c, test/test_qutil_qsort.c, test/testq.c: remove
	  Intel compiler warnings (not -Wall)

2009-05-09 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: pointless cast

2009-05-09 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: use Q_ALIGNED

2009-05-09 18:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: restrict is only useful
	  for ptrs of the same type

2009-05-09 07:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, include/qthread/qthread.h,
	  src/qarray.c, src/qthread.c: restrained use of restrict

2009-05-09 07:22  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/allpairs.h, src/allpairs.c,
	  test/test_allpairs.c: work-queue-based allpairs... beginning to
	  get a handle on distribution of work now. also, allpairs takes TWO
	  qarrays now, instead of one.

2009-05-09 07:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: me is allowed to be null

2009-05-09 07:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: using restrict
	  extensively... is it wrong or helpful?

2009-05-09 07:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: enable extensive use of "restrict"
	  in headers

2009-05-09 03:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h: minor readability improvement

2009-05-09 03:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qdqueue.h, include/qthread/qlfqueue.h,
	  include/qthread/qpool.h, src/qdqueue.c, src/qlfqueue.c,
	  src/qpool.c, test/test_qdqueue.c, test/test_qlfqueue.c,
	  test/test_qpool.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c, test/time_qlfqueue.c,
	  test/time_qpool.c: turns out, the "me" variable was being passed
	  around unnecessarily for a bunch of the initialization stuff

2009-05-09 03:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_allpairs.c: use new qarray iface

2009-05-09 03:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c,
	  test/test_qarray.c, test/time_qarray.c,
	  test/time_qarray_sizes.c: fixing qarray defaults; make the
	  interface a little cleaner and more flexible

2009-05-09 03:06  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_gcd.c, test/time_qdqueue_sizes.c,
	  test/time_qlfqueue.c, test/time_qpool.c: fixing -Wall errors

2009-05-08 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/allpairs.h, src/allpairs.c,
	  test/test_allpairs.c: Made qt_allpairs work with qarrays instead
	  of generic arrays (input, not output). The idea is that this can be
	  used to inform locality decisions. The implementation is still
	  relatively naive, and VERY imbalanced, but it is at least parallel
	  (heh).

2009-05-08 18:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c,
	  test/test_qarray.c, test/time_qarray.c,
	  test/time_qarray_sizes.c: added a const iter_loop, and made it
	  possible to limit the range of iteration

2009-05-08 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix -Wall warnings about unused things

2009-05-08 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qlfqueue.h: using Q_STARTCXX/Q_ENDCXX, and
	  reformatting with gnu indent

2009-05-08 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: fix -Wall warnings

2009-05-08 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/futurelib.h, include/qthread/qdqueue.h,
	  include/qthread/qloop.h, include/qthread/qpool.h,
	  include/qthread/qutil.h: using Q_STARTCXX/Q_ENDCXX, and
	  reformatting with gnu indent

2009-05-08 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: convenience buildall target

2009-05-08 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: avoid nullifying asserts

2009-05-08 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qdqueue.c, test/test_qlfqueue.c: avoid unused var
	  warning

2009-05-08 18:26  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c: correct includes

2009-05-08 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: tidying up a little (mostly
	  whitespace, but added Q_STARTCXX and Q_ENDCXX to be helpful in
	  other headers)

2009-05-08 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: tag static convenience functions as
	  unused, to avoid -Wall warnings

2009-05-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: make the attribute stuff available
	  to the header files

2009-05-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_attribute_aligned.m4,
	  config/qthread_check_attributes.m4: better filename

2009-05-08 17:51  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_attribute_aligned.m4, configure.in: 
	  preparing to use gcc-style __attribute__ flags a bit more

2009-05-07 20:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/allpairs.h,
	  src/Makefile.am, src/allpairs.c, test/Makefile.am,
	  test/test_allpairs.c: basic allpairs (needs much work - not
	  parallel!)

2009-05-07 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: try to guess the right number of threads if
	  qthread_init(0)

2009-05-07 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fix lazy threadid dependence behavior

2009-04-22 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c, test/test1.c, test/testqloop.c: remove Intel
	  compiler warnings

2009-04-22 20:31  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4, include/qt_atomics.h,
	  include/qthread/qthread.h: support intels compiler on IA32 as
	  well

2009-04-14 18:47  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_libnuma.m4, src/qthread.c: detect and handle
	  old versions of libnuma

2009-04-14 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h: sst versions of new functions

2009-04-14 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: cast qthread_incr argument... need a public cas to
	  make this correct, but this hack should be okay for now

2009-04-14 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: typo; fix number of args to free()

2009-04-10 23:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: mutex pool

2009-04-03 19:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c, test/test2.c, test/test3.c,
	  test/test_qarray.c, test/test_qdqueue.c,
	  test/test_qlfqueue.c, test/test_qpool.c,
	  test/test_qutil_qsort.c, test/testqloop.c,
	  test/time_increments.c, test/time_producerconsumer.c,
	  test/time_qarray.c, test/time_qarray_sizes.c,
	  test/time_qdqueue.c, test/time_qdqueue_sizes.c,
	  test/time_qlfqueue.c, test/time_qpool.c: allow qthread_init(0)

2009-04-03 19:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: oop - typo

2009-04-03 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: initial support for
	  qthread_init(0)

2009-04-03 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: oh thank God, I merely got this test backwards. I
	  thought I was going *insane*

2009-04-03 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray_sizes.c: forgot to free the timer

2009-04-03 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray_sizes.c: make it possible to skip the
	  constant_size test

2009-04-03 16:58  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: whitespace

2009-04-03 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: time libnuma as well

2009-04-03 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray_sizes.c: use a limited set of sizes, and time
	  the assert1_loop ten times, just like everything else

2009-04-03 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qdqueue_sizes.c: qpool must be a ptr now

2009-04-03 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qpool.c: qpool must be a ptr now

2009-04-03 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: STDC_HEADERS is an obsolete #def

2009-04-03 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: too many n's in onnode

2009-04-02 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qdqueue.h, src/qdqueue.c,
	  test/test_qdqueue.c, test/time_qdqueue.c,
	  test/time_qdqueue_sizes.c: try to maintain a consistent
	  create/destroy semantic with the new data structures (qdqueue)

2009-04-02 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c,
	  test/test_qarray.c, test/time_qarray.c,
	  test/time_qarray_sizes.c: try to maintain a consistent
	  create/destroy semantic with the new data structures (qarray)

2009-04-02 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qlfqueue.h, src/qdqueue.c,
	  src/qlfqueue.c, test/test_qlfqueue.c,
	  test/time_qlfqueue.c: try to maintain a consistent create/destroy
	  semantic with the new data structures

2009-04-02 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: numa allocation apparently only does local memory if
	  you do it explicitly; but avoid using the wrong free() function

2009-04-02 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: explanatory comment

2009-04-01 06:19  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_builtin_expect.m4, include/Makefile.am,
	  include/qthread_expect.h: more portable handling of expect for
	  older autoconfs

2009-04-01 06:06  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_builtin_expect.m4,
	  configure.in: lay groundwork for using __builtin_expect()

2009-04-01 06:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qpool.h, src/qlfqueue.c, src/qpool.c: qpool is a
	  ptr

2009-03-31 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix lgrp stuff

2009-03-31 19:53  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: skip unnecessary checks

2009-03-31 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: uses asserts

2009-03-31 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix sorting shepherd distances in wrong order

2009-03-31 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix some NUMA typos in new shepherd distance stuff

2009-03-31 17:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: needs innards still, for NUMA

2009-03-31 17:30  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qthread/qthread.h,
	  man/man3/Makefile.am, man/man3/qthread_distance.3,
	  man/man3/qthread_num_shepherds.3,
	  man/man3/qthread_sorted_sheps.3,
	  man/man3/qthread_sorted_sheps_remote.3, src/qthread.c: Created
	  public functions qthread_sorted_sheps and
	  qthread_sorted_sheps_remote, for use in data structures that want
	  to know how far apart shepherds are. Its a shortcut to getting a
	  list of remote shepherds in order from nearest to most distant.

2009-03-31 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: oop, too much (fix previous patch)

2009-03-31 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, man/man3/Makefile.am,
	  man/man3/qthread_distance.3, src/qdqueue.c, src/qthread.c: 
	  Created public function qthread_distance, for use in data
	  structures that want to know how far apart hepherds are.

2009-03-31 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, man/man3/Makefile.am,
	  man/man3/qthread_num_shepherds.3, src/qarray.c,
	  src/qdqueue.c, src/qlfqueue.c, src/qloop.c, src/qpool.c,
	  src/qthread.c: Created public function qthread_num_shepherds, for
	  use in data structures that want to know how many shepherds there
	  are. This replaces the previous innard function.

2009-03-30 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: fix affinity-only crash on Solaris

2009-03-30 18:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: avoid rounding issues on Solaris

2009-03-30 00:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c,
	  test/test_qarray.c, test/time_qarray.c,
	  test/time_qarray_sizes.c: allow loop iterations to have arguments

2009-03-29 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h: c++ externs <sigh>

2009-03-29 21:56  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: check for the math.h header even for SST

2009-03-29 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h: avoid compiler warnings

2009-03-29 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sst/futurelib-sst.c: future_fork_to

2009-03-29 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: avoid memset warning by including the right
	  headers

2009-03-29 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: make the CAS stuff portable (qthreads needs its
	  own CAS)

2009-03-28 07:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_qdqueue_sizes.c: pass around memory
	  blocks

2009-03-28 07:06  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qdqueue.c: skip the ordering test

2009-03-28 03:50  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_qdqueue.c: timing qdqueue

2009-03-28 03:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: formatting

2009-03-28 03:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qthread.c: avoid leaking the shep0
	  stack after finalize

2009-03-28 03:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: oops - left some libnuma dregs behind

2009-03-28 03:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: calloc to avoid uninitialized variables (mostly
	  just for the bigass array); also, get rid of those pointless
	  MALLOC/FREE #defs

2009-03-28 02:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: initialize flags, and use calloc for stack (minor
	  safety precaution)

2009-03-28 02:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: memory is safer when initialized, and since we only
	  pay the cost once, its not a big deal

2009-03-28 02:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: first, numa allocation is way too slow (see
	  qpool.c log). second, memory is safer when initialized, and since
	  we only pay the cost once, its not a big deal

2009-03-28 02:48  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_check_16aligned_malloc.m4, configure.in: check for
	  16-aligned calloc

2009-03-27 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: hypnotoad customization snuck in

2009-03-27 23:12  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: oops - debug printout

2009-03-27 23:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: fix numNeighbors bug in libnuma, make it work with
	  lgroup

2009-03-27 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c, src/qthread.c: fix lgrp setup (still needs
	  neighbor work)

2009-03-27 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: preliminary lgrp

2009-03-27 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: whitespace/reformatting

2009-03-27 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: fix behavior when all nodes are equidistant

2009-03-27 20:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qdqueue.c: compile on linux

2009-03-27 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qdqueue.h, src/Makefile.am,
	  src/qdqueue.c, test/Makefile.am, test/test_qdqueue.c: qdqueue
	  implemented, ready for testing

2009-03-25 18:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c,
	  test/time_qarray.c: allow forcing tight segments, so that the
	  compiler can optimize tight loops better

2009-03-23 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: add comment about TODO

2009-03-23 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: remove compiler warning

2009-03-23 19:29  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qlfqueue.c: compare to cp_list (not 100% fair
	  comparison, but makes me feel better)

2009-03-22 01:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qlfqueue.h, src/qlfqueue.c,
	  test/test_qlfqueue.c, test/time_qlfqueue.c: qlfqueue should use
	  the user-accessible qpool, not qt_mpool. To help, the interface now
	  requires a *me* argument

2009-03-22 01:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qlfqueue.c,
	  test/time_qlfqueue.c: qlfqueue timer

2009-03-22 01:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: document potential wrongness in mpool

2009-03-20 20:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: using libnuma alloc routines is too slow, and
	  besides it should be automatically handled by the
	  numa_set_preferred() call

2009-03-20 20:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: a little minor simplification

2009-03-20 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: no affinity means normal allocation (libnuma is too
	  wasteful)

2009-03-20 20:09  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix the NUMA node-choice math

2009-03-20 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: rearrange tests

2009-03-20 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qpool.c: minor thing...

2009-03-20 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: single-threaded shepherds dont need the lock

2009-03-20 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qpool.h, src/qpool.c, test/test_qpool.c,
	  test/time_qpool.c: Make qpool distributed.

2009-03-20 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_asserts.h: minor assert bug

2009-03-20 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qpool.c: there we go...

2009-03-20 15:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: folding

2009-03-20 14:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qpool.c: that bug was *obvious*

2009-03-20 14:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/qpool.h,
	  src/Makefile.am, src/qpool.c, test/Makefile.am,
	  test/test_qpool.c, test/time_qpool.c: make qpool available...
	  need to figure out the bug in it

2009-03-19 16:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qarray.c: fix the
	  qthread_internal_shep_to_node checks to handle shepherds with no
	  affinity correctly; add an official "name" for the "no affinity"
	  result

2009-03-19 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_altix_timer.m4: this should have been
	  AC_RUN_IFELSE, because apparently some distributions of Linux LOOK
	  like they have an altix timer, when in fact attempting to use it
	  causes a segfault

2009-03-18 14:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c: fix qlfqueue_empty return code on null queues

2009-03-18 14:03  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: 1.2 bump

2009-03-17 20:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/futurelib.h, src/futurelib.c, src/qloop.c: safer
	  futurelib forking. added future_fork_to (a mirror of
	  qthread_fork_to), and stopped qloop.c from using
	  qthread_fork_future_to() directly (because that bypassed futures
	  bookkeeping)

2009-03-17 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: don't assume that futurelib has been initialized

2009-03-17 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: handle 64-bit aligned_t properly on IA32 (stole
	  code from qthread.h)

2009-03-17 16:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qlfqueue.c: formatting

2009-03-17 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix old typo, and free valloc()d memory if that
	  seems to be safe

2009-03-17 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qlfqueue.c: extra tests

2009-03-16 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/qlfqueue.h,
	  include/qthread_asserts.h, src/Makefile.am,
	  src/qlfqueue.c, test/Makefile.am, test/test_qlfqueue.c: qlfqueue
	  interface made public (undocumented)

2009-03-16 16:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: change SWAP to be more optimizable

2009-03-06 20:06  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: avoid passsing numa calls invalid node IDs

2009-03-06 19:59  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: ability to time just a single distribution
	  type

2009-03-06 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_libnuma.m4, src/qthread.c: basic libnuma
	  compatibility changes

2009-03-06 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_altix_timer.m4: improve altix timer
	  detection

2009-03-04 20:24  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qarray.c: use madvise

2009-03-04 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: re-enable condwait on solaris

2009-03-04 19:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use lgrp_root for calling lgrp_walk

2009-03-04 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fixed the condwait bug (I think), and made the
	  affinity stuff slightly more efficient

2009-03-04 16:30  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: disable condwait queue on solaris until I fix it

2009-03-04 10:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: only use numa if available

2009-03-04 08:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: minor fixes

2009-03-04 08:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: lgrp support

2009-03-04 08:02  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: lgrp detection (for solaris)

2009-03-04 00:14  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: new error code

2009-03-04 00:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix an alignment assertion

2009-02-27 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: oops... "node" is used even without libnuma
	  (mostly because itd be a pain to #def it out everywhere)

2009-02-26 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: whitespace

2009-02-26 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: use libnuma to ensure that memory really IS local
	  (otherwise, locality is a cache-based idea)

2009-02-26 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: provide a shep-to-node translator

2009-02-26 22:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix the node-choice logic, provide a shep-to-node
	  translator

2009-02-26 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: whitespace & folding

2009-02-26 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: whitespace/reformatting

2009-02-26 20:52  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_working_valloc.m4: use AS_IF and prefix with
	  x

2009-02-26 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_mpool.h, src/qt_mpool.c, src/qthread.c: use libnuma
	  for basics

2009-02-26 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_libnuma.m4,
	  config/qthread_check_plpa.m4, configure.in: detect libnuma,
	  prefer to plpa

2009-02-25 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: correct bounds checking on looping with DIST

2009-02-25 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: correct bounds checking on DIST initialization

2009-02-25 08:30  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_altix_timer.m4: better altix check - ensure
	  that qtimer init will work

2009-02-24 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: fix some syntax, and check allocations

2009-02-24 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: oops - move the struct to
	  the header to help with inlining

2009-02-24 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qarray.h, src/qarray.c: make element locating
	  inlinable

2009-02-24 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: better tests

2009-02-24 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more condwait ifdefs

2009-02-18 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: make the pthread-cond-wait thing
	  optional, because it only seems to be crucial on the niagara so far

2009-02-13 04:08  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray_sizes.c: memset/memcmp turns out to be faster.
	  Also, do each test ten times and take the average

2009-02-13 04:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix a BUNCH of little bugs in qarray, but make the
	  segment size less interesting (for now)

2009-02-12 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix loop strider to specify array indexes, rather
	  than offsets

2009-02-12 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c, test/time_qarray.c,
	  test/time_qarray_sizes.c: use qarray_elem_nomigrate to find array
	  elements instead of pointer math. also, avoid memcmp, since that
	  could cause problems in very large unit sizes

2009-02-12 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: this seems to fix a race condition on Sparc (not
	  sure why... its not the volatile)

2009-02-10 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_altix_timer.m4, src/qtimer/altix.c: updated
	  detection/use of altix timer for newer linux versions

2009-02-10 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix typo in assertion

2009-02-10 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix the zero-size cluster problem in DIST variants

2009-02-10 19:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray_sizes.c: oops, typo

2009-02-10 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray_sizes.c: print results as we get them

2009-02-06 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_qarray_sizes.c: add the size-sweeping
	  test

2009-02-06 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_working_valloc.m4,
	  configure.in, src/qarray.c: use page-aligned memory *safely* for
	  qarrays (sometimes, valloc is broken)

2009-02-06 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: check return value of processor_bind

2009-02-05 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: use valloc for speed & alignment

2009-02-05 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: processor_bind layout is somewhat tricky... this
	  produces better average performance on a niagara, but probably
	  ought to be tailored to the specific machine in the future

2009-02-05 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: more efficient lock-free queue (i.e. make the
	  spinlock block if it spins too much... *usually* a lock-free queue,
	  but now faster in bad situations)

2009-02-05 18:01  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect processor_bind

2009-02-05 08:56  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fixes for processor_bind() (solaris-only)

2009-02-05 07:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: more flexible test running

2009-02-05 06:54  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: that date thing was a horrible idea - very
	  non-portable

2009-02-05 06:51  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: initial (mostly untested) affinity
	  support

2009-02-05 06:22  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: remove compiler warnings when asserts are enabled

2009-02-05 05:47  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: better interactive messages

2009-02-04 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: fix alignment of distributed tags (critical for
	  sparc)

2009-02-04 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: use iter_loop for best time

2009-02-04 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: typo

2009-02-04 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_qarray.c: configurable element count

2009-02-04 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qarray.c, test/time_qarray.c: qarray
	  benchmark

2009-02-04 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: show if using compiler atomics

2009-02-04 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: prevent the original
	  thread from migrating

2009-02-04 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am: add option to disable c++ tests,
	  and protect against malicious arguments

2009-02-04 00:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: eliminate compiler warnings doing pointer
	  arithmetic on void* by converting to char*

2009-02-04 00:00  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: eliminate compiler warnings doing pointer
	  arithmetic on void* by converting to char*

2009-02-03 23:56  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect intel compiler for gcse flag

2009-02-03 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c, test/test_qarray.c: added bookkeeping for the
	  *_LEAST distribution methods

2009-01-30 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: avoid duplicate symbols when
	  --enable-timer-progs is active; qtimer symbols *should* be in the
	  qthread library when thats active

2009-01-30 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: move increment tests to
	  time_increments

2009-01-30 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: why is this not __volatile__?

2009-01-29 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/ax_check_16aligned_malloc.m4,
	  configure.in, src/qt_mpool.c: detect and take advantage of OSXs
	  16-byte aligned malloc

2009-01-29 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_gcd.c: oops, forgot the C file

2009-01-29 00:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: use valloc as a last resort for aligned
	  allocations... too bad that memory can never be *truly* freed

2009-01-28 23:54  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/ax_check_page_aligned_malloc.m4,
	  configure.in, include/qt_mpool.h, src/qt_mpool.c,
	  src/qthread.c: handle infinite stack size, and create an aligned
	  qt_mpool (relies on aligned memory allocation, so we check for a
	  few aligned memory functions in autoconf)

2009-01-28 23:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c, test/test3.c: some return-value checking

2009-01-28 23:39  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: better comments for IA32

2009-01-28 15:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qarray.c: whitespace, and testing all major varieties
	  of qarray distribution

2009-01-28 15:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qarray.c: whitespace

2009-01-27 05:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: time_gcd

2009-01-27 04:02  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/qarray.h,
	  src/Makefile.am, src/qarray.c, test/Makefile.am,
	  test/test_qarray.c: qarray, initial implementation (needs
	  testing, timing, refinement, manual migration, and *_LEAST
	  implementation)

2009-01-23 22:59  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS, configure.in: svn2cl update

2009-01-23 22:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_increments.c,
	  test/time_producerconsumer.c: cleaner compiling for timer progs
	  (removed some compiler -Wall warnings)

2009-01-23 22:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qutil_qsort.c: unused variable

2009-01-22 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_swap.c: qtimer fix

2009-01-22 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c, test/time_producerconsumer.c: more
	  friendly defaults for "make check"

2009-01-20 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: fix the const issue
	  with qthread_migrate_to

2009-01-19 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_migrate_to.3,
	  src/qthread.c: document and clean up error handling in
	  qthread_migrate_to

2009-01-19 22:41  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: correct lfqueue node alignment/size issue when
	  using unpooled memory

2009-01-19 22:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qalloc.c: use the (newly standardized) assert magic

2009-01-19 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qthread_asserts.h,
	  include/qthread_innards.h, src/futurelib.c,
	  src/qt_mpool.c, src/qutil.c: moving the assert magic into its own
	  header

2009-01-19 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c,
	  test/Makefile.am, test/test_migrate.c: qthread_migrate_to()

2009-01-19 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/taskimpl.h: does not need to include assert.h

2009-01-19 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* : update ignores for new tests

2009-01-15 21:04  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fixing cross-platform lfqueue issues (mostly
	  fixing data alignment for the ABA counters)

2009-01-15 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: trying some stuff out with volatile

2009-01-14 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: these comments confuse some versions of autoconf

2009-01-13 23:28  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qthread_innards.h, src/futurelib.c,
	  src/qloop.c, src/qthread.c: lock-free thread queueing, based on
	  Maged M. Michael & Michael L. Scott's 1996 algorithm

2009-01-09 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: minor efficiency improvement in a cas loop

2009-01-09 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h: accumulator functions should be for
	  aligned_t and friends

2009-01-07 21:22  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c: less verbosity

2009-01-07 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: just to avoid ambiguity

2009-01-07 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: remove unnecessary variable

2009-01-07 16:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: asserts

2009-01-07 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: asserts

2009-01-07 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_qutil_qsort.c: test both sorts

2009-01-07 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: minor efficiency fix

2009-01-07 05:55  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test_qutil_qsort.c: extra test just for
	  qsort

2009-01-06 06:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: be more helpful in case of trouble

2009-01-06 06:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c: minor formatting and printf typechecking fixes

2009-01-06 03:38  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/qutil.h, src/qutil.c, test/test1.c: This is ugly,
	  but add a qsort for aligned_t datatypes.  We should reduce the
	  amount of code duplicated, but there's a paper deadline :/.

2009-01-05 14:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: unsigned/signed doesnt matter

2009-01-02 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h, include/qthread/qthread.h: better SunPro
	  C++ support (it doesnt understand "__asm__" but DOES understand
	  "asm"). Note that SunPro C understands GCC assembly completely.
	  <sigh>

2008-12-27 03:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix internal incr on 32-bit architectures that
	  dont have 64-bit incr assembly when aligned_t is forced to 64-bits

2008-12-22 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_atomics.m4, configure.in,
	  include/qt_atomics.h, include/qthread/common.h.in,
	  include/qthread/qthread.h, src/qthread.c: fixed icc intrinsic
	  support

2008-12-22 20:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: rely on getrlimit for shepherd0 stack size

2008-12-22 20:08  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix weird handling of stack sizes and limits in
	  the case of QTHREAD_REAL_MCCOY (i.e. the original thread, now
	  qthread)

2008-12-22 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: put the error checking back

2008-12-22 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: skip redundant thread allocation

2008-12-22 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am: fix the packaging

2008-12-22 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: fix architecture detection

2008-12-22 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: support all the other architectures
	  (preliminiary)

2008-12-22 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* : more autotool droppings

2008-12-22 16:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: add integer checking, and fix a typo

2008-12-22 16:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: use a spinlock in the qt_loop_balance rather than
	  FEBs <sigh>

2008-12-17 23:07  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: ensure that qthread_incr operand is
	  unsigned

2008-12-17 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test2.c, test/test3.c: corrected the fprintf arguments

2008-12-17 18:26  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_atomics.m4,
	  configure.in, include/qthread/common.h.in,
	  include/qthread/qthread.h: some compilers support builtin atomic
	  operations

2008-12-12 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: make the id test more resilient to configure
	  options (specifically, --enable-debug)

2008-12-12 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: more early clobbering on ppc (good
	  thing we have plenty of registers!)

2008-12-12 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: the ppc64 mod code is now tested; removed warning

2008-12-12 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* : more autoconf droppings

2008-12-12 20:59  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, test/testdincr.c: fix dincr on ppc64

2008-12-12 08:26  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: rename testq to be more obvious

2008-12-12 08:25  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: get rid of some -Wall warnings

2008-12-12 08:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/futurelib.c, src/qthread.c: move
	  qthread_debug so that it can be and is used by the futurelib stuff
	  too

2008-12-12 07:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S: good reference comments

2008-12-12 06:58  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: use va_arg macro in debugging

2008-12-11 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S: ignore segment registers... seems to cause
	  problems on x86_64, despite their regular use on IA32, and besides,
	  I don't think we have to callee-save them *anyway*

2008-12-11 20:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S, src/osx_compat/context.c,
	  src/osx_compat/taskimpl.h: OSX x86_64 support

2008-12-11 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: another sanity assert

2008-12-08 16:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: back to plain ol inline - per
	  discussion with Brian

2008-12-07 06:45  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c: minor extension

2008-12-07 06:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: QINLINE

2008-12-07 06:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: QINLINE

2008-12-07 06:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.hpp: tidy up a bit

2008-12-07 03:26  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/qthread.hpp: fix silly typo in _const wrappers
	  -This line, and those below, will be ignored-- M    include/qthread/qthread.hpp

2008-12-06 23:44  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/Makefile.am, include/qthread/qthread.h,
	  include/qthread/qthread.hpp: * Add C++ "bindings" for the FEBs.  Just a template wrapper so that
	   we can accept any pointer type that has an underlying type that is
	   the same size as aligned_t.  Also allows qthread_incr() to be
	   called for all supported types, rather than having fincr() and
	  dincr().

2008-12-06 21:34  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/qthread.hpp: checkpoint to switch machines.
	  First take at the shell of a c++ wrapper to the qthreads api

2008-12-05 08:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: oops

2008-12-05 04:39  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: aligned_t requires a compatibility bump

2008-12-04 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_empty.3, man/man3/qthread_feb_status.3,
	  man/man3/qthread_lock.3, man/man3/qthread_readFE.3,
	  man/man3/qthread_readFF.3, man/man3/qthread_writeEF.3,
	  man/man3/qthread_writeF.3: these things all require aligned_t
	  arguments now

2008-12-04 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testqloop.c: correct sizes in allocated memory

2008-12-04 22:45  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c: correct sizes in allocated memory

2008-12-04 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qutil.h: correct noun in comment

2008-12-04 22:34  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qalloc.c: detect math.h

2008-12-04 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: size_t != aligned_t

2008-12-04 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testloop.cpp: fix unused variable warnings

2008-12-04 22:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test2.c: fix unused variable warnings

2008-12-04 22:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testq.c: avoid mktemp warning

2008-12-04 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: size_t != aligned_t

2008-12-04 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h, include/qthread/qthread.h,
	  src/qthread.c, test/test3.c: qthread_writeFE and
	  qthread_writeFE_const require aligned_t arguments

2008-12-04 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h, include/qthread/qthread.h,
	  src/qthread.c: qthread_writeF and qthread_writeF_const require
	  aligned_t arguments

2008-12-04 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h, include/qthread/qthread.h,
	  src/qloop.c, src/qthread.c: qthread_readFE requires aligned_t
	  arguments

2008-12-04 21:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qloop.h, include/qthread/qthread-sst.h,
	  include/qthread/qthread.h, src/qthread.c, src/qutil.c: 
	  qthread_readFF requires aligned_t arguments

2008-12-04 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qutil.h: qutil now works on aligned_t types
	  rather than ints and uints

2008-12-04 21:47  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h, include/qthread/qthread.h,
	  src/qthread.c, src/qutil.c: qthread_feb_status and qthread_empty
	  and qthread_fill all use aligned_t* arguments

2008-12-04 21:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h: qthread_lock and unlock now take
	  aligned_t pointer arguments

2008-12-04 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/loop_iter.hpp,
	  include/qthread/loop_templates.hpp,
	  include/qthread/qthread.h, src/qloop.c, src/qthread.c,
	  src/qutil.c, test/test1.c, test/test3.c,
	  test/testloop.cpp: qthread_lock and unlock now take aligned_t
	  pointer arguments

2008-12-04 21:25  Brian Barrett <bwbarre@sandia.gov>

	* src/qthread.c: Fix race condition in the mpool.  The variable
	  syncmode was being used both to initialize cprops hash table and
	  the mpool.  Unfortunately, the default for multi-threaded codes,
	  COLLECTION_MODE_PLAIN, is 0, which was disabling synchronization in
	  the mpool.  Split the meanings to be more obvious.

2008-12-04 19:57  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/qthread.h: sigh

2008-12-04 18:50  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: obey the config detection of unistd.h

2008-12-04 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: display the aligned_t info

2008-12-04 18:23  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/qthread.h: fix my dumb semicolon placement

2008-12-04 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: remove indent-droppings

2008-12-04 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: typo in the last commit :P

2008-12-04 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/qthread/common.h.in,
	  include/qthread/qthread.h, src/qthread.c: clarity in the
	  aligned_t size/alignment logic... I think

2008-12-04 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: better 64-bit handling on 32-bit
	  sparc, plus minor cleanup to make inlining easier

2008-12-03 23:56  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: upon suggestion of libtoolize...

2008-12-03 19:04  Brian Barrett <bwbarre@sandia.gov>

	* configure.in, include/qthread/common.h.in,
	  include/qthread/qthread.h, src/qthread.c: Change default on 64
	  bit platforms to be an align_t that is 64 bits long and 64 bits
	  aligned.  At the same time, make it a little bit more clear what
	  size things are with the #defines

2008-12-03 18:52  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/qthread.h: add magic to allow qthread_incr to
	  support both 32 and 64 bit math

2008-12-02 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: lower-overhead debugging with a
	  handwritten debug printf (no longer requires fullsize stacks)

2008-12-02 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c: in debug mode, more threads get ids

2008-12-02 20:58  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: allow runtime debug-level control
	  via QTHREAD_DEBUG_LEVEL envariable

2008-11-25 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: shepherd profiling needs to not skip shepherd 0

2008-11-25 03:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/benchmark.c, test/test1.c, test/test2.c,
	  test/test3.c, test/testdincr.c, test/testqloop.c,
	  test/time_increments.c, test/time_producerconsumer.c: sometimes
	  the test harness feeds us garbage arguments... so be tolerant of
	  nonsensical numbers of threads

2008-11-25 03:15  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: use some more generic notation on the
	  sparc ... suspect that dincr wont work on sparc 32 bits because the
	  registers arent big enough

2008-11-25 00:14  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix the asserts to be correct with the new
	  single-threaded shepherd 0

2008-11-24 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: sanity asserts

2008-11-24 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread-sst.h, include/qthread/qthread.h: fix
	  compiling issue (oops)

2008-11-24 04:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/Makefile.am,
	  include/qthread/qthread-sst.h, include/qthread/qthread.h: move
	  the SST code into a separate (optional) header file

2008-11-24 04:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/futurelib.h: tidying

2008-11-24 04:24  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/common.h.in: support QINLINE (optional inlining)

2008-11-24 04:23  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c, src/qthread.c: support QINLINE (optional inlining),
	  and also allow the qthread stack size to be defined via environment
	  variable (currently undocumented)

2008-11-24 04:22  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: rearrange a little for sanity's sake, and also add
	  the ability to disable (non-automatic) inlining for
	  debugging/profiling purposes

2008-11-24 04:20  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/future_join_all.3: fix description, update to current
	  anonymouse qthread/future unification

2008-11-24 04:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qt_mpool.c: fix handling very large memory pool sizes, also
	  beginning support for the QINLINE keyword

2008-11-07 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: oop; missed this in the last commit

2008-11-07 23:25  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, include/Makefile.am, include/qtimer.h,
	  src/qthread.c, src/qtimer/Makefile.am,
	  src/qtimer/qtimer.h: reorganizing a little

2008-11-07 23:04  Kyle Wheeler <kbwheel@sandia.gov>

	* include/Makefile.am, include/qt_mpool.h, src/Makefile.am,
	  src/qt_mpool.c, src/qthread.c: qt_mpool replaces cp_mempool;
	  simpler, and less finicky

2008-11-07 22:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: avoid register re-use in qthread_fincr

2008-11-07 20:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, test/testfincr.c: reversing the
	  return-value of qthread_fincr

2008-11-07 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, man/man3/qthread_incr.3,
	  test/testdincr.c: reversing the return-value of qthread_dincr

2008-11-07 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test_id.c, test/testincr.c: reversing the return-value of
	  qthread_incr

2008-11-07 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: reversing the
	  return-value of qthread_incr

2008-10-09 21:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: slightly cleaner version of the previous fix

2008-10-09 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fixed on MAKECONTEXT_SPLIT systems, I think

2008-10-08 15:17  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: avoid unnecessary malloc call if shepherd_count is 1

2008-09-29 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: another timer loop, just to see if
	  theres a difference

2008-09-29 22:08  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: without pthreads as a config option, with
	  appropriate warnings

2008-09-29 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: basic non-pthreads support... but REALLY basic
	  (still uses mutexes for most stuff)

2008-09-25 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_makecontext.m4,
	  src/osx_compat/386-ucontext.h, src/osx_compat/asm.S,
	  src/osx_compat/context.c,
	  src/osx_compat/power-ucontext.h,
	  src/osx_compat/taskimpl.h: updating to be compatable with OSX
	  10.5.x - based on some changes to libcoroutine here:

	  http://github.com/stevedekorte/io/tree/f8b0893a8317cbefd5cffe1cebe591ad6c12ae89/libs/coroutine/source

2008-09-25 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: since OSX 10.5.x has non-functional swapcontext
	  functions, we have to test whether swapcontext works before
	  deciding whether we need to use the compatability library

2008-09-25 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h: remove an assert warning on osx 10.5

2008-09-23 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: optimize serial execution a little by avoiding
	  unnecessary pthread mutex locking when there's only one shepherd,
	  and check the nshepherds argument

2008-09-23 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: no more implicit pthreads

2008-09-23 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c, test/test2.c, test/test3.c: better interactive
	  fallback

2008-09-19 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* src/osx_compat/asm.S, src/osx_compat/power-ucontext.h: handle
	  floating point registers correctly on ppc

2008-09-19 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testincr.c: fix typo

2008-09-19 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: make qt_loop more efficient, using the incr trick

2008-09-19 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: improve qthread_empty efficiency when me==NULL and
	  make qthread_yield a little NULL-tolerant

2008-09-19 20:05  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_id.3, man/man3/qthread_lock.3,
	  man/man3/qthread_readFE.3, man/man3/qthread_readFF.3,
	  man/man3/qthread_retloc.3, man/man3/qthread_self.3,
	  man/man3/qthread_shep.3, man/man3/qthread_stackleft.3,
	  man/man3/qthread_writeEF.3, man/man3/qthread_writeF.3,
	  man/man3/qthread_yield.3: update documentation for serial
	  qthreads

2008-09-19 01:37  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: comment

2008-09-19 01:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/test1.c, test/test2.c,
	  test/test_id.c, test/testdincr.c, test/testincr.c,
	  test/testloop.cpp: remove pthreads, recognize that qthreads now
	  works in serial (qthread_self() never returns NULL!!!)

2008-09-19 01:21  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: qthreads can now run in SERIAL... removing the
	  pthread requirement comes next?

2008-09-09 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qthread_stackleft.3: fix copy/paste error

2008-09-01 19:57  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_sst.m4: use AS_IF instead of plain ifs

2008-09-01 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* config/ax_create_stdint_h.m4: avoid redundant checks when we know
	  that certain headers dont exist

2008-08-18 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix a typo and a syntax/optimizer
	  problem

2008-08-18 22:30  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: pushing the sparc
	  cas(x) fixes to all the places that its used

2008-08-18 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_increments.c: stupid OoO confusion

2008-08-18 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/time_increments.c: added time_increments

2008-08-13 19:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: make it so you can tailor the test
	  to the hardware

2008-08-13 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: make sure that our timers are reset
	  between runs

2008-08-13 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: that'll shut up the warnings! :)

2008-08-13 15:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/gethrtime.c: typo - multiplying by too big a number
	  when converting to seconds

2008-08-13 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, config/qthread_check_ucstack_ssflags.m4,
	  configure.in, src/qthread.c: detect uc_stack.ss_flags

2008-08-13 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: another formatting fix

2008-08-12 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c, test/time_swap.c: convenient
	  formatting, added parallel producer/consumer loops

2008-08-12 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: remind me of how it *should* be

2008-08-12 17:58  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: gcc on sparc is being idiotic and
	  buggy - work around it and leave a comment about whats going on

2008-08-12 15:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/time_producerconsumer.c: sanity checking

2008-08-12 05:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am: oops, delete CONTEXTLIB from time_swap
	  dependencies

2008-08-12 05:43  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: disabled QTHREAD_WAIT_TIMER_STOP needss second
	  argument

2008-08-11 23:49  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: whitespace fixes according to GNU indent

2008-08-11 23:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: lock profiling, slightly improved shepherd
	  profiling, and some small syntactic sugar improvements fro thread
	  counting

2008-08-11 23:35  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: test comes last, for sanity reasons. sadly, this
	  means the installation info is printed earlier, but ce est la vie

2008-08-11 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* src/futurelib.c: minor speed improvement for futurelibs
	  destination decision; based on qthread core

2008-08-08 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, test/Makefile.am,
	  test/time_producerconsumer.c, test/time_swap.c: time_swap to time
	  the length of swapcontext and time_producerconsumer to time lots of
	  other things that qthreads can do; use --enable-timer-progs to turn
	  them on

2008-07-30 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qloop.c: fixed memory leaks

2008-07-29 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/Makefile.am: avoid manipulating CFLAGS directly

2008-07-29 19:12  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fold fincr

2008-07-24 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: oops; left the stdio.h in there

2008-07-21 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_dincr.3,
	  man/man3/qthread_fincr.3, man/man3/qthread_incr.3: document the
	  new increment functions

2008-07-21 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: comment typo

2008-07-18 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* : 

2008-07-18 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: correcting some weird register re-use
	  issues on ppc with fincr... rearranging inputs and outputs to try
	  and make things sane again

2008-07-18 18:18  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: minor change

2008-07-18 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: asm64 should work form ia32 in fincr

2008-07-18 15:55  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: better fincr comments on amd64

2008-07-18 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: minor fincr logic error on amd64

2008-07-18 15:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: amd64 fincr

2008-07-18 15:37  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: ia64 typo in fincr

2008-07-18 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: ia64 fincr

2008-07-18 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix sparc typos in fincr

2008-07-18 15:16  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, test/Makefile.am,
	  test/testfincr.c: adding qthread_fincr()

2008-07-01 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/Makefile.am, man/man3/qthread_dincr.3: document
	  qthread_dincr

2008-06-30 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* README: help with SST

2008-06-16 18:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: support IA32 PIC code (e.g. MacOS X
	  generates PIC code by default)

2008-06-16 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: added AMD64-specific code, and rewrote
	  the IA32 code so that it works on an Athlon, with lots of
	  explanatory commenting. As a useful side-effect, the IA32 code is
	  now much more elegant (and I understand gcc inlined ASM semantics
	  more than I did before)

2008-06-13 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignore testdincr binary

2008-06-13 20:34  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: minor typo in SPARC type punning

2008-06-13 18:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: IA32 (and maybe AMD64) assembly for
	  dincr rewritten and tested

2008-06-13 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: qutil function args should be declared const

2008-06-13 18:24  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: make configure work properly even when echo doesnt
	  support the -n flag

2008-06-13 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qutil.h: qutil function args should be declared
	  const

2008-06-12 20:49  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: PPC32 now compiles cleanly despite
	  lack of dincr support

2008-06-12 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test/Makefile.am, test/testdincr.c: test the qthread_dincr
	  function

2008-06-12 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: qthread_dincr works on PPC64 now...
	  testing type punning (read: unions)

2008-06-12 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_makecontext.m4, src/osx_compat/asm.S: 64-bit
	  PPC OSX makecontext support!

2008-06-12 16:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test2.c: make error assertion a little more useful

2008-06-12 16:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix the 64-bit test in the incr_mod function on
	  ia64

2008-06-12 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: add qthread_dincr

2008-05-05 23:25  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: remove spurious error when enabling debug trace

2008-05-05 23:23  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c: fix the test (why does this matter?)

2008-04-11 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: better error handling (less reliance on assert)

2008-04-04 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/gethrtime.c, src/qtimer/mach.c: ifdef the config.h so
	  I can use this code for other stuff

2008-04-04 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, test/Makefile.am: this should help build the src
	  before the test when doing `make check` -- as long as check_SUBDIRS
	  is supported by automake (otherwise its just as bad as before)

2008-04-04 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: be more verbose about qtimer type

2008-04-04 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/altix.c: MMTIMER_GETFREQ returns results in Hz, not
	  micro-Hz

2008-04-04 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/gettimeofday.c: ifdef the config.h so I can use this
	  code for other stuff

2008-04-02 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qutil.c: fix the sizeof assertion

2008-03-28 18:37  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qutil_double_max.3, man/man3/qutil_double_min.3,
	  man/man3/qutil_double_mult.3, man/man3/qutil_double_sum.3: minor
	  documentation change

2008-03-28 18:33  Kyle Wheeler <kbwheel@sandia.gov>

	* man/man3/qutil_double_max.3, man/man3/qutil_double_min.3,
	  man/man3/qutil_double_mult.3,
	  man/man3/qutil_double_sum.3, src/qutil.c, test/test1.c: if
	  sizeof(int) < sizeof(aligned_t), avoid errors by aborting -
	  DOCUMENT THIS

2008-03-24 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: another AS_IF fix

2008-03-24 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: AS_IF doesnt quite work as advertized on autoconf
	  2.59

2008-03-22 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_sst.m4, configure.in: trying to avoid excess
	  flags

2008-03-21 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_sst.m4: typo

2008-03-21 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/sst/qthread-sst.c: fix the qthread_fork_to retval

2008-03-19 04:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: fix a bunch of casts for SST (which
	  corrects some compiler errors) and fix a problem with
	  qthread_incr() returning the wrong value

2008-03-19 04:44  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread_innards.h, src/qloop.c: on SST, we have no qlib
	  object, so we need a new way of finding out how many shepherds
	  there are

2008-03-19 04:43  Kyle Wheeler <kbwheel@sandia.gov>

	* config/qthread_check_sst.m4, src/Makefile.am: a bunch of compiler
	  flags are needed to compile a valid library for use with the SST

2008-03-14 19:38  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, src/qthread.c: fixed the WORDSIZE bug
	  by replacing it with sizeof(aligned_t). also moved a few things
	  around in qthread.h to make it a little tidier, and increased the
	  size of qthread_shepherd_id_t (cuz these days you just never know)

2008-03-14 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: theres no reason UINT8_MAX should need to be
	  defined in the code (if the system is wonky, define it in the
	  configure script)

2008-03-14 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: not sure what system this was supposed to fix, but
	  whatever it was, the test should go into the configure script
	  instead of the code

2008-03-14 19:08  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/qthread.c: moved default stack size
	  determination into the configure script, and out of the code

2008-03-14 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: rolled back the AS_CASE constructions. Apparently
	  "too immature to be widely used" means "AS_CASE is not supported by
	  autoconf 2.59"

2008-03-14 00:21  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: fixed --enable-asserts (missing a comma),
	  simplified a few AS_IF instances, and replaced the two case
	  statements with AS_CASE constructions. The documentation for
	  autoconf says the AS_IF and AS_CASE constructions are "too immature
	  to be widely used"... Oh well.

2008-03-14 00:19  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: should really check these things

2008-03-13 23:47  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: 64-bit incr_mod implementation

2008-03-13 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: tidy up the new asm changes a little

2008-03-13 22:00  Brian Barrett <bwbarre@sandia.gov>

	* configure.in: Also need to set alignment to 64 bit when using 64
	  bit align_t

2008-03-13 21:52  Brian Barrett <bwbarre@sandia.gov>

	* configure.in, include/qthread/common.h.in,
	  include/qthread/qthread.h: Differentiate between alignment and
	  size for align_t type

2008-03-13 21:44  Brian Barrett <bwbarre@sandia.gov>

	* acinclude.m4, config/qthread_check_assembly.m4,
	  configure.in, include/qthread/common.h.in,
	  include/qthread/qthread.h, src/qthread.c: * Test to see if compiler can properly do gcc inline assembly * Fix IA-32 increment when optimizer enabled * Add better support for platforms that can have aligned_t be
	    either 32 or 64 bits

2008-03-11 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: intel OSX boxes

2008-03-03 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* autogen.sh: enough of cross-compiling warnings

2008-03-03 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: dependencies

2008-03-03 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: simpler need-qtimer test

2008-03-03 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/Makefile.am, src/qtimer/altix.c: altix qtimer fixes

2008-03-01 19:04  Brian Barrett <bwbarre@sandia.gov>

	* acinclude.m4, config/qthread_check_altix_timer.m4,
	  configure.in, src/qtimer/altix.c: Add initial (untested) support
	  for Altix timers

2008-02-29 01:55  Kyle Wheeler <kbwheel@sandia.gov>

	* AUTHORS, ChangeLog: svn2cl stuff

2008-02-29 01:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test/test1.c, test/testloop.cpp: silence garbage test output

2008-02-29 01:36  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qtimer/Makefile.am: fix error compiling without need of
	  qtimer

2008-02-29 01:13  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: correct incr when using mutexes

2008-02-29 01:12  Kyle Wheeler <kbwheel@sandia.gov>

	* test/testqloop.c: silce the output

2008-02-29 01:11  Kyle Wheeler <kbwheel@sandia.gov>

	* src/Makefile.am: qloop goes with sst too

2008-02-29 01:11  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h: correct incr for Altix

2008-02-29 00:51  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: use AS_IF

2008-02-29 00:46  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, src/Makefile.am: fix qtimer inclusion

2008-02-29 00:28  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: remove format warning on icc

2008-02-29 00:10  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c: fix writeF return value

2008-02-29 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* : better ignores

2008-02-29 00:07  Kyle Wheeler <kbwheel@sandia.gov>

	* src/qthread.c, test/test_id.c: now we're down to just two
	  assembly loops

2008-02-28 21:36  Brian Barrett <bwbarre@sandia.gov>

	* config/qthread_check_attribute_aligned.m4,
	  include/qthread/qthread.h: Hack for working around Sun's
	  attribute aligned issue -- I can't seem to find a way to make a
	  small testcase that shows the problem.  Ugh.

2008-02-28 21:08  Brian Barrett <bwbarre@sandia.gov>

	* src/osx_compat/context.c: Fix compiler warning

2008-02-28 20:57  Brian Barrett <bwbarre@sandia.gov>

	* configure.in, src/qtimer/gethrtime.c,
	  src/qtimer/gettimeofday.c: - Find the right timer - Fix missing header in gettimeofday timer - Implement Solaris gethrtime timer

2008-02-28 20:20  Brian Barrett <bwbarre@sandia.gov>

	* configure.in: Verified we could use AM 1.7.  Added rational for
	  not supporting 1.6.3 (which is what ships with Tiger)

2008-02-28 20:08  Brian Barrett <bwbarre@sandia.gov>

	* acinclude.m4, config/ac_use_system_extensions.m4: Fix
	  compatibility with AC 2.52

2008-02-28 19:58  Brian Barrett <bwbarre@sandia.gov>

	* Makefile.am, acinclude.m4,
	  config/qthread_check_attribute_aligned.m4,
	  config/qthread_check_makecontext.m4,
	  config/qthread_check_sst.m4, configure.in,
	  include/Makefile.am, include/qthread/Makefile.am,
	  man/Makefile.am, man/man3/Makefile.am, src/Makefile.am,
	  src/osx_compat/Makefile.am, src/qalloc.c, src/qloop.c,
	  src/qthread.c, src/qtimer/Makefile.am,
	  src/qtimer/gethrtime.c, src/qtimer/gettimeofday.c,
	  src/qtimer/mach.c, test/Makefile.am: Rather large rewrite of
	  configure and build files to be a little bit more user friendly and
	  fix up a couple of issues that were causing problems on some
	  platforms.  Also splits the big macros into their own .m4 files to
	  make the top-level configure a bit easier to follow.

2008-02-27 23:36  Brian Barrett <bwbarre@sandia.gov>

	* Makefile.am, configure.in: Remove turd files during make clean.
	  Don't need to be quite as aggressive as before, as we don't need
	  quite as pristine a source tree now that "make dist" is used
	  instead of tarring up the source...

2008-02-27 23:31  Brian Barrett <bwbarre@sandia.gov>

	* Makefile.am, configure.in: Ugly hack to pass in --with-cprops to
	  configure during distcheck if it was passed to the initial
	  configure, so that make distcheck will work if cprops isn't in the
	  default search path.

2008-02-27 23:26  Brian Barrett <bwbarre@sandia.gov>

	* config/ac_compile_check_sizeof.m4: Fix typo in their macro (which
	  Kyle had fixed in the old acinclude version)

2008-02-27 23:17  Brian Barrett <bwbarre@sandia.gov>

	* Makefile.am, acinclude.m4,
	  config/ac_compile_check_sizeof.m4,
	  config/ac_prog_cc_c99.m4, config/ax_create_stdint_h.m4,
	  configure.in: Clean up macro usage

2008-02-27 22:51  Brian Barrett <bwbarre@sandia.gov>

	* COPYING, COPYRIGHT, Makefile.am, configure.in: Small AC/AM
	  cleanups

2008-02-27 22:50  Brian Barrett <bwbarre@sandia.gov>

	* include/qthread/Makefile.am: Ooops, actually do need to distclean
	  qthread-int.h

2008-02-27 22:35  Brian Barrett <bwbarre@sandia.gov>

	* configure.in, include/qthread/Makefile.am,
	  include/qthread/common.h.in: Use AC_CONFIG_HEADERS instead of own
	  command to generate common.h

2008-02-27 22:09  Brian Barrett <bwbarre@sandia.gov>

	* configure.in: move build artifacts into subdirectory

2008-02-27 22:04  Brian Barrett <bwbarre@sandia.gov>

	* configure.in: Learn to spell

2008-02-27 22:04  Brian Barrett <bwbarre@sandia.gov>

	* configure.in: Add --with-cprops option to avoid having to set
	  CPPFLAGS and LDFLAGS...

2008-02-26 22:14  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, configure.in, include/Makefile.am,
	  man/Makefile.am: autoupdate on grover brings the code up to spec
	  for autotools 2.59... apparently it doesnt like it when subdirs are
	  subdirs

2008-02-26 22:08  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: AS_HELP_STRING is standard in 2.59, I believe

2008-02-26 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4: source comment

2008-02-26 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, configure.in, include/futurelib_innards.h,
	  include/qthread/Makefile.am, include/qthread_innards.h,
	  man/man3/Makefile.am, src/Makefile.am,
	  src/futurelib_innards.h, src/qthread_innards.h,
	  test/Makefile.am: rearranged and updated everything so that "make
	  distcheck" works perfectly

2008-02-26 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* .cvsignore, Makefile.am, configure.in,
	  include/qthread/Makefile.am, include/qthread/futurelib.h,
	  include/qthread/loop.hpp, include/qthread/loop_iter.hpp,
	  include/qthread/loop_templates.hpp,
	  include/qthread/qalloc.h, include/qthread/qloop.h,
	  include/qthread/qthread.h, include/qthread/qutil.h,
	  qthread/.cvsignore, qthread/Makefile.am,
	  qthread/futurelib.h, qthread/loop.hpp,
	  qthread/loop_iter.hpp, qthread/loop_templates.hpp,
	  qthread/qalloc.h, qthread/qloop.h, qthread/qthread.h,
	  qthread/qutil.h, src/osx_compat/.cvsignore: reorganize the
	  includes a little bit, and move config.h into the include directory

2008-02-26 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, benchmark.c, configure.in, futurelib.c,
	  futurelib_innards.h, main.c, osx_compat/.cvsignore,
	  osx_compat/386-ucontext.h, osx_compat/COPYRIGHT,
	  osx_compat/Makefile.am, osx_compat/asm.S,
	  osx_compat/context.c, osx_compat/power-ucontext.h,
	  osx_compat/taskimpl.h, pthread_comparison_test.c,
	  qalloc.c, qloop.c, qthread.c, qthread_innards.h,
	  qtimer/Makefile.am, qtimer/gettimeofday.c, qtimer/mach.c,
	  qtimer/qtimer.h, qutil.c, src/Makefile.am,
	  src/futurelib.c, src/futurelib_innards.h,
	  src/osx_compat/.cvsignore, src/osx_compat/386-ucontext.h,
	  src/osx_compat/COPYRIGHT, src/osx_compat/Makefile.am,
	  src/osx_compat/asm.S, src/osx_compat/context.c,
	  src/osx_compat/power-ucontext.h,
	  src/osx_compat/taskimpl.h, src/qalloc.c, src/qloop.c,
	  src/qthread.c, src/qthread_innards.h,
	  src/qtimer/Makefile.am, src/qtimer/gettimeofday.c,
	  src/qtimer/mach.c, src/qtimer/qtimer.h, src/qutil.c,
	  src/sst/futurelib-sst.c, src/sst/qthread-sst.c,
	  sst/futurelib-sst.c, sst/qthread-sst.c, test/benchmark.c: 
	  reorganize the source into a src directory to be tidier

2008-02-26 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, configure.in, test.c, test/Makefile.am,
	  test/test1.c, test/test2.c, test/test3.c, test/test_id.c,
	  test/testincr.c, test/testloop.cpp, test/testq.c,
	  test/testqloop.c, test2.c, test3.c, test_id.c,
	  testincr.c, testloop.cpp, testq.c, testqloop.c: moved tests to
	  tidy up source

2008-02-26 17:25  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, configure.in, man/man3/Makefile.am,
	  man/man3/future_acquire.3, man/man3/future_exit.3,
	  man/man3/future_fork.3, man/man3/future_init.3,
	  man/man3/future_join_all.3, man/man3/future_yield.3,
	  man/man3/qalloc_checkpoint.3, man/man3/qalloc_cleanup.3,
	  man/man3/qalloc_dynfree.3, man/man3/qalloc_dynmalloc.3,
	  man/man3/qalloc_free.3, man/man3/qalloc_loadmap.3,
	  man/man3/qalloc_makedynmap.3,
	  man/man3/qalloc_makestatmap.3, man/man3/qalloc_malloc.3,
	  man/man3/qalloc_statfree.3, man/man3/qalloc_statmalloc.3,
	  man/man3/qt_double_max.3, man/man3/qt_double_min.3,
	  man/man3/qt_double_prod.3, man/man3/qt_double_sum.3,
	  man/man3/qt_int_max.3, man/man3/qt_int_min.3,
	  man/man3/qt_int_prod.3, man/man3/qt_int_sum.3,
	  man/man3/qt_loop.3, man/man3/qt_loop_balance.3,
	  man/man3/qt_loop_balance_future.3,
	  man/man3/qt_loop_future.3,
	  man/man3/qt_loopaccum_balance.3,
	  man/man3/qt_loopaccum_balance_future.3,
	  man/man3/qt_uint_max.3, man/man3/qt_uint_min.3,
	  man/man3/qt_uint_prod.3, man/man3/qt_uint_sum.3,
	  man/man3/qthread_empty.3, man/man3/qthread_feb_status.3,
	  man/man3/qthread_fill.3, man/man3/qthread_finalize.3,
	  man/man3/qthread_fork.3, man/man3/qthread_fork_to.3,
	  man/man3/qthread_id.3, man/man3/qthread_incr.3,
	  man/man3/qthread_init.3, man/man3/qthread_lock.3,
	  man/man3/qthread_prepare.3,
	  man/man3/qthread_prepare_detached.3,
	  man/man3/qthread_prepare_for.3,
	  man/man3/qthread_prepare_for_detached.3,
	  man/man3/qthread_readFE.3, man/man3/qthread_readFF.3,
	  man/man3/qthread_retloc.3, man/man3/qthread_schedule.3,
	  man/man3/qthread_schedule_on.3, man/man3/qthread_self.3,
	  man/man3/qthread_shep.3, man/man3/qthread_stackleft.3,
	  man/man3/qthread_unlock.3, man/man3/qthread_writeEF.3,
	  man/man3/qthread_writeEF_const.3,
	  man/man3/qthread_writeF.3,
	  man/man3/qthread_writeF_const.3,
	  man/man3/qthread_yield.3, man/man3/qutil_double_max.3,
	  man/man3/qutil_double_min.3,
	  man/man3/qutil_double_mult.3,
	  man/man3/qutil_double_sum.3, man/man3/qutil_int_max.3,
	  man/man3/qutil_int_min.3, man/man3/qutil_int_mult.3,
	  man/man3/qutil_int_sum.3, man/man3/qutil_mergesort.3,
	  man/man3/qutil_qsort.3, man/man3/qutil_uint_max.3,
	  man/man3/qutil_uint_min.3, man/man3/qutil_uint_mult.3,
	  man/man3/qutil_uint_sum.3, man3/future_acquire.3,
	  man3/future_exit.3, man3/future_fork.3,
	  man3/future_init.3, man3/future_join_all.3,
	  man3/future_yield.3, man3/qalloc_checkpoint.3,
	  man3/qalloc_cleanup.3, man3/qalloc_dynfree.3,
	  man3/qalloc_dynmalloc.3, man3/qalloc_free.3,
	  man3/qalloc_loadmap.3, man3/qalloc_makedynmap.3,
	  man3/qalloc_makestatmap.3, man3/qalloc_malloc.3,
	  man3/qalloc_statfree.3, man3/qalloc_statmalloc.3,
	  man3/qt_double_max.3, man3/qt_double_min.3,
	  man3/qt_double_prod.3, man3/qt_double_sum.3,
	  man3/qt_int_max.3, man3/qt_int_min.3, man3/qt_int_prod.3,
	  man3/qt_int_sum.3, man3/qt_loop.3,
	  man3/qt_loop_balance.3, man3/qt_loop_balance_future.3,
	  man3/qt_loop_future.3, man3/qt_loopaccum_balance.3,
	  man3/qt_loopaccum_balance_future.3, man3/qt_uint_max.3,
	  man3/qt_uint_min.3, man3/qt_uint_prod.3,
	  man3/qt_uint_sum.3, man3/qthread_empty.3,
	  man3/qthread_feb_status.3, man3/qthread_fill.3,
	  man3/qthread_finalize.3, man3/qthread_fork.3,
	  man3/qthread_fork_to.3, man3/qthread_id.3,
	  man3/qthread_incr.3, man3/qthread_init.3,
	  man3/qthread_lock.3, man3/qthread_prepare.3,
	  man3/qthread_prepare_detached.3,
	  man3/qthread_prepare_for.3,
	  man3/qthread_prepare_for_detached.3,
	  man3/qthread_readFE.3, man3/qthread_readFF.3,
	  man3/qthread_retloc.3, man3/qthread_schedule.3,
	  man3/qthread_schedule_on.3, man3/qthread_self.3,
	  man3/qthread_shep.3, man3/qthread_stackleft.3,
	  man3/qthread_unlock.3, man3/qthread_writeEF.3,
	  man3/qthread_writeEF_const.3, man3/qthread_writeF.3,
	  man3/qthread_writeF_const.3, man3/qthread_yield.3,
	  man3/qutil_double_max.3, man3/qutil_double_min.3,
	  man3/qutil_double_mult.3, man3/qutil_double_sum.3,
	  man3/qutil_int_max.3, man3/qutil_int_min.3,
	  man3/qutil_int_mult.3, man3/qutil_int_sum.3,
	  man3/qutil_mergesort.3, man3/qutil_qsort.3,
	  man3/qutil_uint_max.3, man3/qutil_uint_min.3,
	  man3/qutil_uint_mult.3, man3/qutil_uint_sum.3,
	  qthread/Makefile.am: reorganizing man and includes to get the
	  libtool message printed out last

2008-02-26 16:35  Kyle Wheeler <kbwheel@sandia.gov>

	* : ignores

2008-02-26 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: shepherd profiling

2008-02-26 16:19  Kyle Wheeler <kbwheel@sandia.gov>

	* qtimer/Makefile.am, qtimer/gettimeofday.c, qtimer/mach.c,
	  qtimer/qtimer.h: qtimer basics (with mach)

2008-02-21 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: remove a stupid cross-compiling warning

2008-02-21 21:19  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: ac_prog_ranlib is outdated

2008-02-12 19:16  Brian Barrett <bwbarre@sandia.gov>

	* Makefile.in, aclocal.m4, config.guess, config.h.in,
	  config.sub, configure, depcomp, install-sh, ltmain.sh,
	  missing, mkinstalldirs, osx_compat/Makefile.in: Remove autotools
	  artifacts from Subversion

2008-02-12 19:15  Brian Barrett <bwbarre@sandia.gov>

	* autogen.sh: add an autogen.sh script to do the right rebuild mojo

2008-02-07 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: remove a fresh checkout warning

2008-02-07 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.in, aclocal.m4, config.h.in, configure,
	  osx_compat/Makefile.in: autoreconf

2008-02-07 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, test_id.c: new incr test safe for general
	  consumption

2008-02-07 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: avoid warning messages with software
	  increments

2008-02-07 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: get the PPC qthread_incr semantics correct

2008-02-05 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: pre 1.1 commit

2008-02-04 23:47  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.in, config.h.in, configure: autoreconf

2008-02-04 23:28  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: detect weird makecontext problems

2008-02-04 23:27  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_iter.hpp: easier debugging

2008-02-04 23:24  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread_innards.h: more than just counting threads,
	  plus some minor c++ compatibility

2008-02-04 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* qloop.c: c++ compatability

2008-02-04 23:20  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: *** empty log message ***\

2008-02-04 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* TODO: *** empty log message ***\

2008-01-25 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: split makecontext

2008-01-25 19:23  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: minor nit in the qthread_init declaration

2008-01-25 17:32  Brian Barrett <bwbarre@sandia.gov>

	* qthread/qthread.h: update to match proper semantics

2008-01-24 22:39  Brian Barrett <bwbarre@sandia.gov>

	* testincr.c: CHeck for proper return code from qhtread_incr

2008-01-24 22:38  Brian Barrett <bwbarre@sandia.gov>

	* qthread.c, qthread/qthread.h: Atomic functions should have their
	  memory pointer marked as volatile

2008-01-24 22:12  Brian Barrett <bwbarre@sandia.gov>

	* qthread/qthread.h: wrong comments are worse than no comments!

2008-01-24 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: corrected the semantics of the Sparc assembly

2008-01-24 19:39  Brian Barrett <bwbarre@sandia.gov>

	* qthread.c, qthread/qthread.h: * Implement assembly for internal_incr_mod * Fix error in incrementing oldval in the wrong place with
	  internal_incr * Minor optimization found by Kyle

2008-01-24 18:55  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread_innards.h: moved asserts into
	  qthread_innards.h and altered the #defs around the sun assembly

2008-01-24 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: added asserts that can be enabled with
	  --enable-asserts

2008-01-24 16:53  Brian Barrett <bwbarre@sandia.gov>

	* qthread.c, qthread/qthread.h: Implement SPARC assembly.  Due to a
	  bug in the Sun studio compiler, only use if SUN_ASSEMBLY is
	  manually defined

2008-01-24 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* testloop.cpp: a few obscure warnings on Solaris fixed

2008-01-23 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, test_id.c: test_id and autoreconf

2008-01-23 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: formatting

2008-01-23 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in, qthread/qthread.h: added option to force 64-bit
	  alignment

2008-01-22 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* .cvsignore: *** empty log message ***\

2008-01-22 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_iter.hpp: gcc doesnt seem to like that typename
	  keyword... there HAS to be a right way to do this

2008-01-22 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure: autoreconf

2008-01-22 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fixed the stdint.h compatability, added an assert on
	  getcontext(), and made it possible to have an inverse stack (for
	  Solaris 8)

2008-01-22 18:40  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: inverse-stack detection for solaris 8 (needs to be
	  extended to earlier solarises too, but... get me a machine!)

2008-01-22 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: preliminary assembly for sparc

2008-01-22 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_iter.hpp: using typename keyword helps this stuff

2008-01-22 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* testloop.cpp: kind of an important omission, eh?

2008-01-22 18:33  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c: more portable #defs

2008-01-22 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: this inline is an optimization, and can cause
	  trouble if its taken as "static inline", as some compilers like
	  doing

2008-01-22 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: sun fixes

2008-01-22 18:21  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: hypnotoad/Solaris fixes

2008-01-20 23:17  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4: typo?

2008-01-17 07:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test2.c: check return values

2008-01-15 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* configure.in: sun compatability with cprops and sockets

2008-01-15 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c: compatability with sun ... should really move this to
	  configure.in

2008-01-15 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: cleaner compile by undeffing DBprintf

2008-01-15 01:59  Kyle Wheeler <kbwheel@sandia.gov>

	* .cvsignore, Makefile.am, Makefile.in, aclocal.m4,
	  config.h.in, configure, configure.in,
	  osx_compat/.cvsignore, osx_compat/Makefile.in,
	  qthread/.cvsignore, qthread/qthread.h,
	  sst/futurelib-sst.c, sst/qthread-sst.c: merged the sst code, and
	  created common.h to contain crucial configuration info

2008-01-11 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: avoid using base register accidentally

2008-01-11 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: FINALLY found what I think is a portable solution to
	  the stupid r0 problem

2007-12-20 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qt_double_max.3, man3/qt_double_min.3,
	  man3/qt_double_sum.3, man3/qt_int_prod.3,
	  man3/qt_uint_prod.3, man3/qthread_fork.3,
	  man3/qthread_lock.3, man3/qthread_readFE.3,
	  man3/qthread_readFF.3, man3/qthread_schedule.3,
	  man3/qthread_self.3: minor corrections

2007-11-28 01:43  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: Apple fixed their gcc

2007-11-01 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* aclocal.m4: *** empty log message ***\

2007-09-17 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: 1.0

2007-09-17 18:48  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog: *** empty log message ***\

2007-09-17 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.in, aclocal.m4, config.h.in, configure,
	  osx_compat/Makefile.in: older autotools, for compatibility

2007-09-17 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* COPYING, COPYRIGHT: maybe this arrangement is better

2007-09-17 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* osx_compat/COPYRIGHT: for completeness

2007-09-17 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* aclocal.m4: linux

2007-09-17 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: remove some debugging gunk

2007-09-17 18:35  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, config.h.in, configure,
	  configure.in, osx_compat/Makefile.in: conditional compilation of
	  osx_compat

2007-09-17 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* COPYRIGHT, aclocal.m4, config.h.in, qthread.c,
	  qthread/qthread.h: more apple compatability, and added some
	  return errors in qthread_fork* functions

2007-09-17 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* 386-ucontext.h, Makefile.am, Makefile.in, asm.S,
	  configure, configure.in, context.c,
	  osx_compat/386-ucontext.h, osx_compat/Makefile.am,
	  osx_compat/Makefile.in, osx_compat/asm.S,
	  osx_compat/context.c, osx_compat/power-ucontext.h,
	  osx_compat/taskimpl.h, power-ucontext.h, taskimpl.h: 
	  reorganization of osx_compat

2007-09-14 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: better no-gcse test

2007-09-14 20:31  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in: bump the library version for the new
	  error handling, and add the qthread_incr man page

2007-09-14 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: new error handling, plus more compatible with non-gcc
	  compilers (removed __extension__ stuff)

2007-09-14 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h, qthread_innards.h: new error handling

2007-09-14 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qthread_empty.3, man3/qthread_feb_status.3,
	  man3/qthread_fork.3, man3/qthread_id.3,
	  man3/qthread_init.3, man3/qthread_lock.3,
	  man3/qthread_prepare.3, man3/qthread_readFE.3,
	  man3/qthread_readFF.3, man3/qthread_schedule.3,
	  man3/qthread_writeEF.3, man3/qthread_writeF.3: document the new
	  error handling

2007-09-12 15:27  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: standardize lockbin choosing, and remove pointless
	  threading from qthread_empty/fill

2007-09-11 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: fix a bug in the ppc version of qthread_incr,
	  so that it returns the right value (namely, the value before
	  incrementing)

2007-09-11 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: better formatting

2007-09-11 20:40  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: better qthread_incr portability (add x86_64
	  boxes, remove i386s, fix up alternate ia64 cpus)

2007-09-11 20:38  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: portability to x86_64 boxes

2007-09-11 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: oops, minor bug in internal increment on ppc

2007-07-19 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* testincr.c: warning removed

2007-07-19 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* qloop.c: include config.h

2007-07-19 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: Version 0.8 Commit

2007-07-19 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.in, aclocal.m4, config.h.in, configure: updated
	  autotools scripts

2007-07-19 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog: *** empty log message ***\

2007-07-19 20:53  Kyle Wheeler <kbwheel@sandia.gov>

	* qloop.c: those optimizations were both pointless and logically
	  flawed

2007-07-19 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* README: document OSX's broken-ness

2007-07-19 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: put the stupid & back... it needs to be there. turns
	  out, MacOS X's 4.0.1 compiler has an optimization bug in it that
	  can cause it to generate assembly that it cannot compile.

2007-07-19 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* qloop.c: qt_qsort

2007-07-19 16:02  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: this seems to make OSX happier (turning =&r into =r)

2007-07-19 16:01  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil.c: minor formatting

2007-07-19 15:59  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c: reduce stack load

2007-07-19 15:58  Kyle Wheeler <kbwheel@sandia.gov>

	* README: a bit more of a high-level description, in case someone
	  wants one

2007-07-19 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.in, acinclude.m4, aclocal.m4, config.h.in,
	  configure, configure.in: backporting to be compatible with
	  autoconf 2.59

2007-06-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: using enable/disable instead of
	  with/without

2007-06-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/future_init.3: made it reflect the current interface

2007-06-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qloop.c: fixed an off-by-one bug

2007-06-14 23:14  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, configure.in, qthread.c,
	  qthread/qthread.h: consistency in mutex-based incrementing flags

2007-06-14 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qt_loopaccum_balance.3: typos

2007-06-14 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qloop.h: c++ compatability and some utility accumulator
	  functions

2007-06-14 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil.c: include config.h

2007-06-06 20:43  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, man3/qt_double_max.3,
	  man3/qt_double_min.3, man3/qt_double_prod.3,
	  man3/qt_double_sum.3, man3/qt_int_max.3,
	  man3/qt_int_min.3, man3/qt_int_prod.3, man3/qt_int_sum.3,
	  man3/qt_loop.3, man3/qt_loop_balance.3,
	  man3/qt_loop_balance_future.3, man3/qt_loop_future.3,
	  man3/qt_loopaccum_balance.3,
	  man3/qt_loopaccum_balance_future.3, man3/qt_uint_max.3,
	  man3/qt_uint_min.3, man3/qt_uint_prod.3,
	  man3/qt_uint_sum.3, qloop.c, qthread/qloop.h, testqloop.c: added
	  qloop section of library

2007-06-06 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: removed pedantic warnings

2007-06-06 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: no need to allocate stacks and contexts when
	  finalizing, plus add __extension__ to clean up pedantic warnings

2007-06-06 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: minor changes, making a few things simpler and
	  removing a compilation warning

2007-06-06 18:22  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qutil_double_max.3, man3/qutil_double_min.3,
	  man3/qutil_double_mult.3, man3/qutil_double_sum.3: minor typos

2007-06-01 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* benchmark.c: both sorts

2007-05-30 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* benchmark.c: *** empty log message ***\

2007-05-30 15:44  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fixed memory imbalancing by reinstituting locks
	  everywhere and adding creator pointers. added some minor
	  optimizations based on this. in some basic testing, this doesnt
	  appear to add significant amounts of overhead, so... maybe we're
	  getting away with murder here. keep your fingers crossed.

2007-05-30 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: fixed minor syntax errors

2007-05-29 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* benchmark.c: *** empty log message ***\

2007-05-24 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qutil.h, qutil.c: remove extraneous argument from
	  qutil_mergesort

2007-05-24 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, man3/qutil_double_max.3,
	  man3/qutil_double_min.3, man3/qutil_double_mult.3,
	  man3/qutil_double_sum.3, man3/qutil_int_max.3,
	  man3/qutil_int_min.3, man3/qutil_int_mult.3,
	  man3/qutil_int_sum.3, man3/qutil_mergesort.3,
	  man3/qutil_qsort.3, man3/qutil_uint_max.3,
	  man3/qutil_uint_min.3, man3/qutil_uint_mult.3,
	  man3/qutil_uint_sum.3: document qutil

2007-05-24 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, configure.in, qthread.c,
	  qthread/qthread.h: added the ability to do without setrlimit if
	  you want on linux, and the ability to force it to avoid using
	  assembly for fast locks (e.g. if they arent as fast as one would
	  think)

2007-05-16 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: fixed bug in asserts/threadcount

2007-05-16 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c: formatting

2007-05-15 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: minor fix to work with Intels compiler on Itanium, and
	  some formatting

2007-05-14 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog: updated, preparing for 0.8 release

2007-05-14 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: lots of atomic increment-mod portability fixes, and a
	  fix to a bug in fallback mode

2007-05-14 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: attempting to manhandle gcc a little, and
	  worked around a bug in some compilers keyword recognition. also
	  fixed a bug on architectures without atomic assembly support

2007-05-14 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_templates.hpp: switched from future_create to
	  future_fork

2007-05-14 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_innards.h: altered type to support new fast increment-mod
	  feature

2007-05-14 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c: added changes from Vitus, and removed new gcc 4.1
	  warnings

2007-05-14 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* testincr.c: fixed a bug on architectures where I cannot use a
	  lockless increment

2007-05-14 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c, test3.c: removed a warning

2007-05-14 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test2.c: fixed a bug (needed to use aligned_t)

2007-05-14 21:33  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: add #define for Xeons (undetectable any
	  other way), changed how I detect cprops, added a workaround for
	  gccs broken gcse, and incremented the version

2007-05-14 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in: add #define for Xeons (undetectable any other way),
	  and changed how I detect cprops

2007-05-14 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, man3/future_create.3,
	  man3/future_fork.3: correcting the documentation

2007-05-10 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: removing cruft

2007-05-10 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread/qthread.h, qthread_innards.h: made atomic
	  increments and mods faster (in many cases) and more widely used

2007-05-03 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: minor improvements, stolen from Linux, to the atomic
	  increment

2007-05-03 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, NEWS, man3/qthread_incr.3,
	  qthread.c, qthread/qthread.h, testincr.c: added qthread_incr

2007-04-20 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c: better output formatting

2007-04-20 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* testloop.cpp: better output formatting, and fixed the
	  futureinit() call

2007-04-20 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil.c, test.c: qutil_qsort() is now much more scalable (and
	  efficient). I ripped out the Cray partitioner and replaced it with
	  something similar to the standard FastQuickSort algorithm. I fixed
	  a bunch of bugs in it as well. On grover, it now takes only two
	  processors to beat libc qsort().

2007-04-12 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c: the testcase can be smaller

2007-04-12 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qutil.h, qutil.c, test.c: added two different threaded
	  sorts to qutil (merge sucks, btw)

2007-04-12 17:32  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_templates.hpp: added megans comments, and made it
	  not allocate memory unnecessarily

2007-04-12 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: save a qthread_self() call

2007-03-29 18:54  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil.c: oops, wasnt supposed to commit that

2007-03-29 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil.c: fully fleshed out qutil arithmetic functions

2007-03-29 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qutil.h, qutil.c: fully fleshed out qutil arithmetic
	  functions

2007-03-28 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: renaming some things to be a little more
	  understandable, improve lockless modding, remove the future_exit()
	  requirement, fixing future creation, and a few other things

2007-03-28 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: signed aligned numbers, and const readFF src

2007-03-28 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_innards.h: contemplating futher integration

2007-03-28 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib_innards.h: added a scheduler to each shepherd (for
	  optimization purposes) and corrected some types

2007-03-28 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qutil.h, qutil.c, test.c: drastic changes to qutil
	  implementations, added several functions, removed the stupid
	  loop-runner, now uses futures

2007-03-28 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c, qthread/futurelib.h: optimized, integrated more with
	  qthreads, and removed some idiotic ideas that Id added to it before

2007-03-23 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: no need for the addrstat2 structure anymore

2007-03-23 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: typo

2007-03-23 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in: changed qthread_fill/empty, so must
	  increment the library version number

2007-03-23 20:47  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: formalized options, improved FEB parallelization
	  somewhat, removed qthread_fill/empty count argument

2007-03-23 20:44  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, configure.in: options galore!

2007-03-23 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: allow readFFing and such with NULL target values
	  (avoids a memcpy), also change the empty/fill semantics in
	  preparation for making them faster & more parallel

2007-03-23 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qthread_empty.3, qthread/qthread.h: new qthread_empty/fill
	  interface

2007-03-23 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qutil.h: better comments

2007-03-23 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c: fuller test of qutil

2007-03-23 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil.c: formatting, and updating

2007-03-21 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: remove irrelevant cast

2007-03-21 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_innards.h: typo

2007-03-21 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib_innards.h: added a prototype

2007-03-21 19:23  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: bigger default FEB hashtable

2007-03-21 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, qthread.c, qthread/qthread.h: support full-size
	  stacks, and dont worry about preallocating too many of them

2007-03-19 19:18  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: made freeing threads a little faster in the common
	  (qthread) case and a little slower (but without a memory leak) in
	  the non-qthread case

2007-03-14 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: more accurate cleanup info and formatting niceties

2007-03-13 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: thread counting

2007-03-12 21:58  Kyle Wheeler <kbwheel@sandia.gov>

	* NEWS: 0.6

2007-03-12 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib_innards.h, qthread_innards.h: oops

2007-03-10 00:38  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: no locks needed in blocking_vp_incr when running on
	  an SMP

2007-03-10 00:10  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in: note binary incompatibility

2007-03-10 00:10  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c, qthread.c: Extensive use of pthread_getspecific()
	  and related thread-local memory pieces.  In theory, this allows us
	  to be a bit faster on very large systems with intelligently
	  implemented pthreads libraries (in practice on smaller systems, it
	  doesn't hurt). Also removed a bunch of locks from thread spawning,
	  namely deciding which shepherd to send it to and generating a
	  thread ID. Now (unless QTHREAD_NONLAZY_THREADIDS is defined) thread
	  ID's are only generated if you ASK for them (via qthread_id()), and
	  which shepherd to send a thread to is done via a per-shepherd
	  round-robin (thus, no locks). This shouldn't result in imbalanced
	  code for sufficiently large numbers of threads.

2007-03-10 00:06  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: trying to be consistent with types

2007-03-09 00:20  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c, qthread.c: killed the big central hashtable in
	  futurelib by adding a status bit to every qthread_t

2007-03-09 00:20  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: const makes the world happier

2007-03-09 00:19  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_templates.hpp: formatting

2007-03-07 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: basic lock parallelism (could expand to using the same
	  for FEBs, but havent yet)

2007-02-28 18:24  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: better assert handling

2007-02-27 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c: pointless removal of space

2007-02-27 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: cleaner asserts

2007-02-21 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* README: futurelib

2007-01-25 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: return values on sub functions

2007-01-08 17:46  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, Makefile.am, Makefile.in, NEWS, configure,
	  configure.in: 0.5

2007-01-05 00:37  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, futurelib.c,
	  man3/qthread_fork.3, man3/qthread_fork_detach.3,
	  man3/qthread_fork_to_detach.3, man3/qthread_id.3,
	  man3/qthread_join.3, man3/qthread_prepare.3,
	  man3/qthread_retloc.3, man3/qthread_schedule.3,
	  man3/qthread_shep.3, man3/qthread_stackleft.3,
	  man3/qthread_yield.3, qthread.c, qthread/futurelib.h,
	  qthread/loop_iter.hpp, qthread/loop_templates.hpp,
	  qthread/qthread.h, qutil.c, test2.c, test3.c,
	  testloop.cpp: changed the qthread_fork semantics to make qthreads
	  anonymous

2006-12-19 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/qthread.h: name change

2006-12-13 15:15  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* qthread/loop_templates.hpp: *** empty log message ***\

2006-12-11 19:33  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* qthread/loop.hpp, qthread/loop_iter.hpp,
	  qthread/loop_templates.hpp, testloop.cpp: *** empty log message
	  ***\

2006-12-11 15:27  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* testloop.cpp: *** empty log message ***\

2006-12-07 23:39  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* qthread/loop_iter.hpp, qthread/loop_templates.hpp,
	  testloop.cpp: *** empty log message ***\

2006-12-07 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, qthread/qutil.h, qutil.c,
	  test.c: added qutil functions... they are not yet documented,
	  because I suspect them of subtle bugs when adding up large arrays

2006-12-06 21:21  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* qthread/loop_iter.hpp: *** empty log message ***\

2006-12-06 21:20  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* qthread/loop_iter.hpp: *** empty log message ***\

2006-12-06 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fixed a race condition in the FEB handling that could
	  lead to deadlock, and added some notation to make debugging future
	  deadlocks easier

2006-12-05 16:59  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_templates.hpp, testloop.cpp: changed to behaviors
	  rather than types

2006-12-01 23:30  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* qthread/loop_iter.hpp, qthread/loop_templates.hpp,
	  testloop.cpp: *** empty log message ***\

2006-12-01 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qthread_id.3: formatting

2006-12-01 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c, man3/future_acquire.3, man3/future_create.3,
	  man3/future_exit.3, man3/future_init.3,
	  man3/future_join_all.3, man3/future_yeild.3,
	  man3/future_yield.3, qthread/futurelib.h,
	  qthread/loop_templates.hpp: The word "yield" was misspelled
	  "yeild".

2006-11-30 21:34  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* man3/future_acquire.3, man3/future_create.3,
	  man3/future_exit.3, man3/future_init.3,
	  man3/future_join_all.3, man3/future_yeild.3: *** empty log
	  message ***\

2006-11-29 20:16  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, man3/qthread_stackleft.3,
	  qthread.c, qthread/qthread.h, test2.c: added qthread_stackleft()

2006-11-29 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: PGI wants this to be cast

2006-11-29 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* testloop.cpp: Attempting to solve an intractable problem. The
	  deal is that we want to make this template only accept array-ish
	  types (i.e. objects that have operator[] defined), but have no real
	  way of doing that in a cross-compiler compatable way. Suggestions
	  are very welcome.

2006-11-29 00:02  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread/loop_templates.hpp: when installed, it needs to be able
	  to find the loop_iter.hpp file

2006-11-29 00:02  Kyle Wheeler <kbwheel@sandia.gov>

	* README: note libtool fubar-ness

2006-11-28 23:46  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, loop.hpp, loop_iter.hpp,
	  loop_templates.hpp, qthread/.cvsignore,
	  qthread/futurelib.h, qthread/loop.hpp,
	  qthread/loop_iter.hpp, qthread/loop_templates.hpp: moved .hpp
	  files as well

2006-11-28 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* loop_templates.hpp, testloop.cpp: new changes

2006-11-28 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, configure, configure.in,
	  futurelib.c, futurelib.h, main.c,
	  pthread_comparison_test.c, qalloc.c, qalloc.h, qthread.c,
	  qthread.h, qthread/futurelib.h, qthread/qalloc.h,
	  qthread/qthread.h, test.c, test2.c, test3.c,
	  testloop.cpp, testq.c: rearranged, tidied

2006-11-28 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.h: make it work with the "standard" install

2006-11-28 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib.c: removed pointer casting warnings

2006-11-28 18:48  mlvance <mlvance@9dbd018f-d1da-d342-4c11-58c73dfe904b>

	* Makefile.am, futurelib.c, futurelib.h, loop.hpp,
	  loop_iter.hpp, loop_templates.hpp, testloop.cpp: *** empty log
	  message ***\

2006-11-22 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.in, configure, configure.in: version bump

2006-11-22 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, NEWS: release

2006-11-22 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.h: match the manpages

2006-11-22 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am: forgot qalloc

2006-11-22 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qalloc_checkpoint.3, man3/qalloc_cleanup.3,
	  man3/qalloc_dynfree.3, man3/qalloc_dynmalloc.3,
	  man3/qalloc_free.3, man3/qalloc_loadmap.3,
	  man3/qalloc_makedynmap.3, man3/qalloc_makestatmap.3,
	  man3/qalloc_malloc.3, man3/qalloc_statfree.3,
	  man3/qalloc_statmalloc.3, man3/qthread_empty.3,
	  man3/qthread_feb_status.3, man3/qthread_finalize.3,
	  man3/qthread_fork.3, man3/qthread_id.3,
	  man3/qthread_init.3, man3/qthread_join.3,
	  man3/qthread_lock.3, man3/qthread_prepare.3,
	  man3/qthread_readFE.3, man3/qthread_readFF.3,
	  man3/qthread_schedule.3, man3/qthread_self.3,
	  man3/qthread_shep.3, man3/qthread_writeEF.3,
	  man3/qthread_writeF.3, man3/qthread_yield.3: forgot qalloc,
	  changed the formatting slightly, to be more useful with apropos and
	  other such tools

2006-11-21 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: disclaimer

2006-11-21 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* man3/qthread_shep.3: NO_SHEPHERD documentation

2006-11-21 21:59  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: wrap WORDSIZE in an ifndef

2006-11-21 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, man3/qthread_empty.3,
	  man3/qthread_feb_status.3, man3/qthread_fill.3,
	  man3/qthread_finalize.3, man3/qthread_fork.3,
	  man3/qthread_fork_detach.3, man3/qthread_fork_to.3,
	  man3/qthread_fork_to_detach.3, man3/qthread_id.3,
	  man3/qthread_init.3, man3/qthread_join.3,
	  man3/qthread_lock.3, man3/qthread_prepare.3,
	  man3/qthread_prepare_detached.3,
	  man3/qthread_prepare_for.3,
	  man3/qthread_prepare_for_detached.3,
	  man3/qthread_readFE.3, man3/qthread_readFF.3,
	  man3/qthread_schedule.3, man3/qthread_schedule_on.3,
	  man3/qthread_self.3, man3/qthread_shep.3,
	  man3/qthread_unlock.3, man3/qthread_writeEF.3,
	  man3/qthread_writeEF_const.3, man3/qthread_writeF.3,
	  man3/qthread_writeF_const.3, man3/qthread_yield.3: added man
	  pages

2006-11-21 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c, test2.c, test3.c: use the new qthread_f prototype

2006-11-21 20:03  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: removed the arg abstraction, make it
	  actually an arg (for speed purposes)

2006-11-21 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: added qthread_feb_status(void*)

2006-11-17 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog: release

2006-11-17 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: make NO_SHEPHERD available to the user

2006-11-17 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: more formatting, corrected qthread_id()

2006-11-17 17:51  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: formatting

2006-11-17 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fixed more memory pooling issues, and added a pretty
	  sizeable speedup by avoiding mutexes in cases where qthread_fork()
	  is called from a qthread (i.e. in MTGL code, 99% of the time)

2006-11-16 22:35  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog: release

2006-11-16 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, test.c, test2.c, test3.c,
	  testq.c: implemented "make check"

2006-11-16 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c: fixed an idiotic locking error in dynmalloc() (note to
	  self: theres only one bitmap, not one per stream)

2006-11-16 18:54  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, configure, configure.in: bumped the
	  version to be more release-oriented ;)

2006-11-16 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: created the prepare() and run() functions
	  for Megan

2006-11-16 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* ChangeLog, Makefile.in, aclocal.m4, config.h.in,
	  configure, qthread.c: some speed improvements, decoupled asserts
	  and debugging

2006-11-15 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: removed extraneous arguments to atomic functions

2006-11-15 23:14  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: removed extraneous memory references in other queue
	  operations

2006-11-15 23:04  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: removed extraneous memory references in nonblocking dq

2006-11-15 22:55  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fixing a major problem in unlocking things that were
	  never locked in the first place (would lock the hashtable and never
	  unlock it)

2006-11-15 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: speeding up all the locks

2006-11-13 19:03  Kyle Wheeler <kbwheel@sandia.gov>

	* README: PGI comments

2006-11-13 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c, qthread.c: gcc -pedantic warnings eliminated for c99

2006-11-13 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: corrected qthread_readFF and qthread_readFE

2006-11-13 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: added qthread_writeF()

2006-11-13 17:47  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: tidy up aligning

2006-11-07 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: oops, Im an idiot

2006-11-07 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: a correction for the end of the qthread_wrapper

2006-11-07 17:48  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: more memory efficiency for delayed joins (does this
	  actually affect many things? I doubt it, but you never know, and it
	  doesnt hurt anything)

2006-11-07 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fix pgCC compile errors (one warning remains, because
	  C++ structs are really classes)

2006-11-07 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in: this api is definitely binary
	  incompatible with the previous

2006-11-07 00:02  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: made many things const, to help with optimization.
	  also changed the locking "sub" helpers to be detached (as they
	  should be)

2006-11-07 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: made many things const to help with optimization

2006-11-06 23:16  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: added qthread_shep() to find out my current
	  shepherd id

2006-11-06 23:01  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: more helpful comments, and moved WORDSIZE
	  to the .h file

2006-11-06 22:55  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: added the ability to proxy FEB locking
	  commands

2006-11-06 22:18  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: corrected the comments

2006-11-06 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, config.h.in, configure,
	  configure.in, qthread.c, qthread.h, test3.c: 64-bit safe, works
	  with new FEB locking semantics

2006-11-06 18:34  Kyle Wheeler <kbwheel@sandia.gov>

	* test.c, test3.c: because qthread_lock and _unlock now function,
	  now I can use qthread_join() directly, and avoid nonsense that I
	  had previously had to go through to wait for things to finish.

2006-11-06 18:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: qthread_lock and _unlock now will function
	  correctly if passed a NULL thread

2006-11-06 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: correct cprops url

2006-11-06 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, aclocal.m4, config.h.in,
	  configure: updates from the new acinclude and configure.in

2006-11-06 17:09  Kyle Wheeler <kbwheel@sandia.gov>

	* acinclude.m4, configure.in: need stdint... would like to have
	  inttypes, but...

2006-11-06 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fixed struct rlimit on non-gcc compilers

2006-11-06 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* README: PGI compilation notes

2006-11-06 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c, qalloc.h: PGI compilation fixes (i.e. portability) and
	  made it usable by C++ applications

2006-11-06 16:20  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: better descriptions

2006-11-06 16:17  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: pooling is fixed again. realized that addrres's were
	  being fed to other thread's pools, which will obviously cause
	  problems in unsynch'd pools. However, what this does is puts memory
	  back in a pool that it did not come from. This *shouldn't* be a
	  problem, because the size is right, but I mention it because you
	  never know.

2006-11-04 00:07  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: spacing

2006-11-04 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: pooling is broken again... not sure why. trimmed the
	  critical section in FEB table removal (unnecessary, but then, why
	  not?)

2006-11-03 22:17  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: dont have private int file yet

2006-11-03 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: correct semantics

2006-11-03 22:15  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: play nicely with C++

2006-11-03 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: comments, many compilation fixes for non-gcc compilers
	  (not all finished), and some semantic fixes for the readFE/readFF
	  functions

2006-11-03 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: explain double-casting

2006-11-03 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test2.c: none of that memwatch stuff

2006-11-03 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in: removing CVS files is a little much

2006-11-03 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.h: qthread_self support

2006-11-03 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: qthread_self support (theres got to be a faster way)

2006-11-01 20:19  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c: better compatability and warning messages

2006-11-01 00:13  Kyle Wheeler <kbwheel@sandia.gov>

	* 386-ucontext.h, COPYRIGHT, Makefile.am, Makefile.in,
	  aclocal.m4, asm.S, config.h.in, configure, configure.in,
	  context.c, mkinstalldirs, power-ucontext.h, taskimpl.h: it now
	  works on OSX as well as linux and solaris -- pulled in parts from
	  libtask (by Russ Cox)

2006-11-01 00:12  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: works with the portable makecontext stuff, also
	  cleaned up the code some

2006-10-31 19:40  Richard Murphy <rcmurph@sandia.gov>

	* AUTHORS: updated names/affiliations

2006-10-31 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: no, on some architectures (dunno which ones) this
	  getcontext is required (it is used by most other similar coroutine
	  libraries)

2006-10-31 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* README: accuracy and completeness

2006-10-31 17:27  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c: folding markers

2006-10-31 17:27  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.h: comments

2006-10-30 23:14  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: did not need the extraneous getcontext

2006-10-30 23:06  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: ooops, left debugging #include in there

2006-10-30 20:17  Kyle Wheeler <kbwheel@sandia.gov>

	* testq.c: dynmap

2006-10-30 20:17  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: per-pthread memory pooling eliminates a bunch of
	  unnecessary locking (some still needed)

2006-10-30 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: pooling stacks and contexts now. also assigning
	  shepherd ID much earlier (preparing for per-shepherd pools)

2006-10-26 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, test2.c: the pooling seems a bit better now...

2006-10-26 14:17  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c, qalloc.h: added the dynamically-sized stuff

2006-10-26 14:16  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile.am, Makefile.in, acinclude.m4, aclocal.m4,
	  config.h.in, configure, configure.in: added qalloc

2006-10-26 14:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test3.c: test detached threads

2006-10-26 14:14  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: Added detached threads (i.e. threads that
	  clean up after themselves when they exit), and made it possible to
	  toggle mempooling on and off (currently, mempools seem to be broken
	  when compiled for 64-bit architectures).

2006-10-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: minor touches

2006-10-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qalloc.c, qalloc.h, testq.c: not tied to the qthreads library
	  yet, but interesting and useful

2006-10-17 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* test3.c: *** empty log message ***\

2006-10-17 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure.in: minor cleanup for packaging

2006-10-17 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, configure.in, qthread.c,
	  qthread.h: cleanup for packaging

2006-10-17 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* test3.c: FEB example

2006-10-17 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: oops - extraneous debugging code

2006-10-17 17:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: full FEB support is now functionally
	  complete. also, unlocking unlocked memory wont cause the program to
	  abort anymore.

2006-10-16 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in: *** empty log message ***\

2006-10-16 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: beginning of full FEB support

2006-10-11 23:06  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, configure.in, qthread.c,
	  qthread.h, test2.c: minor fixes, accessor functions

2006-10-11 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: moved internal functions out of the public
	  header file, did a little reformatting

2006-10-11 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* README: a little quick info

2006-10-11 16:46  Kyle Wheeler <kbwheel@sandia.gov>

	* configure, configure.in: better error messages

2006-10-11 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, configure.in: OSX does not have
	  get/set/swapcontext, so should detect that and complain bitterly

2006-10-11 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* COPYING, INSTALL, config.guess, config.sub, depcomp,
	  install-sh, ltmain.sh, missing: all the automake files

2006-10-11 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* config.h.in, configure, configure.in, qthread.c: better
	  autoconfing

2006-10-11 16:13  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: fixed preproc warning messages

2006-10-11 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, test2.c: some compiler warnings and other tidying

2006-10-11 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h, test2.c: fixed the giant stack size!

2006-10-10 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c: excise shepstat

2006-10-10 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* AUTHORS, ChangeLog, Makefile, Makefile.am, Makefile.in,
	  NEWS, README, aclocal.m4, config.h.in, configure,
	  configure.in, pthread_comparison_test.c, qthread.c,
	  test.c, test2.c: autoconf/automake

2006-10-10 17:27  Kyle Wheeler <kbwheel@sandia.gov>

	* redblack.c, redblack.h: using cprops now

2006-10-10 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: minor tidying

2006-10-10 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: removed the FEB race condition, and shrunk
	  the memory requirements

2006-10-10 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: memory pooling

2006-10-06 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* Makefile, qthread.c, qthread.h, test.c: why does test.c not work?

2006-10-05 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread.c, qthread.h: fixed qthread_join, added comments,
	  folding, and made the qthread_debug function local

2006-10-04 19:13  Richard Murphy <rcmurph@sandia.gov>

	* qthread.c, qthread.h: working version

2006-08-24 20:48  Richard Murphy <rcmurph@sandia.gov>

	* Makefile, main.c, qthread.c, qthread.h: runs correctly on solaris
	  with solaris compilers

2006-08-02 18:07  Richard Murphy <rcmurph@sandia.gov>

	* Makefile, main.c, qthread.c, qthread.h: this actually works

2006-08-02 15:09  Richard Murphy <rcmurph@sandia.gov>

	* Makefile, main.c, qthread.c, qthread.h: updated thread library -
	  nearly functional

2006-06-28 23:32  Richard Murphy <rcmurph@sandia.gov>

	* main.c, qthread.c: This commit was generated by cvs2svn to
	  compensate for changes in r8, which included commits to RCS files
	  with non-trunk default branches.

2006-06-28 23:16  Richard Murphy <rcmurph@sandia.gov>

	* qthread.h: This commit was generated by cvs2svn to compensate for
	  changes in r6, which included commits to RCS files with non-trunk
	  default branches.

2006-06-28 19:22  Richard Murphy <rcmurph@sandia.gov>

	* Makefile: This commit was generated by cvs2svn to compensate for
	  changes in r4, which included commits to RCS files with non-trunk
	  default branches.

2006-06-22 19:15  Richard Murphy <rcmurph@sandia.gov>

	* redblack.c, redblack.h: This commit was generated by cvs2svn to
	  compensate for changes in r2, which included commits to RCS files
	  with non-trunk default branches.

2006-06-22  (no author)

	* New repository initialized by cvs2svn.  git-svn-id: https://qthreads.googlecode.com/svn/trunk@1
	  9dbd018f-d1da-d342-4c11-58c73dfe904b

