feature request: A more robust module system

Currently the only way we have to reference another module outside of the
current file is a 'use' statement. There are a few problems with this. One of
the primary issues is shown in this test. We 'use' a module that defines one
symbol (bar) inside of the procedure test. After this point, the formal, bar,
will be shadowed by Foo.bar.

A method of allowing other modules to be used with out dumping a very large
number of symbols into the local context should be provided. In addition a
method to control which symbols are imported and exported is also needed.

Some good reading material:

Python import/module system, much of this is very specific to how python works
and can be skipped:
https://docs.python.org/3/reference/import.html

Go packages spec:
http://golang.org/ref/spec#Packages

Upcoming C++ modules:
http://clang.llvm.org/docs/Modules.html#introduction

Rust module system:
http://static.rust-lang.org/doc/master/rust.html#modules
