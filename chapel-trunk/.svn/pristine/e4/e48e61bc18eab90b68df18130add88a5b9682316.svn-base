#!/usr/bin/env python

#
# Find the timed regions of kernels 2-4.
#
# ASSUMPTIONS:
# - Kernels are in separate functions as named below
#   - declarations are formatted 'proc <kernel>' (no line break)
# - PRINT_TIMING_STATISTICS guards timing calls
#   = guards are formatted 'if PRINT_TIMING_STATISTICS' (no parens)
# - Only a single start/stop timing pair per kernel
#

import sys

kernels=['largest_edges',                      # kernel 2
         'rooted_heavy_subgraphs',             # kernel 3
         'approximate_betweenness_centrality'] # kernel 4

k = 0
knum = -1

timerstr = 'PRINT_TIMING_STATISTICS'
sfound = -1

f=open('../../../release/examples/benchmarks/ssca2/SSCA2_Modules/SSCA2_kernels.chpl', 'r')
lines = f.readlines()
f.close()

f=open('SSCA2_kernels.chpl', 'w')
f.write('//\n')
f.write('// Auto-generated: SSCA2 kernels 2-4 with communication diagnostics\n')
f.write('//\n')

for l in lines:

    if knum == -1:
        # check to see which kernel we are in
        p=l.find('proc ')
        if k < 3 and p >= 0:
            if l[p+5:].strip().find(kernels[k])==0:
                k += 1
                knum = k+1
                sfound = 0
    else:
        if sfound == 0:
            # look for start
            s=l.find('if ')
            if s >= 0:
                if l[s+3:].strip().find(timerstr)==0:
                    f.write('resetCommDiagnostics();\n')
                    f.write('startCommDiagnostics();\n')
                    sfound = 1
        elif sfound == 1:
            # look for stop
            s=l.find('if ')
            if s >= 0:
                if l[s+3:].strip().find(timerstr)==0:
                    f.write('stopCommDiagnostics();\n')
                    f.write('writeln(\"Kernel '+str(knum)+': \", getCommDiagnostics());\n')
                    sfound = -1
                    knum = -1

    # write out the current line
    f.write(l)

f.close()
