/* fft.chpl:1 */
void __init_fft(void) {
  chpl_bool T1;
  int64_t T5;
  chpl_bool T2;
  chpl_bool T3;
  int64_t T4;
  _string T6;
  int64_t T7;
  int64_t T8;
  int64_t T9;
  _real64 T14;
  chpl_bool T10;
  chpl_bool T11;
  _real64 T12;
  _real64 T13;
  _string T15;
  _real64 T16;
  _real64 T19;
  chpl_bool T17;
  chpl_bool T18;
  _string T20;
  _real64 T21;
  chpl_bool T24;
  chpl_bool T22;
  chpl_bool T23;
  _string T25;
  chpl_bool T26;
  int64_t T32;
  chpl_bool T27;
  chpl_bool T28;
  int64_t T30;
  int64_t T29;
  int64_t T31;
  _string T33;
  int64_t T34;
  chpl_bool T37;
  chpl_bool T35;
  chpl_bool T36;
  _string T38;
  chpl_bool T39;
  chpl_bool T42;
  chpl_bool T40;
  chpl_bool T41;
  _string T43;
  chpl_bool T44;
  chpl_bool T47;
  chpl_bool T45;
  chpl_bool T46;
  _string T48;
  chpl_bool T49;
  T1 = (!__run_fft_firsttime26);
  if (T1) {
    goto _end___init_fft;
  }
  __run_fft_firsttime26 = false;
  if (__run_BitOps_firsttime19) {
    __init_BitOps();
  }
  __run_BitOps_firsttime19 = false;
  if (__run_Random_firsttime18) {
    __init_Random(1, "test/release/examples/hpcc/fft.chpl");
  }
  __run_Random_firsttime18 = false;
  if (__run_Time_firsttime17) {
    __init_Time();
  }
  __run_Time_firsttime17 = false;
  if (__run_HPCCProblemSize_firsttime25) {
    __init_HPCCProblemSize();
  }
  __run_HPCCProblemSize_firsttime25 = false;
  T2 = _config_has_value("n", "fft");
  T3 = (!T2);
  if (T3) {
    T4 = computeProblemSize(2, true);
    T5 = T4;
  } else {
    T6 = _config_get_value("n", "fft");
    T7 = _string_to_int64_t(T6, 0, "<command line setting of 'n'>");
    T5 = T7;
  }
  n = T5;
  T8 = ((int64_t)(2));
  T9 = pow(T8, n);
  m = T9;
  T10 = _config_has_value("epsilon", "fft");
  T11 = (!T10);
  if (T11) {
    T12 = (-51.0);
    T13 = pow(2.0, T12);
    T14 = T13;
  } else {
    T15 = _config_get_value("epsilon", "fft");
    T16 = _string_to_real64(T15, 0, "<command line setting of 'epsilon'>");
    T14 = T16;
  }
  epsilon = T14;
  T17 = _config_has_value("threshold", "fft");
  T18 = (!T17);
  if (T18) {
    T19 = 16.0;
  } else {
    T20 = _config_get_value("threshold", "fft");
    T21 = _string_to_real64(T20, 0, "<command line setting of 'threshold'>");
    T19 = T21;
  }
  threshold = T19;
  T22 = _config_has_value("useRandomSeed", "fft");
  T23 = (!T22);
  if (T23) {
    T24 = true;
  } else {
    T25 = _config_get_value("useRandomSeed", "fft");
    T26 = _string_to_chpl_bool(T25, 0, "<command line setting of 'useRandomSeed'>");
    T24 = T26;
  }
  useRandomSeed = T24;
  T27 = _config_has_value("seed", "fft");
  T28 = (!T27);
  if (T28) {
    if (useRandomSeed) {
      T29 = clockMS(SeedGenerator, 19, "test/release/examples/hpcc/fft.chpl");
      T30 = T29;
    } else {
      T31 = ((int64_t)(314159265));
      T30 = T31;
    }
    T32 = T30;
  } else {
    T33 = _config_get_value("seed", "fft");
    T34 = _string_to_int64_t(T33, 0, "<command line setting of 'seed'>");
    T32 = T34;
  }
  seed = T32;
  T35 = _config_has_value("printParams", "fft");
  T36 = (!T35);
  if (T36) {
    T37 = true;
  } else {
    T38 = _config_get_value("printParams", "fft");
    T39 = _string_to_chpl_bool(T38, 0, "<command line setting of 'printParams'>");
    T37 = T39;
  }
  printParams = T37;
  T40 = _config_has_value("printArrays", "fft");
  T41 = (!T40);
  if (T41) {
    T42 = false;
  } else {
    T43 = _config_get_value("printArrays", "fft");
    T44 = _string_to_chpl_bool(T43, 0, "<command line setting of 'printArrays'>");
    T42 = T44;
  }
  printArrays = T42;
  T45 = _config_has_value("printStats", "fft");
  T46 = (!T45);
  if (T46) {
    T47 = true;
  } else {
    T48 = _config_get_value("printStats", "fft");
    T49 = _string_to_chpl_bool(T48, 0, "<command line setting of 'printStats'>");
    T47 = T49;
  }
  printStats = T47;
  _end___init_fft:;
  return;
}

/* fft.chpl:26 */
void _chpl_main(void) {
  _EndCount T2 = NULL;
  _EndCount T1 = NULL;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T6;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T5;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T3;
  SingleLocaleArithmeticDomain_1_int64_t_0 T4 = NULL;
  range_int64_t_bounded_0 T11;
  int64_t T7;
  int64_t T8;
  range_int64_t_bounded_0 T10;
  int64_t T9;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T12;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T15;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T13;
  __ArrayTypeInfo_709668 T14;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T16;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T20;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T19;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T17;
  SingleLocaleArithmeticDomain_1_int64_t_0 T18 = NULL;
  range_int64_t_bounded_0 T23;
  range_int64_t_bounded_0 T22;
  int64_t T21;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T24;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T27;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T25;
  __ArrayTypeInfo_709668 T26;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T28;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T31;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T29;
  __ArrayTypeInfo_709668 T30;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T32;
  _real64 T34;
  _real64 T33;
  _complex128 T35;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T37;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T36;
  _complex128 T38;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T40 = NULL;
  int64_t T46;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T39 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_0 T41 = NULL;
  _tuple_1_range_int64_t_bounded_0 T42;
  range_int64_t_bounded_0 T43;
  range_int64_t_bounded_0 T44;
  int64_t T45;
  SingleLocaleArithmeticDomain_1_int64_t_0 T47 = NULL;
  range_int64_t_bounded_0 T49;
  _tuple_1_range_int64_t_bounded_0 T48;
  range_int64_t_bounded_0 T50;
  int64_t T51;
  int64_t T53;
  int64_t T52;
  int64_t T55;
  int64_t T54;
  _ref_int64_t T56 = NULL;
  _ref_int64_t T58 = NULL;
  int64_t T57;
  int64_t T59;
  int64_t T60;
  int64_t T61;
  int64_t T62;
  int32_t T63;
  _ddata__complex128 T64 = NULL;
  _complex128 T66;
  _ref__complex128 T65 = NULL;
  _real64 T67;
  _real64 T68;
  _real64 T69;
  _complex128 T70;
  _complex128 T71;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T72 = NULL;
  int64_t T73;
  int64_t T74;
  int64_t T75;
  int64_t T76;
  int32_t T77;
  _ddata__complex128 T78 = NULL;
  _ref__complex128 T79 = NULL;
  int64_t T80;
  _real64 T81;
  _real64 T82;
  chpl_bool T83;
  __init__Program(-1, "<internal>");
  T1 = _endCountAlloc(-1, "<internal>");
  T2 = T1;
  startTrackingMem();
  __init_fft();
  printConfiguration();
  distributed_warning(Block, 29, "test/release/examples/hpcc/fft.chpl");
  T3._value = nil;
  T4 = ((SingleLocaleArithmeticDomain_1_int64_t_0)(nil));
  T3._value = T4;
  T5 = __construct__domain_430768(1, T4, 405, "/Users/figueroa/chapel/modules/standard/SingleLocaleArithmetic.chpl");
  T6 = T5;
  T7 = ((int64_t)(4));
  T8 = (m/T7);
  T9 = ((int64_t)(0));
  T10 = __build_range_25268(T9, T8);
  T11 = _build_open_interval_upper(&(T10), 29, "test/release/examples/hpcc/fft.chpl");
  T6 = __EQUAL__441768(&(T6), &(T11), 29, "test/release/examples/hpcc/fft.chpl");
  T12 = T6;
  T13 = __build_domain_447257(&(T12));
  T14 = __build_array_type_447288(&(T13));
  T15 = __init_470219(&(T14), 30, "test/release/examples/hpcc/fft.chpl");
  T16 = T15;
  distributed_warning(Block, 32, "test/release/examples/hpcc/fft.chpl");
  T17._value = nil;
  T18 = ((SingleLocaleArithmeticDomain_1_int64_t_0)(nil));
  T17._value = T18;
  T19 = __construct__domain_430768(1, T18, 405, "/Users/figueroa/chapel/modules/standard/SingleLocaleArithmetic.chpl");
  T20 = T19;
  T21 = ((int64_t)(0));
  T22 = __build_range_25268(T21, m);
  T23 = _build_open_interval_upper(&(T22), 32, "test/release/examples/hpcc/fft.chpl");
  T20 = __EQUAL__441768(&(T20), &(T23), 32, "test/release/examples/hpcc/fft.chpl");
  T24 = T20;
  T25 = __build_domain_447257(&(T24));
  T26 = __build_array_type_447288(&(T25));
  T27 = __init_470219(&(T26), 33, "test/release/examples/hpcc/fft.chpl");
  T28 = T27;
  T29 = __build_domain_447257(&(T24));
  T30 = __build_array_type_447288(&(T29));
  T31 = __init_470219(&(T30), 33, "test/release/examples/hpcc/fft.chpl");
  T32 = T31;
  initVectors(&(T16), &(T32));
  T33 = getCurrentTime(TimeUnits_seconds, 37, "test/release/examples/hpcc/fft.chpl");
  T34 = T33;
  T35.re = 0.0;
  T35.im = 0.0;
  T36 = T27;
  T37 = __dom_470951(&(T36), 39, "test/release/examples/hpcc/fft.chpl");
  T38.re = 0.0;
  T38.im = 0.0;
  T39 = (T32._value);
  T40 = T39;
  T41 = (T39->dom);
  T42 = (T41->ranges);
  T43 = (T42.x1);
  T44 = __copy_429953(&(T43));
  T45 = (T44._low);
  T46 = T45;
  T47 = (T37._value);
  T48 = (T47->ranges);
  T49 = (T48.x1);
  T50 = __copy_429953(&(T49));
  T51 = 0;
  T52 = (T50._low);
  T53 = T52;
  T54 = (T50._high);
  T55 = T54;
  for (T51 = T53; T51 <= T55; T51 += 1) {
    T56 = &(T51);
    T57 = T46;
    T58 = &(T57);
    T59 = (T40->origin);
    T60 = (T59+T57);
    T61 = (T40->factoredOffs);
    T62 = (T60-T61);
    T63 = ((int32_t)(T62));
    T64 = (T40->data);
    T65 = _ARRAY_GET(T64, T63);
    T66 = *(T65);
    T67 = (T66.re);
    T68 = (T66.im);
    T69 = (-T68);
    T70.re = 0.0;
    T70.im = 0.0;
    T71 = T70;
    T71.re = T67;
    T71.im = T69;
    T72 = (T28._value);
    T73 = (T72->origin);
    T74 = (T73+T51);
    T75 = (T72->factoredOffs);
    T76 = (T74-T75);
    T77 = ((int32_t)(T76));
    T78 = (T72->data);
    T79 = _ARRAY_GET(T78, T77);
    (*T79) = T71;
    T80 = (T57+1);
    T46 = T80;
  }
  bitReverseShuffle(&(T28));
  dfft(&(T28), &(T16));
  T81 = getCurrentTime(TimeUnits_seconds, 43, "test/release/examples/hpcc/fft.chpl");
  T82 = (T81-T34);
  T83 = verifyResults(&(T32), &(T28), &(T16));
  printResults(T83, T82);
  __waitEndCount_11440(T2, -1, "<internal>");
  return;
}

/* fft.chpl:50 */
void printConfiguration(void) {
  if (printParams) {
    printProblemSize(2, m);
  }
  return;
}

/* fft.chpl:55 */
void initVectors(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Twiddles, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const z) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  T1 = (*z);
  T2 = T1;
  T3 = (*Twiddles);
  T4 = T3;
  computeTwiddles(&(T4));
  bitReverseShuffle(&(T4));
  fillRandom(&(T2), seed, 59, "test/release/examples/hpcc/fft.chpl");
  if (printArrays) {
    _writeln_528639("After initialization, Twiddles is: ", &(T4), "\n", 62, "test/release/examples/hpcc/fft.chpl");
    _writeln_528639("z is: ", &(T2), "\n", 63, "test/release/examples/hpcc/fft.chpl");
  }
  return;
}

/* fft.chpl:68 */
void computeTwiddles(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Twiddles) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  int64_t T5;
  int64_t T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  _real64 T10;
  _real64 T6;
  _real64 T7;
  _real64 T8;
  _real64 T9;
  int64_t T11;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T12 = NULL;
  int64_t T13;
  int64_t T14;
  int64_t T15;
  int64_t T16;
  int32_t T17;
  _ddata__complex128 T18 = NULL;
  _ref__complex128 T19 = NULL;
  _complex128 T20;
  _complex128 T21;
  _real64 T22;
  int64_t T23;
  int64_t T24;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T25 = NULL;
  int64_t T26;
  int64_t T27;
  int64_t T28;
  int64_t T29;
  int32_t T30;
  _ddata__complex128 T31 = NULL;
  _ref__complex128 T32 = NULL;
  _real64 T33;
  _real64 T34;
  _real64 T35;
  _real64 T36;
  _real64 T37;
  _complex128 T38;
  _complex128 T39;
  int64_t T40;
  int64_t T41;
  range_int64_t_bounded_0 T43;
  int64_t T42;
  range_int64_t_bounded_0 T44;
  range_int64_t_bounded_0 T45;
  int64_t T46;
  int64_t T48;
  int64_t T47;
  int64_t T50;
  int64_t T49;
  _ref_int64_t T51 = NULL;
  _real64 T52;
  _real64 T53;
  _real64 T54;
  _real64 T55;
  _real64 T56;
  _real64 T57;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T58 = NULL;
  int64_t T59;
  int64_t T60;
  int64_t T61;
  int64_t T62;
  int32_t T63;
  _ddata__complex128 T64 = NULL;
  _ref__complex128 T65 = NULL;
  _complex128 T66;
  _complex128 T67;
  int64_t T68;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T69 = NULL;
  int64_t T70;
  int64_t T71;
  int64_t T72;
  int64_t T73;
  int32_t T74;
  _ddata__complex128 T75 = NULL;
  _ref__complex128 T76 = NULL;
  _complex128 T77;
  _complex128 T78;
  T1 = (*Twiddles);
  T2 = T1;
  T3 = T1;
  T4 = numElements(&(T3), 69, "test/release/examples/hpcc/fft.chpl");
  T5 = T4;
  T6 = atan(1.0);
  T7 = (2.0*T6);
  T8 = ((_real64)(T4));
  T9 = (T7/T8);
  T10 = T9;
  T11 = ((int64_t)(0));
  T12 = (T1._value);
  T13 = (T12->origin);
  T14 = (T13+T11);
  T15 = (T12->factoredOffs);
  T16 = (T14-T15);
  T17 = ((int32_t)(T16));
  T18 = (T12->data);
  T19 = _ARRAY_GET(T18, T17);
  T20.re = 0.0;
  T20.im = 0.0;
  T21 = T20;
  T21.re = 1.0;
  T22 = ((_real64)(0));
  T21.im = T22;
  (*T19) = T21;
  T23 = ((int64_t)(2));
  T24 = (T4/T23);
  T25 = (T1._value);
  T26 = (T25->origin);
  T27 = (T26+T24);
  T28 = (T25->factoredOffs);
  T29 = (T27-T28);
  T30 = ((int32_t)(T29));
  T31 = (T25->data);
  T32 = _ARRAY_GET(T31, T30);
  T33 = ((_real64)(T4));
  T34 = (T9*T33);
  T35 = ((_real64)(2));
  T36 = (T34/T35);
  T37 = cos(T36);
  T38.re = 0.0;
  T38.im = 0.0;
  T39 = T38;
  T39.re = T37;
  T39.im = T37;
  (*T32) = T39;
  T40 = ((int64_t)(2));
  T41 = (T4/T40);
  T42 = ((int64_t)(1));
  T43 = __build_range_25268(T42, T41);
  T44 = _build_open_interval_upper(&(T43), 75, "test/release/examples/hpcc/fft.chpl");
  T45 = __copy_429953(&(T44));
  T46 = 0;
  T47 = (T45._low);
  T48 = T47;
  T49 = (T45._high);
  T50 = T49;
  for (T46 = T48; T46 <= T50; T46 += 1) {
    T51 = &(T46);
    T52 = ((_real64)(T46));
    T53 = (T10*T52);
    T54 = cos(T53);
    T55 = ((_real64)(T46));
    T56 = (T10*T55);
    T57 = sin(T56);
    T58 = (T2._value);
    T59 = (T58->origin);
    T60 = (T59+T46);
    T61 = (T58->factoredOffs);
    T62 = (T60-T61);
    T63 = ((int32_t)(T62));
    T64 = (T58->data);
    T65 = _ARRAY_GET(T64, T63);
    T66.re = 0.0;
    T66.im = 0.0;
    T67 = T66;
    T67.re = T54;
    T67.im = T57;
    (*T65) = T67;
    T68 = (T5-T46);
    T69 = (T2._value);
    T70 = (T69->origin);
    T71 = (T70+T68);
    T72 = (T69->factoredOffs);
    T73 = (T71-T72);
    T74 = ((int32_t)(T73));
    T75 = (T69->data);
    T76 = _ARRAY_GET(T75, T74);
    T77.re = 0.0;
    T77.im = 0.0;
    T78 = T77;
    T78.re = T57;
    T78.im = T54;
    (*T76) = T78;
  }
  return;
}

/* fft.chpl:84 */
void bitReverseShuffle(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Vect) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  int64_t T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  int32_t T5;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T10;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T7;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T6;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T8;
  __ArrayTypeInfo_709668 T9;
  _complex128 T11;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T13;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T12;
  _complex128 T14;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T15;
  int32_t T16;
  int64_t T25;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T19;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T17;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T18;
  SingleLocaleArithmeticDomain_1_int64_t_0 T20 = NULL;
  _tuple_1_range_int64_t_bounded_0 T21;
  range_int64_t_bounded_0 T22;
  range_int64_t_bounded_0 T23;
  int64_t T24;
  SingleLocaleArithmeticDomain_1_int64_t_0 T26 = NULL;
  range_int64_t_bounded_0 T28;
  _tuple_1_range_int64_t_bounded_0 T27;
  range_int64_t_bounded_0 T29;
  int64_t T30;
  int64_t T32;
  int64_t T31;
  int64_t T34;
  int64_t T33;
  _ref_int64_t T35 = NULL;
  int64_t T38;
  _ref_int64_t T37 = NULL;
  int64_t T36;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T39 = NULL;
  int64_t T40;
  int64_t T41;
  int64_t T42;
  int64_t T43;
  int32_t T44;
  _ddata__complex128 T45 = NULL;
  _complex128 T47;
  _ref__complex128 T46 = NULL;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T48 = NULL;
  int64_t T49;
  int64_t T50;
  int64_t T51;
  int64_t T52;
  int32_t T53;
  _ddata__complex128 T54 = NULL;
  _ref__complex128 T55 = NULL;
  int64_t T56;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T58;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T57;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T60 = NULL;
  int64_t T66;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T59 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_0 T61 = NULL;
  _tuple_1_range_int64_t_bounded_0 T62;
  range_int64_t_bounded_0 T63;
  range_int64_t_bounded_0 T64;
  int64_t T65;
  SingleLocaleArithmeticDomain_1_int64_t_0 T67 = NULL;
  range_int64_t_bounded_0 T69;
  _tuple_1_range_int64_t_bounded_0 T68;
  range_int64_t_bounded_0 T70;
  int64_t T71;
  int64_t T73;
  int64_t T72;
  int64_t T75;
  int64_t T74;
  _ref_int64_t T76 = NULL;
  _ref_int64_t T78 = NULL;
  int64_t T77;
  _ref__complex128 T86 = NULL;
  int64_t T79;
  int64_t T80;
  int64_t T81;
  int64_t T82;
  int32_t T83;
  _ddata__complex128 T84 = NULL;
  _ref__complex128 T85 = NULL;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T87 = NULL;
  int64_t T88;
  int64_t T89;
  int64_t T90;
  int64_t T91;
  int32_t T92;
  _ddata__complex128 T93 = NULL;
  _ref__complex128 T94 = NULL;
  _complex128 T95;
  int64_t T96;
  T1 = (*Vect);
  T2 = T1;
  T3 = T1;
  T4 = numElements(&(T3), 85, "test/release/examples/hpcc/fft.chpl");
  T5 = _log2_76322(T4, 85, "test/release/examples/hpcc/fft.chpl");
  T6 = T1;
  T7 = __dom_470951(&(T6), 84, "test/release/examples/hpcc/fft.chpl");
  T8 = __build_domain_447257(&(T7));
  T9 = __build_array_type_447288(&(T8));
  T10 = __init_470219(&(T9), 86, "test/release/examples/hpcc/fft.chpl");
  T11.re = 0.0;
  T11.im = 0.0;
  T12 = T10;
  T13 = __dom_470951(&(T12), 86, "test/release/examples/hpcc/fft.chpl");
  T14.re = 0.0;
  T14.im = 0.0;
  T15 = T1;
  T16 = T5;
  T17 = T1;
  T18 = __dom_470951(&(T17), 86, "test/release/examples/hpcc/fft.chpl");
  T19 = __build_domain_447257(&(T18));
  T20 = (T19._value);
  T21 = (T20->ranges);
  T22 = (T21.x1);
  T23 = __copy_429953(&(T22));
  T24 = (T23._low);
  T25 = T24;
  T26 = (T13._value);
  T27 = (T26->ranges);
  T28 = (T27.x1);
  T29 = __copy_429953(&(T28));
  T30 = 0;
  T31 = (T29._low);
  T32 = T31;
  T33 = (T29._high);
  T34 = T33;
  for (T30 = T32; T30 <= T34; T30 += 1) {
    T35 = &(T30);
    T36 = T25;
    T37 = &(T36);
    T38 = bitReverse(T36, T16);
    T39 = (T15._value);
    T40 = (T39->origin);
    T41 = (T40+T38);
    T42 = (T39->factoredOffs);
    T43 = (T41-T42);
    T44 = ((int32_t)(T43));
    T45 = (T39->data);
    T46 = _ARRAY_GET(T45, T44);
    T47 = *(T46);
    T48 = (T10._value);
    T49 = (T48->origin);
    T50 = (T49+T30);
    T51 = (T48->factoredOffs);
    T52 = (T50-T51);
    T53 = ((int32_t)(T52));
    T54 = (T48->data);
    T55 = _ARRAY_GET(T54, T53);
    (*T55) = T47;
    T56 = (T36+1);
    T25 = T56;
  }
  T57 = T2;
  T58 = __dom_470951(&(T57), 87, "test/release/examples/hpcc/fft.chpl");
  T59 = (T10._value);
  T60 = T59;
  T61 = (T59->dom);
  T62 = (T61->ranges);
  T63 = (T62.x1);
  T64 = __copy_429953(&(T63));
  T65 = (T64._low);
  T66 = T65;
  T67 = (T58._value);
  T68 = (T67->ranges);
  T69 = (T68.x1);
  T70 = __copy_429953(&(T69));
  T71 = 0;
  T72 = (T70._low);
  T73 = T72;
  T74 = (T70._high);
  T75 = T74;
  for (T71 = T73; T71 <= T75; T71 += 1) {
    T76 = &(T71);
    T77 = T66;
    T78 = &(T77);
    T79 = (T60->origin);
    T80 = (T79+T77);
    T81 = (T60->factoredOffs);
    T82 = (T80-T81);
    T83 = ((int32_t)(T82));
    T84 = (T60->data);
    T85 = _ARRAY_GET(T84, T83);
    T86 = T85;
    T87 = (T2._value);
    T88 = (T87->origin);
    T89 = (T88+T71);
    T90 = (T87->factoredOffs);
    T91 = (T89-T90);
    T92 = ((int32_t)(T91));
    T93 = (T87->data);
    T94 = _ARRAY_GET(T93, T92);
    T95 = *(T86);
    (*T94) = T95;
    T96 = (T77+1);
    T66 = T96;
  }
  return;
}

/* fft.chpl:91 */
int64_t bitReverse(int64_t val, int32_t revBits) {
  int64_t T11;
  uint64_t T1;
  uint64_t T3;
  uint64_t T2;
  uint64_t T5;
  uint64_t T4;
  int32_t T6;
  uint64_t T7;
  uint64_t T8;
  uint64_t T9;
  int64_t T10;
  T1 = ((uint64_t)(val));
  T2 = ((uint64_t)(INT64(72624976668147840)));
  T3 = bitMatMultOr(T1, T2, 93, "test/release/examples/hpcc/fft.chpl");
  T4 = ((uint64_t)(INT64(72624976668147840)));
  T5 = bitMatMultOr(T4, T3, 93, "test/release/examples/hpcc/fft.chpl");
  T6 = (64-revBits);
  T7 = (T5<<revBits);
  T8 = (T5>>T6);
  T9 = (T7|T8);
  T10 = ((int64_t)(T9));
  T11 = T10;
  return T11;
}

/* fft.chpl:99 */
void dfft(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const A, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const W) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  int64_t T7;
  int64_t T6;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T5;
  int32_t T23;
  int32_t T24;
  int32_t T8;
  int32_t T9;
  int64_t T10;
  int64_t T11;
  int32_t T12;
  range_int32_t_bounded_0 T13;
  range_int32_t_bounded_0 T14;
  int32_t T15;
  int32_t T17;
  int32_t T16;
  int32_t T19;
  int32_t T18;
  _ref_int32_t T20 = NULL;
  int32_t T22;
  int32_t T21;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T26;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T25;
  int32_t T27;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_1 T28;
  range_int32_t_boundedLow_0 T29;
  range_int32_t_boundedLow_0 T30;
  range_int32_t_boundedLow_0 T31;
  int64_t T53;
  int32_t T54;
  range_int32_t_boundedLow_0 T32;
  range_int32_t_boundedLow_0 T33;
  int32_t T35;
  int32_t T34;
  SingleLocaleArithmeticDomain_1_int64_t_1 T36 = NULL;
  range_int64_t_bounded_1 T38;
  _tuple_1_range_int64_t_bounded_1 T37;
  range_int64_t_bounded_1 T39;
  range_int64_t_bounded_1 T40;
  int64_t T46;
  int64_t T44;
  int32_t T41;
  chpl_bool T42;
  int64_t T43;
  int64_t T45;
  chpl_bool T52;
  int64_t T47;
  chpl_bool T48;
  chpl_bool T51;
  int64_t T49;
  chpl_bool T50;
  _complex128 T65;
  int64_t T55;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T56 = NULL;
  int64_t T57;
  int64_t T58;
  int64_t T59;
  int64_t T60;
  int32_t T61;
  _ddata__complex128 T62 = NULL;
  _complex128 T64;
  _ref__complex128 T63 = NULL;
  _complex128 T77;
  int32_t T66;
  int64_t T67;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T68 = NULL;
  int64_t T69;
  int64_t T70;
  int64_t T71;
  int64_t T72;
  int32_t T73;
  _ddata__complex128 T74 = NULL;
  _complex128 T76;
  _ref__complex128 T75 = NULL;
  _complex128 T94;
  _real64 T78;
  _real64 T79;
  _real64 T80;
  _real64 T81;
  _real64 T82;
  _real64 T83;
  _real64 T84;
  _real64 T85;
  _real64 T86;
  _real64 T87;
  _real64 T88;
  _real64 T89;
  _real64 T90;
  _real64 T91;
  _complex128 T92;
  _complex128 T93;
  range_int32_t_bounded_0 T95;
  range_int32_t_bounded_0 T96;
  range_int32_t_bounded_0 T97;
  range_int64_t_bounded_0 T98;
  range_int64_t_bounded_0 T99;
  int64_t T100;
  int64_t T102;
  int64_t T101;
  int64_t T104;
  int64_t T103;
  _ref_int64_t T105 = NULL;
  range_int32_t_bounded_0 T106;
  range_int32_t_bounded_0 T107;
  range_int32_t_bounded_0 T108;
  range_int32_t_bounded_1 T109;
  range_int64_t_bounded_1 T110;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T112;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T111;
  int32_t T113;
  int32_t T114;
  int64_t T115;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T116 = NULL;
  int64_t T117;
  int64_t T118;
  int64_t T119;
  int64_t T120;
  int32_t T121;
  _ddata__complex128 T122 = NULL;
  _complex128 T124;
  _ref__complex128 T123 = NULL;
  _real64 T125;
  _real64 T126;
  _real64 T127;
  _real64 T128;
  _real64 T129;
  _real64 T130;
  _real64 T131;
  _real64 T132;
  _real64 T133;
  _real64 T134;
  _real64 T135;
  _real64 T136;
  _real64 T137;
  _real64 T138;
  _complex128 T139;
  _complex128 T140;
  _real64 T141;
  _real64 T142;
  _real64 T143;
  _real64 T144;
  _real64 T145;
  _real64 T146;
  _real64 T147;
  _complex128 T148;
  _complex128 T149;
  int64_t T150;
  int64_t T151;
  range_int32_t_bounded_0 T152;
  range_int32_t_bounded_0 T153;
  range_int64_t_bounded_0 T154;
  range_int64_t_bounded_0 T155;
  int64_t T156;
  int64_t T158;
  int64_t T157;
  int64_t T160;
  int64_t T159;
  _ref_int64_t T161 = NULL;
  range_int32_t_bounded_0 T162;
  range_int32_t_bounded_0 T163;
  range_int32_t_bounded_0 T164;
  range_int32_t_bounded_1 T165;
  range_int64_t_bounded_1 T166;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T168;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T167;
  int32_t T169;
  int32_t T170;
  int64_t T171;
  int64_t T172;
  int64_t T173;
  chpl_bool T174;
  chpl_bool T177;
  int64_t T175;
  chpl_bool T176;
  int32_t T182;
  int64_t T178;
  int64_t T179;
  int32_t T180;
  int32_t T181;
  int32_t T183;
  int64_t T184;
  chpl_bool T185;
  range_int32_t_bounded_0 T186;
  range_int32_t_bounded_0 T187;
  range_int32_t_bounded_0 T188;
  int32_t T189;
  int32_t T191;
  int32_t T190;
  int32_t T193;
  int32_t T192;
  _ref_int32_t T194 = NULL;
  range_int32_t_bounded_0 T195;
  range_int32_t_bounded_0 T196;
  range_int32_t_bounded_1 T197;
  range_int32_t_bounded_1 T198;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T200;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T199;
  range_int32_t_bounded_0 T201;
  range_int32_t_bounded_0 T202;
  range_int32_t_bounded_0 T203;
  int32_t T204;
  int32_t T206;
  int32_t T205;
  int32_t T208;
  int32_t T207;
  _ref_int32_t T209 = NULL;
  int64_t T210;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T211 = NULL;
  int64_t T212;
  int64_t T213;
  int64_t T214;
  int64_t T215;
  int32_t T216;
  _ddata__complex128 T217 = NULL;
  _complex128 T219;
  _ref__complex128 T218 = NULL;
  int32_t T220;
  int64_t T221;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T222 = NULL;
  int64_t T223;
  int64_t T224;
  int64_t T225;
  int64_t T226;
  int32_t T227;
  _ddata__complex128 T228 = NULL;
  _complex128 T230;
  _ref__complex128 T229 = NULL;
  int64_t T231;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T232 = NULL;
  int64_t T233;
  int64_t T234;
  int64_t T235;
  int64_t T236;
  int32_t T237;
  _ddata__complex128 T238 = NULL;
  _ref__complex128 T239 = NULL;
  _real64 T240;
  _real64 T241;
  _real64 T242;
  _real64 T243;
  _real64 T244;
  _real64 T245;
  _complex128 T246;
  _complex128 T247;
  int32_t T248;
  int64_t T249;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T250 = NULL;
  int64_t T251;
  int64_t T252;
  int64_t T253;
  int64_t T254;
  int32_t T255;
  _ddata__complex128 T256 = NULL;
  _ref__complex128 T257 = NULL;
  _real64 T258;
  _real64 T259;
  _real64 T260;
  _real64 T261;
  _real64 T262;
  _real64 T263;
  _complex128 T264;
  _complex128 T265;
  T1 = (*W);
  T2 = T1;
  T3 = (*A);
  T4 = T3;
  T5 = T3;
  T6 = numElements(&(T5), 100, "test/release/examples/hpcc/fft.chpl");
  T7 = T6;
  T8 = 4;
  T9 = 1;
  T10 = ((int64_t)(1));
  T11 = (T6-T10);
  T12 = log4(T11);
  T13 = _build_range(1, T12);
  T14 = _copy(&(T13));
  T15 = 0;
  T16 = (T14._low);
  T17 = T16;
  T18 = (T14._high);
  T19 = T18;
  for (T15 = T17; T15 <= T19; T15 += 1) {
    T20 = &(T15);
    T21 = (T9*T8);
    T22 = T21;
    T23 = T9;
    T24 = T21;
    T25 = T4;
    T26 = __dom_470951(&(T25), 99, "test/release/examples/hpcc/fft.chpl");
    T27 = (2*T21);
    T28 = _by_545839(&(T26), T27, 103, "test/release/examples/hpcc/fft.chpl");
    T29 = __build_range_561135(BoundedRangeType_boundedLow, 0);
    T30 = __copy_562043(&(T29));
    T31 = __copy_562043(&(T30));
    T32 = __copy_562043(&(T31));
    T33 = __copy_562043(&(T32));
    T34 = (T33._low);
    T35 = T34;
    T36 = (T28._value);
    T37 = (T36->ranges);
    T38 = (T37.x1);
    T39 = __copy_547955(&(T38));
    T40 = T39;
    T41 = (T39._stride);
    T42 = (T41>0);
    if (T42) {
      T43 = (T39._low);
      T44 = T43;
    } else {
      T45 = (T39._high);
      T44 = T45;
    }
    T46 = T44;
    T47 = (T39._low);
    T48 = (T47<=T44);
    if (T48) {
      T49 = (T39._high);
      T50 = (T44<=T49);
      T51 = T50;
    } else {
      T51 = false;
    }
    T52 = T51;
    while (T52) {
      T53 = T46;
      T54 = T35;
      T55 = ((int64_t)(T35));
      T56 = (T2._value);
      T57 = (T56->origin);
      T58 = (T57+T55);
      T59 = (T56->factoredOffs);
      T60 = (T58-T59);
      T61 = ((int32_t)(T60));
      T62 = (T56->data);
      T63 = _ARRAY_GET(T62, T61);
      T64 = *(T63);
      T65 = T64;
      T66 = (2*T35);
      T67 = ((int64_t)(T66));
      T68 = (T2._value);
      T69 = (T68->origin);
      T70 = (T69+T67);
      T71 = (T68->factoredOffs);
      T72 = (T70-T71);
      T73 = ((int32_t)(T72));
      T74 = (T68->data);
      T75 = _ARRAY_GET(T74, T73);
      T76 = *(T75);
      T77 = T76;
      T78 = (T76.re);
      T79 = (T64.im);
      T80 = ((_real64)(2));
      T81 = (T80*T79);
      T82 = (T76.im);
      T83 = (T81*T82);
      T84 = (T78-T83);
      T85 = (T64.im);
      T86 = ((_real64)(2));
      T87 = (T86*T85);
      T88 = (T76.re);
      T89 = (T87*T88);
      T90 = (T76.im);
      T91 = (T89-T90);
      T92.re = 0.0;
      T92.im = 0.0;
      T93 = T92;
      T93.re = T84;
      T93.im = T91;
      T94 = T93;
      T95 = _build_range(0, T23);
      T96 = __build_open_interval_upper_570090(&(T95));
      T97 = _copy(&(T96));
      T98 = _PLUS_(T46, &(T97), 109, "test/release/examples/hpcc/fft.chpl");
      T99 = __copy_429953(&(T98));
      T100 = 0;
      T101 = (T99._low);
      T102 = T101;
      T103 = (T99._high);
      T104 = T103;
      for (T100 = T102; T100 <= T104; T100 += 1) {
        T105 = &(T100);
        T106 = _build_range(0, 4);
        T107 = __build_open_interval_upper_570090(&(T106));
        T108 = _copy(&(T107));
        T109 = _ASTERISK_(&(T108), T23, 110, "test/release/examples/hpcc/fft.chpl");
        T110 = __PLUS__570611(&(T109), T100, 110, "test/release/examples/hpcc/fft.chpl");
        T111 = T4;
        T112 = _this_572389(&(T111), &(T110), 110, "test/release/examples/hpcc/fft.chpl");
        butterfly(&(T77), &(T65), &(T94), &(T112));
      }
      T113 = (2*T54);
      T114 = (T113+1);
      T115 = ((int64_t)(T114));
      T116 = (T2._value);
      T117 = (T116->origin);
      T118 = (T117+T115);
      T119 = (T116->factoredOffs);
      T120 = (T118-T119);
      T121 = ((int32_t)(T120));
      T122 = (T116->data);
      T123 = _ARRAY_GET(T122, T121);
      T124 = *(T123);
      T77 = T124;
      T125 = (T124.re);
      T126 = (T65.re);
      T127 = ((_real64)(2));
      T128 = (T127*T126);
      T129 = (T124.im);
      T130 = (T128*T129);
      T131 = (T125-T130);
      T132 = (T65.re);
      T133 = ((_real64)(2));
      T134 = (T133*T132);
      T135 = (T124.re);
      T136 = (T134*T135);
      T137 = (T124.im);
      T138 = (T136-T137);
      T139.re = 0.0;
      T139.im = 0.0;
      T140 = T139;
      T140.re = T131;
      T140.im = T138;
      T94 = T140;
      T141 = (T65.im);
      T142 = (-T141);
      T143 = ((_real64)(1));
      T144 = (T142*T143);
      T145 = (T65.re);
      T146 = ((_real64)(1));
      T147 = (T145*T146);
      T148.re = 0.0;
      T148.im = 0.0;
      T149 = T148;
      T149.re = T144;
      T149.im = T147;
      T65 = T149;
      T150 = ((int64_t)(T24));
      T151 = (T53+T150);
      T152 = _build_range(0, T23);
      T153 = __build_open_interval_upper_570090(&(T152));
      T154 = _PLUS_(T151, &(T153), 117, "test/release/examples/hpcc/fft.chpl");
      T155 = __copy_429953(&(T154));
      T156 = 0;
      T157 = (T155._low);
      T158 = T157;
      T159 = (T155._high);
      T160 = T159;
      for (T156 = T158; T156 <= T160; T156 += 1) {
        T161 = &(T156);
        T162 = _build_range(0, 4);
        T163 = __build_open_interval_upper_570090(&(T162));
        T164 = _copy(&(T163));
        T165 = _ASTERISK_(&(T164), T23, 118, "test/release/examples/hpcc/fft.chpl");
        T166 = __PLUS__570611(&(T165), T156, 118, "test/release/examples/hpcc/fft.chpl");
        T167 = T4;
        T168 = _this_572389(&(T167), &(T166), 118, "test/release/examples/hpcc/fft.chpl");
        butterfly(&(T77), &(T65), &(T94), &(T168));
      }
      T169 = (T35+1);
      T35 = T169;
      T170 = (T40._stride);
      T171 = ((int64_t)(T170));
      T172 = (T46+T171);
      T46 = T172;
      T173 = (T40._low);
      T174 = (T173<=T172);
      if (T174) {
        T175 = (T40._high);
        T176 = (T172<=T175);
        T177 = T176;
      } else {
        T177 = false;
      }
      T52 = T177;
    }
    T9 = T22;
  }
  T178 = ((int64_t)(1));
  T179 = (T7-T178);
  T180 = log4(T179);
  T181 = pow(4, T180);
  T182 = T181;
  T183 = (T181*4);
  T184 = ((int64_t)(T183));
  T185 = (T184==T7);
  if (T185) {
    T186 = _build_range(0, T181);
    T187 = __build_open_interval_upper_570090(&(T186));
    T188 = _copy(&(T187));
    T189 = 0;
    T190 = (T188._low);
    T191 = T190;
    T192 = (T188._high);
    T193 = T192;
    for (T189 = T191; T189 <= T193; T189 += 1) {
      T194 = &(T189);
      T195 = _build_range(0, 4);
      T196 = __build_open_interval_upper_570090(&(T195));
      T197 = _ASTERISK_(&(T196), T182, 125, "test/release/examples/hpcc/fft.chpl");
      T198 = __PLUS__630613(&(T197), T189);
      T199 = T4;
      T200 = _this_632341(&(T199), &(T198), 125, "test/release/examples/hpcc/fft.chpl");
      _butterfly_638912(1.0, 1.0, 1.0, &(T200));
    }
  } else {
    T201 = _build_range(0, T181);
    T202 = __build_open_interval_upper_570090(&(T201));
    T203 = _copy(&(T202));
    T204 = 0;
    T205 = (T203._low);
    T206 = T205;
    T207 = (T203._high);
    T208 = T207;
    for (T204 = T206; T204 <= T208; T204 += 1) {
      T209 = &(T204);
      T210 = ((int64_t)(T204));
      T211 = (T4._value);
      T212 = (T211->origin);
      T213 = (T212+T210);
      T214 = (T211->factoredOffs);
      T215 = (T213-T214);
      T216 = ((int32_t)(T215));
      T217 = (T211->data);
      T218 = _ARRAY_GET(T217, T216);
      T219 = *(T218);
      T220 = (T204+T182);
      T221 = ((int64_t)(T220));
      T222 = (T4._value);
      T223 = (T222->origin);
      T224 = (T223+T221);
      T225 = (T222->factoredOffs);
      T226 = (T224-T225);
      T227 = ((int32_t)(T226));
      T228 = (T222->data);
      T229 = _ARRAY_GET(T228, T227);
      T230 = *(T229);
      T231 = ((int64_t)(T204));
      T232 = (T4._value);
      T233 = (T232->origin);
      T234 = (T233+T231);
      T235 = (T232->factoredOffs);
      T236 = (T234-T235);
      T237 = ((int32_t)(T236));
      T238 = (T232->data);
      T239 = _ARRAY_GET(T238, T237);
      T240 = (T219.re);
      T241 = (T230.re);
      T242 = (T240+T241);
      T243 = (T219.im);
      T244 = (T230.im);
      T245 = (T243+T244);
      T246.re = 0.0;
      T246.im = 0.0;
      T247 = T246;
      T247.re = T242;
      T247.im = T245;
      (*T239) = T247;
      T248 = (T204+T182);
      T249 = ((int64_t)(T248));
      T250 = (T4._value);
      T251 = (T250->origin);
      T252 = (T251+T249);
      T253 = (T250->factoredOffs);
      T254 = (T252-T253);
      T255 = ((int32_t)(T254));
      T256 = (T250->data);
      T257 = _ARRAY_GET(T256, T255);
      T258 = (T219.re);
      T259 = (T230.re);
      T260 = (T258-T259);
      T261 = (T219.im);
      T262 = (T230.im);
      T263 = (T261-T262);
      T264.re = 0.0;
      T264.im = 0.0;
      T265 = T264;
      T265.re = T260;
      T265.im = T263;
      (*T257) = T265;
    }
  }
  return;
}

/* fft.chpl:146 */
void butterfly(_complex128* const wk1, _complex128* const wk2, _complex128* const wk3, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1* const A) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T2;
  _array_int32_t__complex128_1_SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T6;
  range_int32_t_bounded_0 T3;
  _domain_1_SingleLocaleArithmeticDomain_1_int32_t_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T5;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T7 = NULL;
  int32_t T8;
  _tuple_1_int32_t T9;
  int32_t T10;
  int32_t T11;
  int32_t T12;
  int32_t T13;
  int32_t T14;
  _ddata__complex128 T15 = NULL;
  _complex128 T17;
  _ref__complex128 T16 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T18 = NULL;
  int32_t T19;
  _tuple_1_int32_t T20;
  int32_t T21;
  int32_t T22;
  int32_t T23;
  int32_t T24;
  int32_t T25;
  _ddata__complex128 T26 = NULL;
  _complex128 T28;
  _ref__complex128 T27 = NULL;
  _real64 T29;
  _real64 T30;
  _real64 T31;
  _real64 T32;
  _real64 T33;
  _real64 T34;
  _complex128 T35;
  _complex128 T36;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T37 = NULL;
  int32_t T38;
  _tuple_1_int32_t T39;
  int32_t T40;
  int32_t T41;
  int32_t T42;
  int32_t T43;
  int32_t T44;
  _ddata__complex128 T45 = NULL;
  _complex128 T47;
  _ref__complex128 T46 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T48 = NULL;
  int32_t T49;
  _tuple_1_int32_t T50;
  int32_t T51;
  int32_t T52;
  int32_t T53;
  int32_t T54;
  int32_t T55;
  _ddata__complex128 T56 = NULL;
  _complex128 T58;
  _ref__complex128 T57 = NULL;
  _real64 T59;
  _real64 T60;
  _real64 T61;
  _real64 T62;
  _real64 T63;
  _real64 T64;
  _complex128 T65;
  _complex128 T66;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T67 = NULL;
  int32_t T68;
  _tuple_1_int32_t T69;
  int32_t T70;
  int32_t T71;
  int32_t T72;
  int32_t T73;
  int32_t T74;
  _ddata__complex128 T75 = NULL;
  _complex128 T77;
  _ref__complex128 T76 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T78 = NULL;
  int32_t T79;
  _tuple_1_int32_t T80;
  int32_t T81;
  int32_t T82;
  int32_t T83;
  int32_t T84;
  int32_t T85;
  _ddata__complex128 T86 = NULL;
  _complex128 T88;
  _ref__complex128 T87 = NULL;
  _real64 T89;
  _real64 T90;
  _real64 T91;
  _real64 T92;
  _real64 T93;
  _real64 T94;
  _complex128 T95;
  _complex128 T96;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T97 = NULL;
  int32_t T98;
  _tuple_1_int32_t T99;
  int32_t T100;
  int32_t T101;
  int32_t T102;
  int32_t T103;
  int32_t T104;
  _ddata__complex128 T105 = NULL;
  _complex128 T107;
  _ref__complex128 T106 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T108 = NULL;
  int32_t T109;
  _tuple_1_int32_t T110;
  int32_t T111;
  int32_t T112;
  int32_t T113;
  int32_t T114;
  int32_t T115;
  _ddata__complex128 T116 = NULL;
  _complex128 T118;
  _ref__complex128 T117 = NULL;
  _real64 T119;
  _real64 T120;
  _real64 T121;
  _real64 T122;
  _real64 T123;
  _real64 T124;
  _complex128 T125;
  _complex128 T126;
  _real64 T127;
  _real64 T128;
  _real64 T129;
  _real64 T130;
  _real64 T131;
  _real64 T132;
  _real64 T133;
  _complex128 T134;
  _complex128 T135;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T136 = NULL;
  int32_t T137;
  _tuple_1_int32_t T138;
  int32_t T139;
  int32_t T140;
  int32_t T141;
  int32_t T142;
  int32_t T143;
  _ddata__complex128 T144 = NULL;
  _ref__complex128 T145 = NULL;
  _real64 T146;
  _real64 T147;
  _real64 T148;
  _real64 T149;
  _real64 T150;
  _real64 T151;
  _complex128 T152;
  _complex128 T153;
  _real64 T154;
  _real64 T155;
  _real64 T156;
  _real64 T157;
  _real64 T158;
  _real64 T159;
  _complex128 T160;
  _complex128 T161;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T162 = NULL;
  int32_t T163;
  _tuple_1_int32_t T164;
  int32_t T165;
  int32_t T166;
  int32_t T167;
  int32_t T168;
  int32_t T169;
  _ddata__complex128 T170 = NULL;
  _ref__complex128 T171 = NULL;
  _real64 T172;
  _real64 T173;
  _real64 T174;
  _real64 T175;
  _real64 T176;
  _real64 T177;
  _real64 T178;
  _real64 T179;
  _real64 T180;
  _real64 T181;
  _real64 T182;
  _real64 T183;
  _real64 T184;
  _real64 T185;
  _complex128 T186;
  _complex128 T187;
  _real64 T188;
  _real64 T189;
  _real64 T190;
  _real64 T191;
  _real64 T192;
  _real64 T193;
  _complex128 T194;
  _complex128 T195;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T196 = NULL;
  int32_t T197;
  _tuple_1_int32_t T198;
  int32_t T199;
  int32_t T200;
  int32_t T201;
  int32_t T202;
  int32_t T203;
  _ddata__complex128 T204 = NULL;
  _ref__complex128 T205 = NULL;
  _real64 T206;
  _real64 T207;
  _real64 T208;
  _real64 T209;
  _real64 T210;
  _real64 T211;
  _real64 T212;
  _real64 T213;
  _real64 T214;
  _real64 T215;
  _real64 T216;
  _real64 T217;
  _real64 T218;
  _real64 T219;
  _complex128 T220;
  _complex128 T221;
  _real64 T222;
  _real64 T223;
  _real64 T224;
  _real64 T225;
  _real64 T226;
  _real64 T227;
  _complex128 T228;
  _complex128 T229;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T230 = NULL;
  int32_t T231;
  _tuple_1_int32_t T232;
  int32_t T233;
  int32_t T234;
  int32_t T235;
  int32_t T236;
  int32_t T237;
  _ddata__complex128 T238 = NULL;
  _ref__complex128 T239 = NULL;
  _real64 T240;
  _real64 T241;
  _real64 T242;
  _real64 T243;
  _real64 T244;
  _real64 T245;
  _real64 T246;
  _real64 T247;
  _real64 T248;
  _real64 T249;
  _real64 T250;
  _real64 T251;
  _real64 T252;
  _real64 T253;
  _complex128 T254;
  _complex128 T255;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T256;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_1 T258;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T257;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T260 = NULL;
  range_int64_t_bounded_1 T265;
  int64_t T271;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T259 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_1 T261 = NULL;
  _tuple_1_range_int64_t_bounded_1 T262;
  range_int64_t_bounded_1 T263;
  range_int64_t_bounded_1 T264;
  int64_t T269;
  int32_t T266;
  chpl_bool T267;
  int64_t T268;
  int64_t T270;
  int64_t T272;
  chpl_bool T273;
  SingleLocaleArithmeticDomain_1_int64_t_1 T274 = NULL;
  _tuple_1_range_int64_t_bounded_1 T275;
  range_int64_t_bounded_1 T276;
  range_int64_t_bounded_1 T277;
  range_int64_t_bounded_1 T278;
  int64_t T284;
  int64_t T282;
  int32_t T279;
  chpl_bool T280;
  int64_t T281;
  int64_t T283;
  chpl_bool T290;
  int64_t T285;
  chpl_bool T286;
  chpl_bool T289;
  int64_t T287;
  chpl_bool T288;
  _ref__complex128 T306 = NULL;
  int64_t T291;
  _tuple_1_int64_t T292;
  int64_t T293;
  int64_t T294;
  _tuple_1_int64_t T295;
  int64_t T296;
  int64_t T297;
  _tuple_1_int32_t T298;
  int32_t T299;
  int64_t T300;
  int64_t T301;
  int64_t T302;
  int32_t T303;
  _ddata__complex128 T304 = NULL;
  _ref__complex128 T305 = NULL;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T307 = NULL;
  int64_t T308;
  _tuple_1_int64_t T309;
  int64_t T310;
  int64_t T311;
  _tuple_1_int64_t T312;
  int64_t T313;
  int64_t T314;
  _tuple_1_int32_t T315;
  int32_t T316;
  int64_t T317;
  int64_t T318;
  int64_t T319;
  int32_t T320;
  _ddata__complex128 T321 = NULL;
  _ref__complex128 T322 = NULL;
  _complex128 T323;
  int32_t T324;
  int64_t T325;
  int64_t T326;
  int64_t T327;
  chpl_bool T328;
  int32_t T329;
  int64_t T330;
  int64_t T331;
  int64_t T332;
  chpl_bool T333;
  chpl_bool T336;
  int64_t T334;
  chpl_bool T335;
  T1 = (*A);
  T2 = __copy_599498(&(T1), 146, "test/release/examples/hpcc/fft.chpl");
  T3 = _build_range(1, 4);
  T4 = _build_domain(&(T3), 146, "test/release/examples/hpcc/fft.chpl");
  T5 = T2;
  T6 = reindex(&(T5), &(T4), 146, "test/release/examples/hpcc/fft.chpl");
  T7 = (T6._value);
  T8 = (T7->origin);
  T9 = (T7->blk);
  T10 = (T9.x1);
  T11 = (1*T10);
  T12 = (T8+T11);
  T13 = (T7->factoredOffs);
  T14 = (T12-T13);
  T15 = (T7->data);
  T16 = _ARRAY_GET(T15, T14);
  T17 = *(T16);
  T18 = (T6._value);
  T19 = (T18->origin);
  T20 = (T18->blk);
  T21 = (T20.x1);
  T22 = (2*T21);
  T23 = (T19+T22);
  T24 = (T18->factoredOffs);
  T25 = (T23-T24);
  T26 = (T18->data);
  T27 = _ARRAY_GET(T26, T25);
  T28 = *(T27);
  T29 = (T17.re);
  T30 = (T28.re);
  T31 = (T29+T30);
  T32 = (T17.im);
  T33 = (T28.im);
  T34 = (T32+T33);
  T35.re = 0.0;
  T35.im = 0.0;
  T36 = T35;
  T36.re = T31;
  T36.im = T34;
  T37 = (T6._value);
  T38 = (T37->origin);
  T39 = (T37->blk);
  T40 = (T39.x1);
  T41 = (1*T40);
  T42 = (T38+T41);
  T43 = (T37->factoredOffs);
  T44 = (T42-T43);
  T45 = (T37->data);
  T46 = _ARRAY_GET(T45, T44);
  T47 = *(T46);
  T48 = (T6._value);
  T49 = (T48->origin);
  T50 = (T48->blk);
  T51 = (T50.x1);
  T52 = (2*T51);
  T53 = (T49+T52);
  T54 = (T48->factoredOffs);
  T55 = (T53-T54);
  T56 = (T48->data);
  T57 = _ARRAY_GET(T56, T55);
  T58 = *(T57);
  T59 = (T47.re);
  T60 = (T58.re);
  T61 = (T59-T60);
  T62 = (T47.im);
  T63 = (T58.im);
  T64 = (T62-T63);
  T65.re = 0.0;
  T65.im = 0.0;
  T66 = T65;
  T66.re = T61;
  T66.im = T64;
  T67 = (T6._value);
  T68 = (T67->origin);
  T69 = (T67->blk);
  T70 = (T69.x1);
  T71 = (3*T70);
  T72 = (T68+T71);
  T73 = (T67->factoredOffs);
  T74 = (T72-T73);
  T75 = (T67->data);
  T76 = _ARRAY_GET(T75, T74);
  T77 = *(T76);
  T78 = (T6._value);
  T79 = (T78->origin);
  T80 = (T78->blk);
  T81 = (T80.x1);
  T82 = (4*T81);
  T83 = (T79+T82);
  T84 = (T78->factoredOffs);
  T85 = (T83-T84);
  T86 = (T78->data);
  T87 = _ARRAY_GET(T86, T85);
  T88 = *(T87);
  T89 = (T77.re);
  T90 = (T88.re);
  T91 = (T89+T90);
  T92 = (T77.im);
  T93 = (T88.im);
  T94 = (T92+T93);
  T95.re = 0.0;
  T95.im = 0.0;
  T96 = T95;
  T96.re = T91;
  T96.im = T94;
  T97 = (T6._value);
  T98 = (T97->origin);
  T99 = (T97->blk);
  T100 = (T99.x1);
  T101 = (3*T100);
  T102 = (T98+T101);
  T103 = (T97->factoredOffs);
  T104 = (T102-T103);
  T105 = (T97->data);
  T106 = _ARRAY_GET(T105, T104);
  T107 = *(T106);
  T108 = (T6._value);
  T109 = (T108->origin);
  T110 = (T108->blk);
  T111 = (T110.x1);
  T112 = (4*T111);
  T113 = (T109+T112);
  T114 = (T108->factoredOffs);
  T115 = (T113-T114);
  T116 = (T108->data);
  T117 = _ARRAY_GET(T116, T115);
  T118 = *(T117);
  T119 = (T107.re);
  T120 = (T118.re);
  T121 = (T119-T120);
  T122 = (T107.im);
  T123 = (T118.im);
  T124 = (T122-T123);
  T125.re = 0.0;
  T125.im = 0.0;
  T126 = T125;
  T126.re = T121;
  T126.im = T124;
  T127 = (T126.im);
  T128 = (-T127);
  T129 = ((_real64)(1));
  T130 = (T128*T129);
  T131 = (T126.re);
  T132 = ((_real64)(1));
  T133 = (T131*T132);
  T134.re = 0.0;
  T134.im = 0.0;
  T135 = T134;
  T135.re = T130;
  T135.im = T133;
  T136 = (T6._value);
  T137 = (T136->origin);
  T138 = (T136->blk);
  T139 = (T138.x1);
  T140 = (1*T139);
  T141 = (T137+T140);
  T142 = (T136->factoredOffs);
  T143 = (T141-T142);
  T144 = (T136->data);
  T145 = _ARRAY_GET(T144, T143);
  T146 = (T36.re);
  T147 = (T96.re);
  T148 = (T146+T147);
  T149 = (T36.im);
  T150 = (T96.im);
  T151 = (T149+T150);
  T152.re = 0.0;
  T152.im = 0.0;
  T153 = T152;
  T153.re = T148;
  T153.im = T151;
  (*T145) = T153;
  T154 = (T36.re);
  T155 = (T96.re);
  T156 = (T154-T155);
  T157 = (T36.im);
  T158 = (T96.im);
  T159 = (T157-T158);
  T160.re = 0.0;
  T160.im = 0.0;
  T161 = T160;
  T161.re = T156;
  T161.im = T159;
  T162 = (T6._value);
  T163 = (T162->origin);
  T164 = (T162->blk);
  T165 = (T164.x1);
  T166 = (3*T165);
  T167 = (T163+T166);
  T168 = (T162->factoredOffs);
  T169 = (T167-T168);
  T170 = (T162->data);
  T171 = _ARRAY_GET(T170, T169);
  T172 = ((*wk2).re);
  T173 = (T161.re);
  T174 = (T172*T173);
  T175 = ((*wk2).im);
  T176 = (T161.im);
  T177 = (T175*T176);
  T178 = (T174-T177);
  T179 = ((*wk2).im);
  T180 = (T161.re);
  T181 = (T179*T180);
  T182 = ((*wk2).re);
  T183 = (T161.im);
  T184 = (T182*T183);
  T185 = (T181+T184);
  T186.re = 0.0;
  T186.im = 0.0;
  T187 = T186;
  T187.re = T178;
  T187.im = T185;
  (*T171) = T187;
  T188 = (T66.re);
  T189 = (T135.re);
  T190 = (T188+T189);
  T191 = (T66.im);
  T192 = (T135.im);
  T193 = (T191+T192);
  T194.re = 0.0;
  T194.im = 0.0;
  T195 = T194;
  T195.re = T190;
  T195.im = T193;
  T196 = (T6._value);
  T197 = (T196->origin);
  T198 = (T196->blk);
  T199 = (T198.x1);
  T200 = (2*T199);
  T201 = (T197+T200);
  T202 = (T196->factoredOffs);
  T203 = (T201-T202);
  T204 = (T196->data);
  T205 = _ARRAY_GET(T204, T203);
  T206 = ((*wk1).re);
  T207 = (T195.re);
  T208 = (T206*T207);
  T209 = ((*wk1).im);
  T210 = (T195.im);
  T211 = (T209*T210);
  T212 = (T208-T211);
  T213 = ((*wk1).im);
  T214 = (T195.re);
  T215 = (T213*T214);
  T216 = ((*wk1).re);
  T217 = (T195.im);
  T218 = (T216*T217);
  T219 = (T215+T218);
  T220.re = 0.0;
  T220.im = 0.0;
  T221 = T220;
  T221.re = T212;
  T221.im = T219;
  (*T205) = T221;
  T222 = (T66.re);
  T223 = (T135.re);
  T224 = (T222-T223);
  T225 = (T66.im);
  T226 = (T135.im);
  T227 = (T225-T226);
  T228.re = 0.0;
  T228.im = 0.0;
  T229 = T228;
  T229.re = T224;
  T229.im = T227;
  T230 = (T6._value);
  T231 = (T230->origin);
  T232 = (T230->blk);
  T233 = (T232.x1);
  T234 = (4*T233);
  T235 = (T231+T234);
  T236 = (T230->factoredOffs);
  T237 = (T235-T236);
  T238 = (T230->data);
  T239 = _ARRAY_GET(T238, T237);
  T240 = ((*wk3).re);
  T241 = (T229.re);
  T242 = (T240*T241);
  T243 = ((*wk3).im);
  T244 = (T229.im);
  T245 = (T243*T244);
  T246 = (T242-T245);
  T247 = ((*wk3).im);
  T248 = (T229.re);
  T249 = (T247*T248);
  T250 = ((*wk3).re);
  T251 = (T229.im);
  T252 = (T250*T251);
  T253 = (T249+T252);
  T254.re = 0.0;
  T254.im = 0.0;
  T255 = T254;
  T255.re = T246;
  T255.im = T253;
  (*T239) = T255;
  T256 = (*A);
  T257 = T256;
  T258 = __dom_599569(&(T257), 146, "test/release/examples/hpcc/fft.chpl");
  T259 = (T2._value);
  T260 = T259;
  T261 = (T259->dom);
  T262 = (T261->ranges);
  T263 = (T262.x1);
  T264 = __copy_547955(&(T263));
  T265 = T264;
  T266 = (T264._stride);
  T267 = (T266>0);
  if (T267) {
    T268 = (T264._low);
    T269 = T268;
  } else {
    T270 = (T264._high);
    T269 = T270;
  }
  T271 = T269;
  T272 = (T264._low);
  T273 = (T272<=T269);
  if (T273) {
  } else {
  }
  T274 = (T258._value);
  T275 = (T274->ranges);
  T276 = (T275.x1);
  T277 = __copy_547955(&(T276));
  T278 = T277;
  T279 = (T277._stride);
  T280 = (T279>0);
  if (T280) {
    T281 = (T277._low);
    T282 = T281;
  } else {
    T283 = (T277._high);
    T282 = T283;
  }
  T284 = T282;
  T285 = (T277._low);
  T286 = (T285<=T282);
  if (T286) {
    T287 = (T277._high);
    T288 = (T282<=T287);
    T289 = T288;
  } else {
    T289 = false;
  }
  T290 = T289;
  while (T290) {
    T291 = (T260->origin);
    T292 = (T260->off);
    T293 = (T292.x1);
    T294 = (T271-T293);
    T295 = (T260->blk);
    T296 = (T295.x1);
    T297 = (T294*T296);
    T298 = (T260->str);
    T299 = (T298.x1);
    T300 = ((int64_t)(T299));
    T301 = (T297/T300);
    T302 = (T291+T301);
    T303 = ((int32_t)(T302));
    T304 = (T260->data);
    T305 = _ARRAY_GET(T304, T303);
    T306 = T305;
    T307 = (T256._value);
    T308 = (T307->origin);
    T309 = (T307->off);
    T310 = (T309.x1);
    T311 = (T284-T310);
    T312 = (T307->blk);
    T313 = (T312.x1);
    T314 = (T311*T313);
    T315 = (T307->str);
    T316 = (T315.x1);
    T317 = ((int64_t)(T316));
    T318 = (T314/T317);
    T319 = (T308+T318);
    T320 = ((int32_t)(T319));
    T321 = (T307->data);
    T322 = _ARRAY_GET(T321, T320);
    T323 = *(T306);
    (*T322) = T323;
    T324 = (T265._stride);
    T325 = ((int64_t)(T324));
    T326 = (T271+T325);
    T271 = T326;
    T327 = (T265._low);
    T328 = (T327<=T326);
    if (T328) {
    } else {
    }
    T329 = (T278._stride);
    T330 = ((int64_t)(T329));
    T331 = (T284+T330);
    T284 = T331;
    T332 = (T278._low);
    T333 = (T332<=T331);
    if (T333) {
      T334 = (T278._high);
      T335 = (T331<=T334);
      T336 = T335;
    } else {
      T336 = false;
    }
    T290 = T336;
  }
  (*A) = T256;
  return;
}

/* fft.chpl:146 */
void _butterfly_638912(_real64 wk1, _real64 wk2, _real64 wk3, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1* const A) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T2;
  _array_int32_t__complex128_1_SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T6;
  range_int32_t_bounded_0 T3;
  _domain_1_SingleLocaleArithmeticDomain_1_int32_t_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T5;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T7 = NULL;
  int32_t T8;
  _tuple_1_int32_t T9;
  int32_t T10;
  int32_t T11;
  int32_t T12;
  int32_t T13;
  int32_t T14;
  _ddata__complex128 T15 = NULL;
  _complex128 T17;
  _ref__complex128 T16 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T18 = NULL;
  int32_t T19;
  _tuple_1_int32_t T20;
  int32_t T21;
  int32_t T22;
  int32_t T23;
  int32_t T24;
  int32_t T25;
  _ddata__complex128 T26 = NULL;
  _complex128 T28;
  _ref__complex128 T27 = NULL;
  _real64 T29;
  _real64 T30;
  _real64 T31;
  _real64 T32;
  _real64 T33;
  _real64 T34;
  _complex128 T35;
  _complex128 T36;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T37 = NULL;
  int32_t T38;
  _tuple_1_int32_t T39;
  int32_t T40;
  int32_t T41;
  int32_t T42;
  int32_t T43;
  int32_t T44;
  _ddata__complex128 T45 = NULL;
  _complex128 T47;
  _ref__complex128 T46 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T48 = NULL;
  int32_t T49;
  _tuple_1_int32_t T50;
  int32_t T51;
  int32_t T52;
  int32_t T53;
  int32_t T54;
  int32_t T55;
  _ddata__complex128 T56 = NULL;
  _complex128 T58;
  _ref__complex128 T57 = NULL;
  _real64 T59;
  _real64 T60;
  _real64 T61;
  _real64 T62;
  _real64 T63;
  _real64 T64;
  _complex128 T65;
  _complex128 T66;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T67 = NULL;
  int32_t T68;
  _tuple_1_int32_t T69;
  int32_t T70;
  int32_t T71;
  int32_t T72;
  int32_t T73;
  int32_t T74;
  _ddata__complex128 T75 = NULL;
  _complex128 T77;
  _ref__complex128 T76 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T78 = NULL;
  int32_t T79;
  _tuple_1_int32_t T80;
  int32_t T81;
  int32_t T82;
  int32_t T83;
  int32_t T84;
  int32_t T85;
  _ddata__complex128 T86 = NULL;
  _complex128 T88;
  _ref__complex128 T87 = NULL;
  _real64 T89;
  _real64 T90;
  _real64 T91;
  _real64 T92;
  _real64 T93;
  _real64 T94;
  _complex128 T95;
  _complex128 T96;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T97 = NULL;
  int32_t T98;
  _tuple_1_int32_t T99;
  int32_t T100;
  int32_t T101;
  int32_t T102;
  int32_t T103;
  int32_t T104;
  _ddata__complex128 T105 = NULL;
  _complex128 T107;
  _ref__complex128 T106 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T108 = NULL;
  int32_t T109;
  _tuple_1_int32_t T110;
  int32_t T111;
  int32_t T112;
  int32_t T113;
  int32_t T114;
  int32_t T115;
  _ddata__complex128 T116 = NULL;
  _complex128 T118;
  _ref__complex128 T117 = NULL;
  _real64 T119;
  _real64 T120;
  _real64 T121;
  _real64 T122;
  _real64 T123;
  _real64 T124;
  _complex128 T125;
  _complex128 T126;
  _real64 T127;
  _real64 T128;
  _real64 T129;
  _real64 T130;
  _real64 T131;
  _real64 T132;
  _real64 T133;
  _complex128 T134;
  _complex128 T135;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T136 = NULL;
  int32_t T137;
  _tuple_1_int32_t T138;
  int32_t T139;
  int32_t T140;
  int32_t T141;
  int32_t T142;
  int32_t T143;
  _ddata__complex128 T144 = NULL;
  _ref__complex128 T145 = NULL;
  _real64 T146;
  _real64 T147;
  _real64 T148;
  _real64 T149;
  _real64 T150;
  _real64 T151;
  _complex128 T152;
  _complex128 T153;
  _real64 T154;
  _real64 T155;
  _real64 T156;
  _real64 T157;
  _real64 T158;
  _real64 T159;
  _complex128 T160;
  _complex128 T161;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T162 = NULL;
  int32_t T163;
  _tuple_1_int32_t T164;
  int32_t T165;
  int32_t T166;
  int32_t T167;
  int32_t T168;
  int32_t T169;
  _ddata__complex128 T170 = NULL;
  _ref__complex128 T171 = NULL;
  _real64 T172;
  _real64 T173;
  _real64 T174;
  _real64 T175;
  _complex128 T176;
  _complex128 T177;
  _real64 T178;
  _real64 T179;
  _real64 T180;
  _real64 T181;
  _real64 T182;
  _real64 T183;
  _complex128 T184;
  _complex128 T185;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T186 = NULL;
  int32_t T187;
  _tuple_1_int32_t T188;
  int32_t T189;
  int32_t T190;
  int32_t T191;
  int32_t T192;
  int32_t T193;
  _ddata__complex128 T194 = NULL;
  _ref__complex128 T195 = NULL;
  _real64 T196;
  _real64 T197;
  _real64 T198;
  _real64 T199;
  _complex128 T200;
  _complex128 T201;
  _real64 T202;
  _real64 T203;
  _real64 T204;
  _real64 T205;
  _real64 T206;
  _real64 T207;
  _complex128 T208;
  _complex128 T209;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T210 = NULL;
  int32_t T211;
  _tuple_1_int32_t T212;
  int32_t T213;
  int32_t T214;
  int32_t T215;
  int32_t T216;
  int32_t T217;
  _ddata__complex128 T218 = NULL;
  _ref__complex128 T219 = NULL;
  _real64 T220;
  _real64 T221;
  _real64 T222;
  _real64 T223;
  _complex128 T224;
  _complex128 T225;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T226;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_1 T228;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T227;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T230 = NULL;
  range_int64_t_bounded_1 T235;
  int64_t T241;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T229 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_1 T231 = NULL;
  _tuple_1_range_int64_t_bounded_1 T232;
  range_int64_t_bounded_1 T233;
  range_int64_t_bounded_1 T234;
  int64_t T239;
  int32_t T236;
  chpl_bool T237;
  int64_t T238;
  int64_t T240;
  int64_t T242;
  chpl_bool T243;
  SingleLocaleArithmeticDomain_1_int64_t_1 T244 = NULL;
  _tuple_1_range_int64_t_bounded_1 T245;
  range_int64_t_bounded_1 T246;
  range_int64_t_bounded_1 T247;
  range_int64_t_bounded_1 T248;
  int64_t T254;
  int64_t T252;
  int32_t T249;
  chpl_bool T250;
  int64_t T251;
  int64_t T253;
  chpl_bool T260;
  int64_t T255;
  chpl_bool T256;
  chpl_bool T259;
  int64_t T257;
  chpl_bool T258;
  _ref__complex128 T276 = NULL;
  int64_t T261;
  _tuple_1_int64_t T262;
  int64_t T263;
  int64_t T264;
  _tuple_1_int64_t T265;
  int64_t T266;
  int64_t T267;
  _tuple_1_int32_t T268;
  int32_t T269;
  int64_t T270;
  int64_t T271;
  int64_t T272;
  int32_t T273;
  _ddata__complex128 T274 = NULL;
  _ref__complex128 T275 = NULL;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T277 = NULL;
  int64_t T278;
  _tuple_1_int64_t T279;
  int64_t T280;
  int64_t T281;
  _tuple_1_int64_t T282;
  int64_t T283;
  int64_t T284;
  _tuple_1_int32_t T285;
  int32_t T286;
  int64_t T287;
  int64_t T288;
  int64_t T289;
  int32_t T290;
  _ddata__complex128 T291 = NULL;
  _ref__complex128 T292 = NULL;
  _complex128 T293;
  int32_t T294;
  int64_t T295;
  int64_t T296;
  int64_t T297;
  chpl_bool T298;
  int32_t T299;
  int64_t T300;
  int64_t T301;
  int64_t T302;
  chpl_bool T303;
  chpl_bool T306;
  int64_t T304;
  chpl_bool T305;
  T1 = (*A);
  T2 = __copy_599498(&(T1), 146, "test/release/examples/hpcc/fft.chpl");
  T3 = _build_range(1, 4);
  T4 = _build_domain(&(T3), 146, "test/release/examples/hpcc/fft.chpl");
  T5 = T2;
  T6 = reindex(&(T5), &(T4), 146, "test/release/examples/hpcc/fft.chpl");
  T7 = (T6._value);
  T8 = (T7->origin);
  T9 = (T7->blk);
  T10 = (T9.x1);
  T11 = (1*T10);
  T12 = (T8+T11);
  T13 = (T7->factoredOffs);
  T14 = (T12-T13);
  T15 = (T7->data);
  T16 = _ARRAY_GET(T15, T14);
  T17 = *(T16);
  T18 = (T6._value);
  T19 = (T18->origin);
  T20 = (T18->blk);
  T21 = (T20.x1);
  T22 = (2*T21);
  T23 = (T19+T22);
  T24 = (T18->factoredOffs);
  T25 = (T23-T24);
  T26 = (T18->data);
  T27 = _ARRAY_GET(T26, T25);
  T28 = *(T27);
  T29 = (T17.re);
  T30 = (T28.re);
  T31 = (T29+T30);
  T32 = (T17.im);
  T33 = (T28.im);
  T34 = (T32+T33);
  T35.re = 0.0;
  T35.im = 0.0;
  T36 = T35;
  T36.re = T31;
  T36.im = T34;
  T37 = (T6._value);
  T38 = (T37->origin);
  T39 = (T37->blk);
  T40 = (T39.x1);
  T41 = (1*T40);
  T42 = (T38+T41);
  T43 = (T37->factoredOffs);
  T44 = (T42-T43);
  T45 = (T37->data);
  T46 = _ARRAY_GET(T45, T44);
  T47 = *(T46);
  T48 = (T6._value);
  T49 = (T48->origin);
  T50 = (T48->blk);
  T51 = (T50.x1);
  T52 = (2*T51);
  T53 = (T49+T52);
  T54 = (T48->factoredOffs);
  T55 = (T53-T54);
  T56 = (T48->data);
  T57 = _ARRAY_GET(T56, T55);
  T58 = *(T57);
  T59 = (T47.re);
  T60 = (T58.re);
  T61 = (T59-T60);
  T62 = (T47.im);
  T63 = (T58.im);
  T64 = (T62-T63);
  T65.re = 0.0;
  T65.im = 0.0;
  T66 = T65;
  T66.re = T61;
  T66.im = T64;
  T67 = (T6._value);
  T68 = (T67->origin);
  T69 = (T67->blk);
  T70 = (T69.x1);
  T71 = (3*T70);
  T72 = (T68+T71);
  T73 = (T67->factoredOffs);
  T74 = (T72-T73);
  T75 = (T67->data);
  T76 = _ARRAY_GET(T75, T74);
  T77 = *(T76);
  T78 = (T6._value);
  T79 = (T78->origin);
  T80 = (T78->blk);
  T81 = (T80.x1);
  T82 = (4*T81);
  T83 = (T79+T82);
  T84 = (T78->factoredOffs);
  T85 = (T83-T84);
  T86 = (T78->data);
  T87 = _ARRAY_GET(T86, T85);
  T88 = *(T87);
  T89 = (T77.re);
  T90 = (T88.re);
  T91 = (T89+T90);
  T92 = (T77.im);
  T93 = (T88.im);
  T94 = (T92+T93);
  T95.re = 0.0;
  T95.im = 0.0;
  T96 = T95;
  T96.re = T91;
  T96.im = T94;
  T97 = (T6._value);
  T98 = (T97->origin);
  T99 = (T97->blk);
  T100 = (T99.x1);
  T101 = (3*T100);
  T102 = (T98+T101);
  T103 = (T97->factoredOffs);
  T104 = (T102-T103);
  T105 = (T97->data);
  T106 = _ARRAY_GET(T105, T104);
  T107 = *(T106);
  T108 = (T6._value);
  T109 = (T108->origin);
  T110 = (T108->blk);
  T111 = (T110.x1);
  T112 = (4*T111);
  T113 = (T109+T112);
  T114 = (T108->factoredOffs);
  T115 = (T113-T114);
  T116 = (T108->data);
  T117 = _ARRAY_GET(T116, T115);
  T118 = *(T117);
  T119 = (T107.re);
  T120 = (T118.re);
  T121 = (T119-T120);
  T122 = (T107.im);
  T123 = (T118.im);
  T124 = (T122-T123);
  T125.re = 0.0;
  T125.im = 0.0;
  T126 = T125;
  T126.re = T121;
  T126.im = T124;
  T127 = (T126.im);
  T128 = (-T127);
  T129 = ((_real64)(1));
  T130 = (T128*T129);
  T131 = (T126.re);
  T132 = ((_real64)(1));
  T133 = (T131*T132);
  T134.re = 0.0;
  T134.im = 0.0;
  T135 = T134;
  T135.re = T130;
  T135.im = T133;
  T136 = (T6._value);
  T137 = (T136->origin);
  T138 = (T136->blk);
  T139 = (T138.x1);
  T140 = (1*T139);
  T141 = (T137+T140);
  T142 = (T136->factoredOffs);
  T143 = (T141-T142);
  T144 = (T136->data);
  T145 = _ARRAY_GET(T144, T143);
  T146 = (T36.re);
  T147 = (T96.re);
  T148 = (T146+T147);
  T149 = (T36.im);
  T150 = (T96.im);
  T151 = (T149+T150);
  T152.re = 0.0;
  T152.im = 0.0;
  T153 = T152;
  T153.re = T148;
  T153.im = T151;
  (*T145) = T153;
  T154 = (T36.re);
  T155 = (T96.re);
  T156 = (T154-T155);
  T157 = (T36.im);
  T158 = (T96.im);
  T159 = (T157-T158);
  T160.re = 0.0;
  T160.im = 0.0;
  T161 = T160;
  T161.re = T156;
  T161.im = T159;
  T162 = (T6._value);
  T163 = (T162->origin);
  T164 = (T162->blk);
  T165 = (T164.x1);
  T166 = (3*T165);
  T167 = (T163+T166);
  T168 = (T162->factoredOffs);
  T169 = (T167-T168);
  T170 = (T162->data);
  T171 = _ARRAY_GET(T170, T169);
  T172 = (T161.re);
  T173 = (wk2*T172);
  T174 = (T161.im);
  T175 = (wk2*T174);
  T176.re = 0.0;
  T176.im = 0.0;
  T177 = T176;
  T177.re = T173;
  T177.im = T175;
  (*T171) = T177;
  T178 = (T66.re);
  T179 = (T135.re);
  T180 = (T178+T179);
  T181 = (T66.im);
  T182 = (T135.im);
  T183 = (T181+T182);
  T184.re = 0.0;
  T184.im = 0.0;
  T185 = T184;
  T185.re = T180;
  T185.im = T183;
  T186 = (T6._value);
  T187 = (T186->origin);
  T188 = (T186->blk);
  T189 = (T188.x1);
  T190 = (2*T189);
  T191 = (T187+T190);
  T192 = (T186->factoredOffs);
  T193 = (T191-T192);
  T194 = (T186->data);
  T195 = _ARRAY_GET(T194, T193);
  T196 = (T185.re);
  T197 = (wk1*T196);
  T198 = (T185.im);
  T199 = (wk1*T198);
  T200.re = 0.0;
  T200.im = 0.0;
  T201 = T200;
  T201.re = T197;
  T201.im = T199;
  (*T195) = T201;
  T202 = (T66.re);
  T203 = (T135.re);
  T204 = (T202-T203);
  T205 = (T66.im);
  T206 = (T135.im);
  T207 = (T205-T206);
  T208.re = 0.0;
  T208.im = 0.0;
  T209 = T208;
  T209.re = T204;
  T209.im = T207;
  T210 = (T6._value);
  T211 = (T210->origin);
  T212 = (T210->blk);
  T213 = (T212.x1);
  T214 = (4*T213);
  T215 = (T211+T214);
  T216 = (T210->factoredOffs);
  T217 = (T215-T216);
  T218 = (T210->data);
  T219 = _ARRAY_GET(T218, T217);
  T220 = (T209.re);
  T221 = (wk3*T220);
  T222 = (T209.im);
  T223 = (wk3*T222);
  T224.re = 0.0;
  T224.im = 0.0;
  T225 = T224;
  T225.re = T221;
  T225.im = T223;
  (*T219) = T225;
  T226 = (*A);
  T227 = T226;
  T228 = __dom_599569(&(T227), 146, "test/release/examples/hpcc/fft.chpl");
  T229 = (T2._value);
  T230 = T229;
  T231 = (T229->dom);
  T232 = (T231->ranges);
  T233 = (T232.x1);
  T234 = __copy_547955(&(T233));
  T235 = T234;
  T236 = (T234._stride);
  T237 = (T236>0);
  if (T237) {
    T238 = (T234._low);
    T239 = T238;
  } else {
    T240 = (T234._high);
    T239 = T240;
  }
  T241 = T239;
  T242 = (T234._low);
  T243 = (T242<=T239);
  if (T243) {
  } else {
  }
  T244 = (T228._value);
  T245 = (T244->ranges);
  T246 = (T245.x1);
  T247 = __copy_547955(&(T246));
  T248 = T247;
  T249 = (T247._stride);
  T250 = (T249>0);
  if (T250) {
    T251 = (T247._low);
    T252 = T251;
  } else {
    T253 = (T247._high);
    T252 = T253;
  }
  T254 = T252;
  T255 = (T247._low);
  T256 = (T255<=T252);
  if (T256) {
    T257 = (T247._high);
    T258 = (T252<=T257);
    T259 = T258;
  } else {
    T259 = false;
  }
  T260 = T259;
  while (T260) {
    T261 = (T230->origin);
    T262 = (T230->off);
    T263 = (T262.x1);
    T264 = (T241-T263);
    T265 = (T230->blk);
    T266 = (T265.x1);
    T267 = (T264*T266);
    T268 = (T230->str);
    T269 = (T268.x1);
    T270 = ((int64_t)(T269));
    T271 = (T267/T270);
    T272 = (T261+T271);
    T273 = ((int32_t)(T272));
    T274 = (T230->data);
    T275 = _ARRAY_GET(T274, T273);
    T276 = T275;
    T277 = (T226._value);
    T278 = (T277->origin);
    T279 = (T277->off);
    T280 = (T279.x1);
    T281 = (T254-T280);
    T282 = (T277->blk);
    T283 = (T282.x1);
    T284 = (T281*T283);
    T285 = (T277->str);
    T286 = (T285.x1);
    T287 = ((int64_t)(T286));
    T288 = (T284/T287);
    T289 = (T278+T288);
    T290 = ((int32_t)(T289));
    T291 = (T277->data);
    T292 = _ARRAY_GET(T291, T290);
    T293 = *(T276);
    (*T292) = T293;
    T294 = (T235._stride);
    T295 = ((int64_t)(T294));
    T296 = (T241+T295);
    T241 = T296;
    T297 = (T235._low);
    T298 = (T297<=T296);
    if (T298) {
    } else {
    }
    T299 = (T248._stride);
    T300 = ((int64_t)(T299));
    T301 = (T254+T300);
    T254 = T301;
    T302 = (T248._low);
    T303 = (T302<=T301);
    if (T303) {
      T304 = (T248._high);
      T305 = (T301<=T304);
      T306 = T305;
    } else {
      T306 = false;
    }
    T260 = T306;
  }
  (*A) = T226;
  return;
}

/* fft.chpl:162 */
int32_t log4(int64_t x) {
  int32_t T2;
  int32_t T1;
  T1 = logBasePow2(x, 2, 162, "test/release/examples/hpcc/fft.chpl");
  T2 = T1;
  return T2;
}

/* fft.chpl:165 */
chpl_bool verifyResults(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const z, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Z, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Twiddles) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T6;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T5;
  chpl_bool T96;
  _complex128 T7;
  _real64 T8;
  _complex128 T9;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T11;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T10;
  _complex128 T12;
  _real64 T13;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T15 = NULL;
  int64_t T21;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T14 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_0 T16 = NULL;
  _tuple_1_range_int64_t_bounded_0 T17;
  range_int64_t_bounded_0 T18;
  range_int64_t_bounded_0 T19;
  int64_t T20;
  SingleLocaleArithmeticDomain_1_int64_t_0 T22 = NULL;
  range_int64_t_bounded_0 T24;
  _tuple_1_range_int64_t_bounded_0 T23;
  range_int64_t_bounded_0 T25;
  int64_t T26;
  int64_t T28;
  int64_t T27;
  int64_t T30;
  int64_t T29;
  _ref_int64_t T31 = NULL;
  _ref_int64_t T33 = NULL;
  int64_t T32;
  int64_t T34;
  int64_t T35;
  int64_t T36;
  int64_t T37;
  int32_t T38;
  _ddata__complex128 T39 = NULL;
  _complex128 T41;
  _ref__complex128 T40 = NULL;
  _real64 T42;
  _real64 T43;
  _real64 T44;
  _complex128 T45;
  _complex128 T46;
  _real64 T47;
  _real64 T48;
  _real64 T49;
  _real64 T50;
  _complex128 T51;
  _complex128 T52;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T53 = NULL;
  int64_t T54;
  int64_t T55;
  int64_t T56;
  int64_t T57;
  int32_t T58;
  _ddata__complex128 T59 = NULL;
  _ref__complex128 T60 = NULL;
  int64_t T61;
  _ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T62 = NULL;
  _ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T63 = NULL;
  _ic__HYPHEN_ T64 = NULL;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T65;
  _tuple_2_int32_t_int32_t T66;
  _ic__ASTERISK__ASTERISK_ T67 = NULL;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T68;
  _tuple_2_int32_t_int32_t T69;
  _ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T70 = NULL;
  _ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T71 = NULL;
  __ic__HYPHEN__653437 T72 = NULL;
  _tuple_2__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T73;
  _tuple_2_int32_t_int32_t T74;
  __ic__ASTERISK__ASTERISK__654017 T75 = NULL;
  _tuple_2__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T76;
  _tuple_2_int32_t_int32_t T77;
  _ic__PLUS_ T78 = NULL;
  _tuple_2__ic__ASTERISK__ASTERISK__int32_t T79;
  _tuple_2_int32_t_int32_t T80;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T81;
  _tuple_2_int32_t_int32_t T82;
  _ic_sqrt T83 = NULL;
  _tuple_2__ic__ASTERISK__ASTERISK__int32_t T84;
  _tuple_2_int32_t_int32_t T85;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T86;
  _tuple_2_int32_t_int32_t T87;
  _max__real64 T90 = NULL;
  _max__real64 T88 = NULL;
  _real64 T89;
  _real64 T91;
  _real64 T92;
  _real64 T93;
  _real64 T94;
  chpl_bool T95;
  T1 = (*Twiddles);
  T2 = T1;
  T3 = (*Z);
  T4 = T3;
  T5 = (*z);
  T6 = T5;
  if (printArrays) {
    _writeln_528639("After FFT, Z is: ", &(T4), "\n", 166, "test/release/examples/hpcc/fft.chpl");
  }
  T7.re = 0.0;
  T7.im = 0.0;
  T8 = ((_real64)(m));
  T9.re = 0.0;
  T9.im = 0.0;
  T10 = T4;
  T11 = __dom_470951(&(T10), 168, "test/release/examples/hpcc/fft.chpl");
  T12.re = 0.0;
  T12.im = 0.0;
  T13 = T8;
  T14 = (T4._value);
  T15 = T14;
  T16 = (T14->dom);
  T17 = (T16->ranges);
  T18 = (T17.x1);
  T19 = __copy_429953(&(T18));
  T20 = (T19._low);
  T21 = T20;
  T22 = (T11._value);
  T23 = (T22->ranges);
  T24 = (T23.x1);
  T25 = __copy_429953(&(T24));
  T26 = 0;
  T27 = (T25._low);
  T28 = T27;
  T29 = (T25._high);
  T30 = T29;
  for (T26 = T28; T26 <= T30; T26 += 1) {
    T31 = &(T26);
    T32 = T21;
    T33 = &(T32);
    T34 = (T15->origin);
    T35 = (T34+T32);
    T36 = (T15->factoredOffs);
    T37 = (T35-T36);
    T38 = ((int32_t)(T37));
    T39 = (T15->data);
    T40 = _ARRAY_GET(T39, T38);
    T41 = *(T40);
    T42 = (T41.re);
    T43 = (T41.im);
    T44 = (-T43);
    T45.re = 0.0;
    T45.im = 0.0;
    T46 = T45;
    T46.re = T42;
    T46.im = T44;
    T47 = (T46.re);
    T48 = (T47/T13);
    T49 = (T46.im);
    T50 = (T49/T13);
    T51.re = 0.0;
    T51.im = 0.0;
    T52 = T51;
    T52.re = T48;
    T52.im = T50;
    T53 = (T4._value);
    T54 = (T53->origin);
    T55 = (T54+T26);
    T56 = (T53->factoredOffs);
    T57 = (T55-T56);
    T58 = ((int32_t)(T57));
    T59 = (T53->data);
    T60 = _ARRAY_GET(T59, T58);
    (*T60) = T52;
    T61 = (T32+1);
    T21 = T61;
  }
  bitReverseShuffle(&(T4));
  dfft(&(T4), &(T2));
  if (printArrays) {
    _writeln_528639("After inverse FFT, Z is: ", &(T4), "\n", 172, "test/release/examples/hpcc/fft.chpl");
  }
  T62 = (_ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T62->_0_this = T6;
  T62->_2_this = nil;
  T62->_3_i = 0;
  T62->_4__tmp = 0;
  T62->_5__tmp = 0;
  T63 = (_ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T63->_0_this = T4;
  T63->_2_this = nil;
  T63->_3_i = 0;
  T63->_4__tmp = 0;
  T63->_5__tmp = 0;
  T64 = (_ic__HYPHEN_)chpl_alloc(sizeof(__ic__HYPHEN_), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T64->_0_a = T62;
  T64->_1_b = T63;
  T64->_2__ret__HYPHEN_ = 0.0;
  T65.x1 = nil;
  T65.x2 = 0;
  T64->_3_ic = T65;
  T66.x1 = 0;
  T66.x2 = 0;
  T64->_4_c = T66;
  T64->_5_this = nil;
  T64->_6_i = 0;
  T64->_7__tmp = 0;
  T64->_8__tmp = 0;
  T67 = (_ic__ASTERISK__ASTERISK_)chpl_alloc(sizeof(__ic__ASTERISK__ASTERISK_), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T67->_0_a = T64;
  T67->_1_b = 2;
  T67->_2__ret__ASTERISK__ASTERISK_ = 0.0;
  T68.x1 = nil;
  T68.x2 = 0;
  T67->_3_ic = T68;
  T69.x1 = 0;
  T69.x2 = 0;
  T67->_4_c = T69;
  T67->_5_this = nil;
  T67->_6_i = 0;
  T67->_7__tmp = 0;
  T67->_8__tmp = 0;
  T70 = (_ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T70->_0_this = T6;
  T70->_2_this = nil;
  T70->_3_i = 0;
  T70->_4__tmp = 0;
  T70->_5__tmp = 0;
  T71 = (_ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T71->_0_this = T4;
  T71->_2_this = nil;
  T71->_3_i = 0;
  T71->_4__tmp = 0;
  T71->_5__tmp = 0;
  T72 = (__ic__HYPHEN__653437)chpl_alloc(sizeof(___ic__HYPHEN__653437), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T72->_0_a = T70;
  T72->_1_b = T71;
  T72->_2__ret__HYPHEN_ = 0.0;
  T73.x1 = nil;
  T73.x2 = 0;
  T72->_3_ic = T73;
  T74.x1 = 0;
  T74.x2 = 0;
  T72->_4_c = T74;
  T72->_5_this = nil;
  T72->_6_i = 0;
  T72->_7__tmp = 0;
  T72->_8__tmp = 0;
  T75 = (__ic__ASTERISK__ASTERISK__654017)chpl_alloc(sizeof(___ic__ASTERISK__ASTERISK__654017), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T75->_0_a = T72;
  T75->_1_b = 2;
  T75->_2__ret__ASTERISK__ASTERISK_ = 0.0;
  T76.x1 = nil;
  T76.x2 = 0;
  T75->_3_ic = T76;
  T77.x1 = 0;
  T77.x2 = 0;
  T75->_4_c = T77;
  T75->_5_this = nil;
  T75->_6_i = 0;
  T75->_7__tmp = 0;
  T75->_8__tmp = 0;
  T78 = (_ic__PLUS_)chpl_alloc(sizeof(__ic__PLUS_), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T78->_0_a = T67;
  T78->_1_b = T75;
  T78->_2__ret__PLUS_ = 0.0;
  T79.x1 = nil;
  T79.x2 = 0;
  T78->_3_ic = T79;
  T80.x1 = 0;
  T80.x2 = 0;
  T78->_4_c = T80;
  T78->_5_b = 0;
  T81.x1 = nil;
  T81.x2 = 0;
  T78->_6_ic = T81;
  T82.x1 = 0;
  T82.x2 = 0;
  T78->_7_c = T82;
  T78->_8_this = nil;
  T78->_9_i = 0;
  T78->_10__tmp = 0;
  T78->_11__tmp = 0;
  T83 = (_ic_sqrt)chpl_alloc(sizeof(__ic_sqrt), "iterator class", 174, "test/release/examples/hpcc/fft.chpl");
  T83->_0_x = T78;
  T83->_1__ret_sqrt = 0.0;
  T84.x1 = nil;
  T84.x2 = 0;
  T83->_2_ic = T84;
  T85.x1 = 0;
  T85.x2 = 0;
  T83->_3_c = T85;
  T83->_4_b = 0;
  T86.x1 = nil;
  T86.x2 = 0;
  T83->_5_ic = T86;
  T87.x1 = 0;
  T87.x2 = 0;
  T83->_6_c = T87;
  T83->_7_this = nil;
  T83->_8_i = 0;
  T83->_9__tmp = 0;
  T83->_10__tmp = 0;
  T88 = (_max__real64)chpl_alloc(sizeof(__max__real64), "instance of class _unknown", 174, "test/release/examples/hpcc/fft.chpl");
  ((object)T88)->_cid = _e__max__real64;
  T88->value = 0.0;
  T89 = min();
  T88->value = T89;
  T90 = _construct__max(T89, T88, 174, "test/release/examples/hpcc/fft.chpl");
  T91 = __reduce_659677(T90, T83, 174, "test/release/examples/hpcc/fft.chpl");
  T92 = ((_real64)(n));
  T93 = (epsilon*T92);
  T94 = (T91/T93);
  if (printStats) {
    _writeln_425807("error = ", T94, 176, "test/release/examples/hpcc/fft.chpl");
  }
  T95 = (T94<threshold);
  T96 = T95;
  return T96;
}

/* fft.chpl:182 */
void printResults(chpl_bool successful, _real64 execTime) {
  _string T1;
  int64_t T2;
  _real64 T3;
  _real64 T4;
  _real64 T5;
  _real64 T6;
  _real64 T7;
  if (successful) {
    T1 = "SUCCESS";
  } else {
    T1 = "FAILURE";
  }
  _writeln_661293("Validation: ", T1, 183, "test/release/examples/hpcc/fft.chpl");
  if (printStats) {
    _writeln_425807("Execution time = ", execTime, 185, "test/release/examples/hpcc/fft.chpl");
    T2 = (m*n);
    T3 = ((_real64)(T2));
    T4 = (T3/execTime);
    T5 = ((_real64)(5));
    T6 = (T5*T4);
    T7 = (T6*1e-9);
    _writeln_425807("Performance (Gflop/s) = ", T7, 186, "test/release/examples/hpcc/fft.chpl");
  }
  return;
}

