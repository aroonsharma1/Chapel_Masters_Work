performance: body of forall loop results in identical duplicate generated code

This was pointed out by Srinivas -- forall loops over distributions,
like RA result in two identical copies of the loop body in question in
the generated code.  It wasn't clear why this would be and it may be a
performance issue, so I wanted to capture it.  The cloning seems to
occur in lowerIterators, but I haven't taken it any farther than that
yet.

Later: Steve believes the cloning is due to multiple yields within the
iterators within the distribution -- inspecting, it's most likely due
to the specialization in the --tasksPerLocale == 1 vs. > 1 cases.  One
approach that he suggests might be to pull out nested functions before
we inline iterators.  Even if that approach wasn't taken, I'm
wondering if there could be some way to have the duplicate yields call
into the same functions (assuming they are calling functions -- in
this case it's the on clause functions) rather than duplicating those
functions.

