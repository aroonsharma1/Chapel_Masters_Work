Summary of Changes:

doc/release/README.io
 I/O documentation

test/release/examples/primers/fileIOv2.chpl
 new I/O primer

compiler/
 primitive.h
 primitive.cpp
   add "fielderator" primitives, enum integer info primitives, 
   "error noexit" for use with existing I/O to print error message
   (ie so halt is easier to write).

 symbol.cpp
   add methods to get the minimal integer size of an enum (for binary I/O)
 
 type.h
   no more dtChapelFile; added dtReader

 buildDefaultFunctions.cpp
   default read/write functions pretty much rewritten...

modules/
 ChapelArray.chpl
   _value.writeThis(writer) -> writer.write(_value)

 ChapelBase.chpl
   _isIntegralType, _isSignedType, etc support volatile variants
   fielderator methods:
     numFields, fieldNumToName, fieldValueByNum, fieldValueByName
   isClassType, isUnionType

 ChapelIO.chpl pretty much rewritten

 ChapelLocale.chpl
   Added extern chpl_set_backtrace_config and calls it with config value
   for --backtrace

 ChapelThreads.chpl
   halt -> primitive chpl_error to avoid module recursion problems

 ChapelTuple.chpl
   Adds support for writing zero-length tuple

 GMP.chpl
   Significantly revised (adds BigInt class)

 Types.chpl
   numBits support for volatile types
   numBytes divides by 8 instead of bitsPerByte to avoid module recursion
   enum_minbits, enum_issigned, enum_mintype, numBits(enumerated)

runtime/
 Adding atomics/, bswap.h, bulkget.h, chplgmp.h, qbuffer.h, qio_formatted.h, qio.h, qio_style.h, bulkget.c, chplgmp.c, deque.c, qbuffer.c, qio.c, qio_formatted.c, sys.c, sys_xsi_strerror_r.c

 arg.h
 chpltypes.h
 stdchpl.h
 stdchplrt.h
  chplexit.c
   include "sys_basic.h" as 1st thing; stdchpl(rt).h include new IO headers

 chpl-mem.h
 chpl-mem.c
   adds IO buffer and GMP number mem descriptors
   adds chpl_allocManyZero

 Makefile.runtime.head
   Adds -DCHPL_RUNTIME=1 since I/O stuff needs to be able to compile
   outside of the Chapel runtime. Adds atomics include dir.

 comm-gasnet.c
   Asks sys_basic.h to include gasnet.h (because one reading of GASNet
   docs requires it to be 1st header file included).
   Uses memcpy calls to prevent some type-punned pointer errors.

 error.c
   Adds backtrace mechanism (code for GASNet Tools version and
   glibc backtrace version), enabled with --backtrace.
   Adds chpl_error_noexit

 main.c
   If we have a build with GASNet Tools, init GASNet backtrace.
   Added a call to setlocale(LC_CTYPE,"") which indicates to the
   system that we are 'locale aware' as the new I/O routines are
   locale aware and support UTF-8 (and other multibyte encodings).

 tasks-fifo.c
   Set main thread thread private data so that chpl_task_getID() can
   be called from chpl_rt_utils_init. This might be redundant with
   other patches?

