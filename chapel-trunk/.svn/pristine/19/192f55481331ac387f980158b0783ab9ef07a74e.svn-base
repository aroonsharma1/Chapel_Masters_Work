/* fft-nocopy.chpl:1 */
void __init_fft_HYPHEN_nocopy(void) {
  chpl_bool T1;
  int64_t T5;
  chpl_bool T2;
  chpl_bool T3;
  int64_t T4;
  _string T6;
  int64_t T7;
  int64_t T8;
  int64_t T9;
  _real64 T14;
  chpl_bool T10;
  chpl_bool T11;
  _real64 T12;
  _real64 T13;
  _string T15;
  _real64 T16;
  _real64 T19;
  chpl_bool T17;
  chpl_bool T18;
  _string T20;
  _real64 T21;
  chpl_bool T24;
  chpl_bool T22;
  chpl_bool T23;
  _string T25;
  chpl_bool T26;
  int64_t T32;
  chpl_bool T27;
  chpl_bool T28;
  int64_t T30;
  int64_t T29;
  int64_t T31;
  _string T33;
  int64_t T34;
  chpl_bool T37;
  chpl_bool T35;
  chpl_bool T36;
  _string T38;
  chpl_bool T39;
  chpl_bool T42;
  chpl_bool T40;
  chpl_bool T41;
  _string T43;
  chpl_bool T44;
  chpl_bool T47;
  chpl_bool T45;
  chpl_bool T46;
  _string T48;
  chpl_bool T49;
  T1 = (!__run_fft_HYPHEN_nocopy_firsttime26);
  if (T1) {
    goto _end___init_fft_HYPHEN_nocopy;
  }
  __run_fft_HYPHEN_nocopy_firsttime26 = false;
  if (__run_BitOps_firsttime19) {
    __init_BitOps();
  }
  __run_BitOps_firsttime19 = false;
  if (__run_Random_firsttime18) {
    __init_Random(1, "fft/fft-nocopy.chpl");
  }
  __run_Random_firsttime18 = false;
  if (__run_Time_firsttime17) {
    __init_Time();
  }
  __run_Time_firsttime17 = false;
  if (__run_HPCCProblemSize_firsttime25) {
    __init_HPCCProblemSize();
  }
  __run_HPCCProblemSize_firsttime25 = false;
  T2 = _config_has_value("n", "fft-nocopy");
  T3 = (!T2);
  if (T3) {
    T4 = computeProblemSize(2, true);
    T5 = T4;
  } else {
    T6 = _config_get_value("n", "fft-nocopy");
    T7 = _string_to_int64_t(T6, 0, "<command line setting of 'n'>");
    T5 = T7;
  }
  n = T5;
  T8 = ((int64_t)(2));
  T9 = pow(T8, n);
  m = T9;
  T10 = _config_has_value("epsilon", "fft-nocopy");
  T11 = (!T10);
  if (T11) {
    T12 = (-51.0);
    T13 = pow(2.0, T12);
    T14 = T13;
  } else {
    T15 = _config_get_value("epsilon", "fft-nocopy");
    T16 = _string_to_real64(T15, 0, "<command line setting of 'epsilon'>");
    T14 = T16;
  }
  epsilon = T14;
  T17 = _config_has_value("threshold", "fft-nocopy");
  T18 = (!T17);
  if (T18) {
    T19 = 16.0;
  } else {
    T20 = _config_get_value("threshold", "fft-nocopy");
    T21 = _string_to_real64(T20, 0, "<command line setting of 'threshold'>");
    T19 = T21;
  }
  threshold = T19;
  T22 = _config_has_value("useRandomSeed", "fft-nocopy");
  T23 = (!T22);
  if (T23) {
    T24 = true;
  } else {
    T25 = _config_get_value("useRandomSeed", "fft-nocopy");
    T26 = _string_to_chpl_bool(T25, 0, "<command line setting of 'useRandomSeed'>");
    T24 = T26;
  }
  useRandomSeed = T24;
  T27 = _config_has_value("seed", "fft-nocopy");
  T28 = (!T27);
  if (T28) {
    if (useRandomSeed) {
      T29 = clockMS(SeedGenerator, 19, "fft/fft-nocopy.chpl");
      T30 = T29;
    } else {
      T31 = ((int64_t)(314159265));
      T30 = T31;
    }
    T32 = T30;
  } else {
    T33 = _config_get_value("seed", "fft-nocopy");
    T34 = _string_to_int64_t(T33, 0, "<command line setting of 'seed'>");
    T32 = T34;
  }
  seed = T32;
  T35 = _config_has_value("printParams", "fft-nocopy");
  T36 = (!T35);
  if (T36) {
    T37 = true;
  } else {
    T38 = _config_get_value("printParams", "fft-nocopy");
    T39 = _string_to_chpl_bool(T38, 0, "<command line setting of 'printParams'>");
    T37 = T39;
  }
  printParams = T37;
  T40 = _config_has_value("printArrays", "fft-nocopy");
  T41 = (!T40);
  if (T41) {
    T42 = false;
  } else {
    T43 = _config_get_value("printArrays", "fft-nocopy");
    T44 = _string_to_chpl_bool(T43, 0, "<command line setting of 'printArrays'>");
    T42 = T44;
  }
  printArrays = T42;
  T45 = _config_has_value("printStats", "fft-nocopy");
  T46 = (!T45);
  if (T46) {
    T47 = true;
  } else {
    T48 = _config_get_value("printStats", "fft-nocopy");
    T49 = _string_to_chpl_bool(T48, 0, "<command line setting of 'printStats'>");
    T47 = T49;
  }
  printStats = T47;
  _end___init_fft_HYPHEN_nocopy:;
  return;
}

/* fft-nocopy.chpl:26 */
void _chpl_main(void) {
  _EndCount T2 = NULL;
  _EndCount T1 = NULL;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T6;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T5;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T3;
  SingleLocaleArithmeticDomain_1_int64_t_0 T4 = NULL;
  range_int64_t_bounded_0 T11;
  int64_t T7;
  int64_t T8;
  range_int64_t_bounded_0 T10;
  int64_t T9;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T12;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T15;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T13;
  __ArrayTypeInfo_700613 T14;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T16;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T20;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T19;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T17;
  SingleLocaleArithmeticDomain_1_int64_t_0 T18 = NULL;
  range_int64_t_bounded_0 T23;
  range_int64_t_bounded_0 T22;
  int64_t T21;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T24;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T27;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T25;
  __ArrayTypeInfo_700613 T26;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T28;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T31;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T29;
  __ArrayTypeInfo_700613 T30;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T32;
  _real64 T34;
  _real64 T33;
  _complex128 T35;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T37;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T36;
  _complex128 T38;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T40 = NULL;
  int64_t T46;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T39 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_0 T41 = NULL;
  _tuple_1_range_int64_t_bounded_0 T42;
  range_int64_t_bounded_0 T43;
  range_int64_t_bounded_0 T44;
  int64_t T45;
  SingleLocaleArithmeticDomain_1_int64_t_0 T47 = NULL;
  range_int64_t_bounded_0 T49;
  _tuple_1_range_int64_t_bounded_0 T48;
  range_int64_t_bounded_0 T50;
  int64_t T51;
  int64_t T53;
  int64_t T52;
  int64_t T55;
  int64_t T54;
  _ref_int64_t T56 = NULL;
  _ref_int64_t T58 = NULL;
  int64_t T57;
  int64_t T59;
  int64_t T60;
  int64_t T61;
  int64_t T62;
  int32_t T63;
  _ddata__complex128 T64 = NULL;
  _complex128 T66;
  _ref__complex128 T65 = NULL;
  _real64 T67;
  _real64 T68;
  _real64 T69;
  _complex128 T70;
  _complex128 T71;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T72 = NULL;
  int64_t T73;
  int64_t T74;
  int64_t T75;
  int64_t T76;
  int32_t T77;
  _ddata__complex128 T78 = NULL;
  _ref__complex128 T79 = NULL;
  int64_t T80;
  _real64 T81;
  _real64 T82;
  chpl_bool T83;
  __init__Program(-1, "<internal>");
  T1 = _endCountAlloc(-1, "<internal>");
  T2 = T1;
  startTrackingMem();
  __init_fft_HYPHEN_nocopy();
  printConfiguration();
  distributed_warning(Block, 29, "fft/fft-nocopy.chpl");
  T3._value = nil;
  T4 = ((SingleLocaleArithmeticDomain_1_int64_t_0)(nil));
  T3._value = T4;
  T5 = __construct__domain_430768(1, T4, 405, "/Users/figueroa/chapel/modules/standard/SingleLocaleArithmetic.chpl");
  T6 = T5;
  T7 = ((int64_t)(4));
  T8 = (m/T7);
  T9 = ((int64_t)(0));
  T10 = __build_range_25268(T9, T8);
  T11 = _build_open_interval_upper(&(T10), 29, "fft/fft-nocopy.chpl");
  T6 = __EQUAL__441768(&(T6), &(T11), 29, "fft/fft-nocopy.chpl");
  T12 = T6;
  T13 = __build_domain_447257(&(T12));
  T14 = __build_array_type_447288(&(T13));
  T15 = __init_470219(&(T14), 30, "fft/fft-nocopy.chpl");
  T16 = T15;
  distributed_warning(Block, 32, "fft/fft-nocopy.chpl");
  T17._value = nil;
  T18 = ((SingleLocaleArithmeticDomain_1_int64_t_0)(nil));
  T17._value = T18;
  T19 = __construct__domain_430768(1, T18, 405, "/Users/figueroa/chapel/modules/standard/SingleLocaleArithmetic.chpl");
  T20 = T19;
  T21 = ((int64_t)(0));
  T22 = __build_range_25268(T21, m);
  T23 = _build_open_interval_upper(&(T22), 32, "fft/fft-nocopy.chpl");
  T20 = __EQUAL__441768(&(T20), &(T23), 32, "fft/fft-nocopy.chpl");
  T24 = T20;
  T25 = __build_domain_447257(&(T24));
  T26 = __build_array_type_447288(&(T25));
  T27 = __init_470219(&(T26), 33, "fft/fft-nocopy.chpl");
  T28 = T27;
  T29 = __build_domain_447257(&(T24));
  T30 = __build_array_type_447288(&(T29));
  T31 = __init_470219(&(T30), 33, "fft/fft-nocopy.chpl");
  T32 = T31;
  initVectors(&(T16), &(T32));
  T33 = getCurrentTime(TimeUnits_seconds, 37, "fft/fft-nocopy.chpl");
  T34 = T33;
  T35.re = 0.0;
  T35.im = 0.0;
  T36 = T27;
  T37 = __dom_470951(&(T36), 39, "fft/fft-nocopy.chpl");
  T38.re = 0.0;
  T38.im = 0.0;
  T39 = (T32._value);
  T40 = T39;
  T41 = (T39->dom);
  T42 = (T41->ranges);
  T43 = (T42.x1);
  T44 = __copy_429953(&(T43));
  T45 = (T44._low);
  T46 = T45;
  T47 = (T37._value);
  T48 = (T47->ranges);
  T49 = (T48.x1);
  T50 = __copy_429953(&(T49));
  T51 = 0;
  T52 = (T50._low);
  T53 = T52;
  T54 = (T50._high);
  T55 = T54;
  for (T51 = T53; T51 <= T55; T51 += 1) {
    T56 = &(T51);
    T57 = T46;
    T58 = &(T57);
    T59 = (T40->origin);
    T60 = (T59+T57);
    T61 = (T40->factoredOffs);
    T62 = (T60-T61);
    T63 = ((int32_t)(T62));
    T64 = (T40->data);
    T65 = _ARRAY_GET(T64, T63);
    T66 = *(T65);
    T67 = (T66.re);
    T68 = (T66.im);
    T69 = (-T68);
    T70.re = 0.0;
    T70.im = 0.0;
    T71 = T70;
    T71.re = T67;
    T71.im = T69;
    T72 = (T28._value);
    T73 = (T72->origin);
    T74 = (T73+T51);
    T75 = (T72->factoredOffs);
    T76 = (T74-T75);
    T77 = ((int32_t)(T76));
    T78 = (T72->data);
    T79 = _ARRAY_GET(T78, T77);
    (*T79) = T71;
    T80 = (T57+1);
    T46 = T80;
  }
  bitReverseShuffle(&(T28));
  dfft(&(T28), &(T16));
  T81 = getCurrentTime(TimeUnits_seconds, 43, "fft/fft-nocopy.chpl");
  T82 = (T81-T34);
  T83 = verifyResults(&(T32), &(T28), &(T16));
  printResults(T83, T82);
  __waitEndCount_11440(T2, -1, "<internal>");
  return;
}

/* fft-nocopy.chpl:50 */
void printConfiguration(void) {
  if (printParams) {
    printProblemSize(2, m);
  }
  return;
}

/* fft-nocopy.chpl:55 */
void initVectors(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Twiddles, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const z) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  T1 = (*z);
  T2 = T1;
  T3 = (*Twiddles);
  T4 = T3;
  computeTwiddles(&(T4));
  bitReverseShuffle(&(T4));
  fillRandom(&(T2), seed, 59, "fft/fft-nocopy.chpl");
  if (printArrays) {
    _writeln_528639("After initialization, Twiddles is: ", &(T4), "\n", 62, "fft/fft-nocopy.chpl");
    _writeln_528639("z is: ", &(T2), "\n", 63, "fft/fft-nocopy.chpl");
  }
  return;
}

/* fft-nocopy.chpl:68 */
void computeTwiddles(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Twiddles) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  int64_t T5;
  int64_t T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  _real64 T10;
  _real64 T6;
  _real64 T7;
  _real64 T8;
  _real64 T9;
  int64_t T11;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T12 = NULL;
  int64_t T13;
  int64_t T14;
  int64_t T15;
  int64_t T16;
  int32_t T17;
  _ddata__complex128 T18 = NULL;
  _ref__complex128 T19 = NULL;
  _complex128 T20;
  _complex128 T21;
  _real64 T22;
  int64_t T23;
  int64_t T24;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T25 = NULL;
  int64_t T26;
  int64_t T27;
  int64_t T28;
  int64_t T29;
  int32_t T30;
  _ddata__complex128 T31 = NULL;
  _ref__complex128 T32 = NULL;
  _real64 T33;
  _real64 T34;
  _real64 T35;
  _real64 T36;
  _real64 T37;
  _complex128 T38;
  _complex128 T39;
  int64_t T40;
  int64_t T41;
  range_int64_t_bounded_0 T43;
  int64_t T42;
  range_int64_t_bounded_0 T44;
  range_int64_t_bounded_0 T45;
  int64_t T46;
  int64_t T48;
  int64_t T47;
  int64_t T50;
  int64_t T49;
  _ref_int64_t T51 = NULL;
  _real64 T52;
  _real64 T53;
  _real64 T54;
  _real64 T55;
  _real64 T56;
  _real64 T57;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T58 = NULL;
  int64_t T59;
  int64_t T60;
  int64_t T61;
  int64_t T62;
  int32_t T63;
  _ddata__complex128 T64 = NULL;
  _ref__complex128 T65 = NULL;
  _complex128 T66;
  _complex128 T67;
  int64_t T68;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T69 = NULL;
  int64_t T70;
  int64_t T71;
  int64_t T72;
  int64_t T73;
  int32_t T74;
  _ddata__complex128 T75 = NULL;
  _ref__complex128 T76 = NULL;
  _complex128 T77;
  _complex128 T78;
  T1 = (*Twiddles);
  T2 = T1;
  T3 = T1;
  T4 = numElements(&(T3), 69, "fft/fft-nocopy.chpl");
  T5 = T4;
  T6 = atan(1.0);
  T7 = (2.0*T6);
  T8 = ((_real64)(T4));
  T9 = (T7/T8);
  T10 = T9;
  T11 = ((int64_t)(0));
  T12 = (T1._value);
  T13 = (T12->origin);
  T14 = (T13+T11);
  T15 = (T12->factoredOffs);
  T16 = (T14-T15);
  T17 = ((int32_t)(T16));
  T18 = (T12->data);
  T19 = _ARRAY_GET(T18, T17);
  T20.re = 0.0;
  T20.im = 0.0;
  T21 = T20;
  T21.re = 1.0;
  T22 = ((_real64)(0));
  T21.im = T22;
  (*T19) = T21;
  T23 = ((int64_t)(2));
  T24 = (T4/T23);
  T25 = (T1._value);
  T26 = (T25->origin);
  T27 = (T26+T24);
  T28 = (T25->factoredOffs);
  T29 = (T27-T28);
  T30 = ((int32_t)(T29));
  T31 = (T25->data);
  T32 = _ARRAY_GET(T31, T30);
  T33 = ((_real64)(T4));
  T34 = (T9*T33);
  T35 = ((_real64)(2));
  T36 = (T34/T35);
  T37 = cos(T36);
  T38.re = 0.0;
  T38.im = 0.0;
  T39 = T38;
  T39.re = T37;
  T39.im = T37;
  (*T32) = T39;
  T40 = ((int64_t)(2));
  T41 = (T4/T40);
  T42 = ((int64_t)(1));
  T43 = __build_range_25268(T42, T41);
  T44 = _build_open_interval_upper(&(T43), 75, "fft/fft-nocopy.chpl");
  T45 = __copy_429953(&(T44));
  T46 = 0;
  T47 = (T45._low);
  T48 = T47;
  T49 = (T45._high);
  T50 = T49;
  for (T46 = T48; T46 <= T50; T46 += 1) {
    T51 = &(T46);
    T52 = ((_real64)(T46));
    T53 = (T10*T52);
    T54 = cos(T53);
    T55 = ((_real64)(T46));
    T56 = (T10*T55);
    T57 = sin(T56);
    T58 = (T2._value);
    T59 = (T58->origin);
    T60 = (T59+T46);
    T61 = (T58->factoredOffs);
    T62 = (T60-T61);
    T63 = ((int32_t)(T62));
    T64 = (T58->data);
    T65 = _ARRAY_GET(T64, T63);
    T66.re = 0.0;
    T66.im = 0.0;
    T67 = T66;
    T67.re = T54;
    T67.im = T57;
    (*T65) = T67;
    T68 = (T5-T46);
    T69 = (T2._value);
    T70 = (T69->origin);
    T71 = (T70+T68);
    T72 = (T69->factoredOffs);
    T73 = (T71-T72);
    T74 = ((int32_t)(T73));
    T75 = (T69->data);
    T76 = _ARRAY_GET(T75, T74);
    T77.re = 0.0;
    T77.im = 0.0;
    T78 = T77;
    T78.re = T57;
    T78.im = T54;
    (*T76) = T78;
  }
  return;
}

/* fft-nocopy.chpl:84 */
void bitReverseShuffle(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Vect) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  int64_t T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  int32_t T5;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T10;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T7;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T6;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T8;
  __ArrayTypeInfo_700613 T9;
  _complex128 T11;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T13;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T12;
  _complex128 T14;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T15;
  int32_t T16;
  int64_t T25;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T19;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T17;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T18;
  SingleLocaleArithmeticDomain_1_int64_t_0 T20 = NULL;
  _tuple_1_range_int64_t_bounded_0 T21;
  range_int64_t_bounded_0 T22;
  range_int64_t_bounded_0 T23;
  int64_t T24;
  SingleLocaleArithmeticDomain_1_int64_t_0 T26 = NULL;
  range_int64_t_bounded_0 T28;
  _tuple_1_range_int64_t_bounded_0 T27;
  range_int64_t_bounded_0 T29;
  int64_t T30;
  int64_t T32;
  int64_t T31;
  int64_t T34;
  int64_t T33;
  _ref_int64_t T35 = NULL;
  int64_t T38;
  _ref_int64_t T37 = NULL;
  int64_t T36;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T39 = NULL;
  int64_t T40;
  int64_t T41;
  int64_t T42;
  int64_t T43;
  int32_t T44;
  _ddata__complex128 T45 = NULL;
  _complex128 T47;
  _ref__complex128 T46 = NULL;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T48 = NULL;
  int64_t T49;
  int64_t T50;
  int64_t T51;
  int64_t T52;
  int32_t T53;
  _ddata__complex128 T54 = NULL;
  _ref__complex128 T55 = NULL;
  int64_t T56;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T58;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T57;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T60 = NULL;
  int64_t T66;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T59 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_0 T61 = NULL;
  _tuple_1_range_int64_t_bounded_0 T62;
  range_int64_t_bounded_0 T63;
  range_int64_t_bounded_0 T64;
  int64_t T65;
  SingleLocaleArithmeticDomain_1_int64_t_0 T67 = NULL;
  range_int64_t_bounded_0 T69;
  _tuple_1_range_int64_t_bounded_0 T68;
  range_int64_t_bounded_0 T70;
  int64_t T71;
  int64_t T73;
  int64_t T72;
  int64_t T75;
  int64_t T74;
  _ref_int64_t T76 = NULL;
  _ref_int64_t T78 = NULL;
  int64_t T77;
  _ref__complex128 T86 = NULL;
  int64_t T79;
  int64_t T80;
  int64_t T81;
  int64_t T82;
  int32_t T83;
  _ddata__complex128 T84 = NULL;
  _ref__complex128 T85 = NULL;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T87 = NULL;
  int64_t T88;
  int64_t T89;
  int64_t T90;
  int64_t T91;
  int32_t T92;
  _ddata__complex128 T93 = NULL;
  _ref__complex128 T94 = NULL;
  _complex128 T95;
  int64_t T96;
  T1 = (*Vect);
  T2 = T1;
  T3 = T1;
  T4 = numElements(&(T3), 85, "fft/fft-nocopy.chpl");
  T5 = _log2_76322(T4, 85, "fft/fft-nocopy.chpl");
  T6 = T1;
  T7 = __dom_470951(&(T6), 84, "fft/fft-nocopy.chpl");
  T8 = __build_domain_447257(&(T7));
  T9 = __build_array_type_447288(&(T8));
  T10 = __init_470219(&(T9), 86, "fft/fft-nocopy.chpl");
  T11.re = 0.0;
  T11.im = 0.0;
  T12 = T10;
  T13 = __dom_470951(&(T12), 86, "fft/fft-nocopy.chpl");
  T14.re = 0.0;
  T14.im = 0.0;
  T15 = T1;
  T16 = T5;
  T17 = T1;
  T18 = __dom_470951(&(T17), 86, "fft/fft-nocopy.chpl");
  T19 = __build_domain_447257(&(T18));
  T20 = (T19._value);
  T21 = (T20->ranges);
  T22 = (T21.x1);
  T23 = __copy_429953(&(T22));
  T24 = (T23._low);
  T25 = T24;
  T26 = (T13._value);
  T27 = (T26->ranges);
  T28 = (T27.x1);
  T29 = __copy_429953(&(T28));
  T30 = 0;
  T31 = (T29._low);
  T32 = T31;
  T33 = (T29._high);
  T34 = T33;
  for (T30 = T32; T30 <= T34; T30 += 1) {
    T35 = &(T30);
    T36 = T25;
    T37 = &(T36);
    T38 = bitReverse(T36, T16);
    T39 = (T15._value);
    T40 = (T39->origin);
    T41 = (T40+T38);
    T42 = (T39->factoredOffs);
    T43 = (T41-T42);
    T44 = ((int32_t)(T43));
    T45 = (T39->data);
    T46 = _ARRAY_GET(T45, T44);
    T47 = *(T46);
    T48 = (T10._value);
    T49 = (T48->origin);
    T50 = (T49+T30);
    T51 = (T48->factoredOffs);
    T52 = (T50-T51);
    T53 = ((int32_t)(T52));
    T54 = (T48->data);
    T55 = _ARRAY_GET(T54, T53);
    (*T55) = T47;
    T56 = (T36+1);
    T25 = T56;
  }
  T57 = T2;
  T58 = __dom_470951(&(T57), 87, "fft/fft-nocopy.chpl");
  T59 = (T10._value);
  T60 = T59;
  T61 = (T59->dom);
  T62 = (T61->ranges);
  T63 = (T62.x1);
  T64 = __copy_429953(&(T63));
  T65 = (T64._low);
  T66 = T65;
  T67 = (T58._value);
  T68 = (T67->ranges);
  T69 = (T68.x1);
  T70 = __copy_429953(&(T69));
  T71 = 0;
  T72 = (T70._low);
  T73 = T72;
  T74 = (T70._high);
  T75 = T74;
  for (T71 = T73; T71 <= T75; T71 += 1) {
    T76 = &(T71);
    T77 = T66;
    T78 = &(T77);
    T79 = (T60->origin);
    T80 = (T79+T77);
    T81 = (T60->factoredOffs);
    T82 = (T80-T81);
    T83 = ((int32_t)(T82));
    T84 = (T60->data);
    T85 = _ARRAY_GET(T84, T83);
    T86 = T85;
    T87 = (T2._value);
    T88 = (T87->origin);
    T89 = (T88+T71);
    T90 = (T87->factoredOffs);
    T91 = (T89-T90);
    T92 = ((int32_t)(T91));
    T93 = (T87->data);
    T94 = _ARRAY_GET(T93, T92);
    T95 = *(T86);
    (*T94) = T95;
    T96 = (T77+1);
    T66 = T96;
  }
  chpl_free(T10._value->data->_data, 0, 0);
  chpl_free(T10._value->data, 0, 0);
  return;
}

/* fft-nocopy.chpl:91 */
int64_t bitReverse(int64_t val, int32_t revBits) {
  int64_t T11;
  uint64_t T1;
  uint64_t T3;
  uint64_t T2;
  uint64_t T5;
  uint64_t T4;
  int32_t T6;
  uint64_t T7;
  uint64_t T8;
  uint64_t T9;
  int64_t T10;
  T1 = ((uint64_t)(val));
  T2 = ((uint64_t)(INT64(72624976668147840)));
  T3 = bitMatMultOr(T1, T2, 93, "fft/fft-nocopy.chpl");
  T4 = ((uint64_t)(INT64(72624976668147840)));
  T5 = bitMatMultOr(T4, T3, 93, "fft/fft-nocopy.chpl");
  T6 = (64-revBits);
  T7 = (T5<<revBits);
  T8 = (T5>>T6);
  T9 = (T7|T8);
  T10 = ((int64_t)(T9));
  T11 = T10;
  return T11;
}

/* fft-nocopy.chpl:99 */
void dfft(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const A, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const W) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  int64_t T7;
  int64_t T6;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T5;
  int32_t T23;
  int32_t T24;
  int32_t T8;
  int32_t T9;
  int64_t T10;
  int64_t T11;
  int32_t T12;
  range_int32_t_bounded_0 T13;
  range_int32_t_bounded_0 T14;
  int32_t T15;
  int32_t T17;
  int32_t T16;
  int32_t T19;
  int32_t T18;
  _ref_int32_t T20 = NULL;
  int32_t T22;
  int32_t T21;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T26;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T25;
  int32_t T27;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_1 T28;
  range_int32_t_boundedLow_0 T29;
  range_int32_t_boundedLow_0 T30;
  range_int32_t_boundedLow_0 T31;
  int64_t T53;
  int32_t T54;
  range_int32_t_boundedLow_0 T32;
  range_int32_t_boundedLow_0 T33;
  int32_t T35;
  int32_t T34;
  SingleLocaleArithmeticDomain_1_int64_t_1 T36 = NULL;
  range_int64_t_bounded_1 T38;
  _tuple_1_range_int64_t_bounded_1 T37;
  range_int64_t_bounded_1 T39;
  range_int64_t_bounded_1 T40;
  int64_t T46;
  int64_t T44;
  int32_t T41;
  chpl_bool T42;
  int64_t T43;
  int64_t T45;
  chpl_bool T52;
  int64_t T47;
  chpl_bool T48;
  chpl_bool T51;
  int64_t T49;
  chpl_bool T50;
  _complex128 T65;
  int64_t T55;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T56 = NULL;
  int64_t T57;
  int64_t T58;
  int64_t T59;
  int64_t T60;
  int32_t T61;
  _ddata__complex128 T62 = NULL;
  _complex128 T64;
  _ref__complex128 T63 = NULL;
  _complex128 T77;
  int32_t T66;
  int64_t T67;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T68 = NULL;
  int64_t T69;
  int64_t T70;
  int64_t T71;
  int64_t T72;
  int32_t T73;
  _ddata__complex128 T74 = NULL;
  _complex128 T76;
  _ref__complex128 T75 = NULL;
  _complex128 T94;
  _real64 T78;
  _real64 T79;
  _real64 T80;
  _real64 T81;
  _real64 T82;
  _real64 T83;
  _real64 T84;
  _real64 T85;
  _real64 T86;
  _real64 T87;
  _real64 T88;
  _real64 T89;
  _real64 T90;
  _real64 T91;
  _complex128 T92;
  _complex128 T93;
  range_int32_t_bounded_0 T95;
  range_int32_t_bounded_0 T96;
  range_int32_t_bounded_0 T97;
  range_int64_t_bounded_0 T98;
  range_int64_t_bounded_0 T99;
  int64_t T100;
  int64_t T102;
  int64_t T101;
  int64_t T104;
  int64_t T103;
  _ref_int64_t T105 = NULL;
  range_int32_t_bounded_0 T106;
  range_int32_t_bounded_0 T107;
  range_int32_t_bounded_0 T108;
  range_int32_t_bounded_1 T109;
  range_int64_t_bounded_1 T110;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T111;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T112;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T113;
  int32_t T114;
  int32_t T115;
  int64_t T116;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T117 = NULL;
  int64_t T118;
  int64_t T119;
  int64_t T120;
  int64_t T121;
  int32_t T122;
  _ddata__complex128 T123 = NULL;
  _complex128 T125;
  _ref__complex128 T124 = NULL;
  _real64 T126;
  _real64 T127;
  _real64 T128;
  _real64 T129;
  _real64 T130;
  _real64 T131;
  _real64 T132;
  _real64 T133;
  _real64 T134;
  _real64 T135;
  _real64 T136;
  _real64 T137;
  _real64 T138;
  _real64 T139;
  _complex128 T140;
  _complex128 T141;
  _real64 T142;
  _real64 T143;
  _real64 T144;
  _real64 T145;
  _real64 T146;
  _real64 T147;
  _real64 T148;
  _complex128 T149;
  _complex128 T150;
  int64_t T151;
  int64_t T152;
  range_int32_t_bounded_0 T153;
  range_int32_t_bounded_0 T154;
  range_int64_t_bounded_0 T155;
  range_int64_t_bounded_0 T156;
  int64_t T157;
  int64_t T159;
  int64_t T158;
  int64_t T161;
  int64_t T160;
  _ref_int64_t T162 = NULL;
  range_int32_t_bounded_0 T163;
  range_int32_t_bounded_0 T164;
  range_int32_t_bounded_0 T165;
  range_int32_t_bounded_1 T166;
  range_int64_t_bounded_1 T167;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T168;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T169;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T170;
  int32_t T171;
  int32_t T172;
  int64_t T173;
  int64_t T174;
  int64_t T175;
  chpl_bool T176;
  chpl_bool T179;
  int64_t T177;
  chpl_bool T178;
  int32_t T184;
  int64_t T180;
  int64_t T181;
  int32_t T182;
  int32_t T183;
  int32_t T185;
  int64_t T186;
  chpl_bool T187;
  range_int32_t_bounded_0 T188;
  range_int32_t_bounded_0 T189;
  range_int32_t_bounded_0 T190;
  int32_t T191;
  int32_t T193;
  int32_t T192;
  int32_t T195;
  int32_t T194;
  _ref_int32_t T196 = NULL;
  range_int32_t_bounded_0 T197;
  range_int32_t_bounded_0 T198;
  range_int32_t_bounded_1 T199;
  range_int32_t_bounded_1 T200;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T201;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T202;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T203;
  range_int32_t_bounded_0 T204;
  range_int32_t_bounded_0 T205;
  range_int32_t_bounded_0 T206;
  int32_t T207;
  int32_t T209;
  int32_t T208;
  int32_t T211;
  int32_t T210;
  _ref_int32_t T212 = NULL;
  int64_t T213;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T214 = NULL;
  int64_t T215;
  int64_t T216;
  int64_t T217;
  int64_t T218;
  int32_t T219;
  _ddata__complex128 T220 = NULL;
  _complex128 T222;
  _ref__complex128 T221 = NULL;
  int32_t T223;
  int64_t T224;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T225 = NULL;
  int64_t T226;
  int64_t T227;
  int64_t T228;
  int64_t T229;
  int32_t T230;
  _ddata__complex128 T231 = NULL;
  _complex128 T233;
  _ref__complex128 T232 = NULL;
  int64_t T234;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T235 = NULL;
  int64_t T236;
  int64_t T237;
  int64_t T238;
  int64_t T239;
  int32_t T240;
  _ddata__complex128 T241 = NULL;
  _ref__complex128 T242 = NULL;
  _real64 T243;
  _real64 T244;
  _real64 T245;
  _real64 T246;
  _real64 T247;
  _real64 T248;
  _complex128 T249;
  _complex128 T250;
  int32_t T251;
  int64_t T252;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T253 = NULL;
  int64_t T254;
  int64_t T255;
  int64_t T256;
  int64_t T257;
  int32_t T258;
  _ddata__complex128 T259 = NULL;
  _ref__complex128 T260 = NULL;
  _real64 T261;
  _real64 T262;
  _real64 T263;
  _real64 T264;
  _real64 T265;
  _real64 T266;
  _complex128 T267;
  _complex128 T268;
  T1 = (*W);
  T2 = T1;
  T3 = (*A);
  T4 = T3;
  T5 = T3;
  T6 = numElements(&(T5), 100, "fft/fft-nocopy.chpl");
  T7 = T6;
  T8 = 4;
  T9 = 1;
  T10 = ((int64_t)(1));
  T11 = (T6-T10);
  T12 = log4(T11);
  T13 = _build_range(1, T12);
  T14 = _copy(&(T13));
  T15 = 0;
  T16 = (T14._low);
  T17 = T16;
  T18 = (T14._high);
  T19 = T18;
  for (T15 = T17; T15 <= T19; T15 += 1) {
    T20 = &(T15);
    T21 = (T9*T8);
    T22 = T21;
    T23 = T9;
    T24 = T21;
    T25 = T4;
    T26 = __dom_470951(&(T25), 99, "fft/fft-nocopy.chpl");
    T27 = (2*T21);
    T28 = _by_545839(&(T26), T27, 103, "fft/fft-nocopy.chpl");
    T29 = __build_range_561135(BoundedRangeType_boundedLow, 0);
    T30 = __copy_562043(&(T29));
    T31 = __copy_562043(&(T30));
    T32 = __copy_562043(&(T31));
    T33 = __copy_562043(&(T32));
    T34 = (T33._low);
    T35 = T34;
    T36 = (T28._value);
    T37 = (T36->ranges);
    T38 = (T37.x1);
    T39 = __copy_547955(&(T38));
    T40 = T39;
    T41 = (T39._stride);
    T42 = (T41>0);
    if (T42) {
      T43 = (T39._low);
      T44 = T43;
    } else {
      T45 = (T39._high);
      T44 = T45;
    }
    T46 = T44;
    T47 = (T39._low);
    T48 = (T47<=T44);
    if (T48) {
      T49 = (T39._high);
      T50 = (T44<=T49);
      T51 = T50;
    } else {
      T51 = false;
    }
    T52 = T51;
    while (T52) {
      T53 = T46;
      T54 = T35;
      T55 = ((int64_t)(T35));
      T56 = (T2._value);
      T57 = (T56->origin);
      T58 = (T57+T55);
      T59 = (T56->factoredOffs);
      T60 = (T58-T59);
      T61 = ((int32_t)(T60));
      T62 = (T56->data);
      T63 = _ARRAY_GET(T62, T61);
      T64 = *(T63);
      T65 = T64;
      T66 = (2*T35);
      T67 = ((int64_t)(T66));
      T68 = (T2._value);
      T69 = (T68->origin);
      T70 = (T69+T67);
      T71 = (T68->factoredOffs);
      T72 = (T70-T71);
      T73 = ((int32_t)(T72));
      T74 = (T68->data);
      T75 = _ARRAY_GET(T74, T73);
      T76 = *(T75);
      T77 = T76;
      T78 = (T76.re);
      T79 = (T64.im);
      T80 = ((_real64)(2));
      T81 = (T80*T79);
      T82 = (T76.im);
      T83 = (T81*T82);
      T84 = (T78-T83);
      T85 = (T64.im);
      T86 = ((_real64)(2));
      T87 = (T86*T85);
      T88 = (T76.re);
      T89 = (T87*T88);
      T90 = (T76.im);
      T91 = (T89-T90);
      T92.re = 0.0;
      T92.im = 0.0;
      T93 = T92;
      T93.re = T84;
      T93.im = T91;
      T94 = T93;
      T95 = _build_range(0, T23);
      T96 = __build_open_interval_upper_570090(&(T95));
      T97 = _copy(&(T96));
      T98 = _PLUS_(T46, &(T97), 109, "fft/fft-nocopy.chpl");
      T99 = __copy_429953(&(T98));
      T100 = 0;
      T101 = (T99._low);
      T102 = T101;
      T103 = (T99._high);
      T104 = T103;
      for (T100 = T102; T100 <= T104; T100 += 1) {
        T105 = &(T100);
        T106 = _build_range(0, 4);
        T107 = __build_open_interval_upper_570090(&(T106));
        T108 = _copy(&(T107));
        T109 = _ASTERISK_(&(T108), T23, 110, "fft/fft-nocopy.chpl");
        T110 = __PLUS__570611(&(T109), T100, 110, "fft/fft-nocopy.chpl");
        T111 = T4;
        T112 = _this_573174(&(T111), &(T110), 110, "fft/fft-nocopy.chpl");
        T113 = T112;
        butterfly(&(T77), &(T65), &(T94), &(T113));
        chpl_free(T113._value->dom, 0, 0);
        chpl_free(T113._value, 0, 0);
      }
      T114 = (2*T54);
      T115 = (T114+1);
      T116 = ((int64_t)(T115));
      T117 = (T2._value);
      T118 = (T117->origin);
      T119 = (T118+T116);
      T120 = (T117->factoredOffs);
      T121 = (T119-T120);
      T122 = ((int32_t)(T121));
      T123 = (T117->data);
      T124 = _ARRAY_GET(T123, T122);
      T125 = *(T124);
      T77 = T125;
      T126 = (T125.re);
      T127 = (T65.re);
      T128 = ((_real64)(2));
      T129 = (T128*T127);
      T130 = (T125.im);
      T131 = (T129*T130);
      T132 = (T126-T131);
      T133 = (T65.re);
      T134 = ((_real64)(2));
      T135 = (T134*T133);
      T136 = (T125.re);
      T137 = (T135*T136);
      T138 = (T125.im);
      T139 = (T137-T138);
      T140.re = 0.0;
      T140.im = 0.0;
      T141 = T140;
      T141.re = T132;
      T141.im = T139;
      T94 = T141;
      T142 = (T65.im);
      T143 = (-T142);
      T144 = ((_real64)(1));
      T145 = (T143*T144);
      T146 = (T65.re);
      T147 = ((_real64)(1));
      T148 = (T146*T147);
      T149.re = 0.0;
      T149.im = 0.0;
      T150 = T149;
      T150.re = T145;
      T150.im = T148;
      T65 = T150;
      T151 = ((int64_t)(T24));
      T152 = (T53+T151);
      T153 = _build_range(0, T23);
      T154 = __build_open_interval_upper_570090(&(T153));
      T155 = _PLUS_(T152, &(T154), 117, "fft/fft-nocopy.chpl");
      T156 = __copy_429953(&(T155));
      T157 = 0;
      T158 = (T156._low);
      T159 = T158;
      T160 = (T156._high);
      T161 = T160;
      for (T157 = T159; T157 <= T161; T157 += 1) {
        T162 = &(T157);
        T163 = _build_range(0, 4);
        T164 = __build_open_interval_upper_570090(&(T163));
        T165 = _copy(&(T164));
        T166 = _ASTERISK_(&(T165), T23, 118, "fft/fft-nocopy.chpl");
        T167 = __PLUS__570611(&(T166), T157, 118, "fft/fft-nocopy.chpl");
        T168 = T4;
        T169 = _this_573174(&(T168), &(T167), 118, "fft/fft-nocopy.chpl");
        T170 = T169;
        butterfly(&(T77), &(T65), &(T94), &(T170));
        chpl_free(T170._value->dom, 0, 0);
        chpl_free(T170._value, 0, 0);
      }
      T171 = (T35+1);
      T35 = T171;
      T172 = (T40._stride);
      T173 = ((int64_t)(T172));
      T174 = (T46+T173);
      T46 = T174;
      T175 = (T40._low);
      T176 = (T175<=T174);
      if (T176) {
        T177 = (T40._high);
        T178 = (T174<=T177);
        T179 = T178;
      } else {
        T179 = false;
      }
      T52 = T179;
    }
    T9 = T22;
  }
  T180 = ((int64_t)(1));
  T181 = (T7-T180);
  T182 = log4(T181);
  T183 = pow(4, T182);
  T184 = T183;
  T185 = (T183*4);
  T186 = ((int64_t)(T185));
  T187 = (T186==T7);
  if (T187) {
    T188 = _build_range(0, T183);
    T189 = __build_open_interval_upper_570090(&(T188));
    T190 = _copy(&(T189));
    T191 = 0;
    T192 = (T190._low);
    T193 = T192;
    T194 = (T190._high);
    T195 = T194;
    for (T191 = T193; T191 <= T195; T191 += 1) {
      T196 = &(T191);
      T197 = _build_range(0, 4);
      T198 = __build_open_interval_upper_570090(&(T197));
      T199 = _ASTERISK_(&(T198), T184, 125, "fft/fft-nocopy.chpl");
      T200 = __PLUS__619001(&(T199), T191);
      T201 = T4;
      T202 = _this_621845(&(T201), &(T200), 125, "fft/fft-nocopy.chpl");
      T203 = T202;
      _butterfly_627300(1.0, 1.0, 1.0, &(T203));
      chpl_free(T203._value->dom, 0, 0);
      chpl_free(T203._value, 0, 0);
    }
  } else {
    T204 = _build_range(0, T183);
    T205 = __build_open_interval_upper_570090(&(T204));
    T206 = _copy(&(T205));
    T207 = 0;
    T208 = (T206._low);
    T209 = T208;
    T210 = (T206._high);
    T211 = T210;
    for (T207 = T209; T207 <= T211; T207 += 1) {
      T212 = &(T207);
      T213 = ((int64_t)(T207));
      T214 = (T4._value);
      T215 = (T214->origin);
      T216 = (T215+T213);
      T217 = (T214->factoredOffs);
      T218 = (T216-T217);
      T219 = ((int32_t)(T218));
      T220 = (T214->data);
      T221 = _ARRAY_GET(T220, T219);
      T222 = *(T221);
      T223 = (T207+T184);
      T224 = ((int64_t)(T223));
      T225 = (T4._value);
      T226 = (T225->origin);
      T227 = (T226+T224);
      T228 = (T225->factoredOffs);
      T229 = (T227-T228);
      T230 = ((int32_t)(T229));
      T231 = (T225->data);
      T232 = _ARRAY_GET(T231, T230);
      T233 = *(T232);
      T234 = ((int64_t)(T207));
      T235 = (T4._value);
      T236 = (T235->origin);
      T237 = (T236+T234);
      T238 = (T235->factoredOffs);
      T239 = (T237-T238);
      T240 = ((int32_t)(T239));
      T241 = (T235->data);
      T242 = _ARRAY_GET(T241, T240);
      T243 = (T222.re);
      T244 = (T233.re);
      T245 = (T243+T244);
      T246 = (T222.im);
      T247 = (T233.im);
      T248 = (T246+T247);
      T249.re = 0.0;
      T249.im = 0.0;
      T250 = T249;
      T250.re = T245;
      T250.im = T248;
      (*T242) = T250;
      T251 = (T207+T184);
      T252 = ((int64_t)(T251));
      T253 = (T4._value);
      T254 = (T253->origin);
      T255 = (T254+T252);
      T256 = (T253->factoredOffs);
      T257 = (T255-T256);
      T258 = ((int32_t)(T257));
      T259 = (T253->data);
      T260 = _ARRAY_GET(T259, T258);
      T261 = (T222.re);
      T262 = (T233.re);
      T263 = (T261-T262);
      T264 = (T222.im);
      T265 = (T233.im);
      T266 = (T264-T265);
      T267.re = 0.0;
      T267.im = 0.0;
      T268 = T267;
      T268.re = T263;
      T268.im = T266;
      (*T260) = T268;
    }
  }
  return;
}

/* fft-nocopy.chpl:146 */
void butterfly(_complex128* const wk1, _complex128* const wk2, _complex128* const wk3, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1* const A) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T1;
  _array_int32_t__complex128_1_SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T5;
  range_int32_t_bounded_0 T2;
  _domain_1_SingleLocaleArithmeticDomain_1_int32_t_0 T3;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T4;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T6 = NULL;
  int32_t T7;
  _tuple_1_int32_t T8;
  int32_t T9;
  int32_t T10;
  int32_t T11;
  int32_t T12;
  int32_t T13;
  _ddata__complex128 T14 = NULL;
  _complex128 T16;
  _ref__complex128 T15 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T17 = NULL;
  int32_t T18;
  _tuple_1_int32_t T19;
  int32_t T20;
  int32_t T21;
  int32_t T22;
  int32_t T23;
  int32_t T24;
  _ddata__complex128 T25 = NULL;
  _complex128 T27;
  _ref__complex128 T26 = NULL;
  _real64 T28;
  _real64 T29;
  _real64 T30;
  _real64 T31;
  _real64 T32;
  _real64 T33;
  _complex128 T34;
  _complex128 T35;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T36 = NULL;
  int32_t T37;
  _tuple_1_int32_t T38;
  int32_t T39;
  int32_t T40;
  int32_t T41;
  int32_t T42;
  int32_t T43;
  _ddata__complex128 T44 = NULL;
  _complex128 T46;
  _ref__complex128 T45 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T47 = NULL;
  int32_t T48;
  _tuple_1_int32_t T49;
  int32_t T50;
  int32_t T51;
  int32_t T52;
  int32_t T53;
  int32_t T54;
  _ddata__complex128 T55 = NULL;
  _complex128 T57;
  _ref__complex128 T56 = NULL;
  _real64 T58;
  _real64 T59;
  _real64 T60;
  _real64 T61;
  _real64 T62;
  _real64 T63;
  _complex128 T64;
  _complex128 T65;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T66 = NULL;
  int32_t T67;
  _tuple_1_int32_t T68;
  int32_t T69;
  int32_t T70;
  int32_t T71;
  int32_t T72;
  int32_t T73;
  _ddata__complex128 T74 = NULL;
  _complex128 T76;
  _ref__complex128 T75 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T77 = NULL;
  int32_t T78;
  _tuple_1_int32_t T79;
  int32_t T80;
  int32_t T81;
  int32_t T82;
  int32_t T83;
  int32_t T84;
  _ddata__complex128 T85 = NULL;
  _complex128 T87;
  _ref__complex128 T86 = NULL;
  _real64 T88;
  _real64 T89;
  _real64 T90;
  _real64 T91;
  _real64 T92;
  _real64 T93;
  _complex128 T94;
  _complex128 T95;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T96 = NULL;
  int32_t T97;
  _tuple_1_int32_t T98;
  int32_t T99;
  int32_t T100;
  int32_t T101;
  int32_t T102;
  int32_t T103;
  _ddata__complex128 T104 = NULL;
  _complex128 T106;
  _ref__complex128 T105 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T107 = NULL;
  int32_t T108;
  _tuple_1_int32_t T109;
  int32_t T110;
  int32_t T111;
  int32_t T112;
  int32_t T113;
  int32_t T114;
  _ddata__complex128 T115 = NULL;
  _complex128 T117;
  _ref__complex128 T116 = NULL;
  _real64 T118;
  _real64 T119;
  _real64 T120;
  _real64 T121;
  _real64 T122;
  _real64 T123;
  _complex128 T124;
  _complex128 T125;
  _real64 T126;
  _real64 T127;
  _real64 T128;
  _real64 T129;
  _real64 T130;
  _real64 T131;
  _real64 T132;
  _complex128 T133;
  _complex128 T134;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T135 = NULL;
  int32_t T136;
  _tuple_1_int32_t T137;
  int32_t T138;
  int32_t T139;
  int32_t T140;
  int32_t T141;
  int32_t T142;
  _ddata__complex128 T143 = NULL;
  _ref__complex128 T144 = NULL;
  _real64 T145;
  _real64 T146;
  _real64 T147;
  _real64 T148;
  _real64 T149;
  _real64 T150;
  _complex128 T151;
  _complex128 T152;
  _real64 T153;
  _real64 T154;
  _real64 T155;
  _real64 T156;
  _real64 T157;
  _real64 T158;
  _complex128 T159;
  _complex128 T160;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T161 = NULL;
  int32_t T162;
  _tuple_1_int32_t T163;
  int32_t T164;
  int32_t T165;
  int32_t T166;
  int32_t T167;
  int32_t T168;
  _ddata__complex128 T169 = NULL;
  _ref__complex128 T170 = NULL;
  _real64 T171;
  _real64 T172;
  _real64 T173;
  _real64 T174;
  _real64 T175;
  _real64 T176;
  _real64 T177;
  _real64 T178;
  _real64 T179;
  _real64 T180;
  _real64 T181;
  _real64 T182;
  _real64 T183;
  _real64 T184;
  _complex128 T185;
  _complex128 T186;
  _real64 T187;
  _real64 T188;
  _real64 T189;
  _real64 T190;
  _real64 T191;
  _real64 T192;
  _complex128 T193;
  _complex128 T194;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T195 = NULL;
  int32_t T196;
  _tuple_1_int32_t T197;
  int32_t T198;
  int32_t T199;
  int32_t T200;
  int32_t T201;
  int32_t T202;
  _ddata__complex128 T203 = NULL;
  _ref__complex128 T204 = NULL;
  _real64 T205;
  _real64 T206;
  _real64 T207;
  _real64 T208;
  _real64 T209;
  _real64 T210;
  _real64 T211;
  _real64 T212;
  _real64 T213;
  _real64 T214;
  _real64 T215;
  _real64 T216;
  _real64 T217;
  _real64 T218;
  _complex128 T219;
  _complex128 T220;
  _real64 T221;
  _real64 T222;
  _real64 T223;
  _real64 T224;
  _real64 T225;
  _real64 T226;
  _complex128 T227;
  _complex128 T228;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T229 = NULL;
  int32_t T230;
  _tuple_1_int32_t T231;
  int32_t T232;
  int32_t T233;
  int32_t T234;
  int32_t T235;
  int32_t T236;
  _ddata__complex128 T237 = NULL;
  _ref__complex128 T238 = NULL;
  _real64 T239;
  _real64 T240;
  _real64 T241;
  _real64 T242;
  _real64 T243;
  _real64 T244;
  _real64 T245;
  _real64 T246;
  _real64 T247;
  _real64 T248;
  _real64 T249;
  _real64 T250;
  _real64 T251;
  _real64 T252;
  _complex128 T253;
  _complex128 T254;
  T1 = (*A);
  T2 = _build_range(1, 4);
  T3 = _build_domain(&(T2), 146, "fft/fft-nocopy.chpl");
  T4 = T1;
  T5 = reindex(&(T4), &(T3), 146, "fft/fft-nocopy.chpl");
  chpl_free(T3._value->dist, 0, 0);
  chpl_free(T3._value, 0, 0);
  T6 = (T5._value);
  T7 = (T6->origin);
  T8 = (T6->blk);
  T9 = (T8.x1);
  T10 = (1*T9);
  T11 = (T7+T10);
  T12 = (T6->factoredOffs);
  T13 = (T11-T12);
  T14 = (T6->data);
  T15 = _ARRAY_GET(T14, T13);
  T16 = *(T15);
  T17 = (T5._value);
  T18 = (T17->origin);
  T19 = (T17->blk);
  T20 = (T19.x1);
  T21 = (2*T20);
  T22 = (T18+T21);
  T23 = (T17->factoredOffs);
  T24 = (T22-T23);
  T25 = (T17->data);
  T26 = _ARRAY_GET(T25, T24);
  T27 = *(T26);
  T28 = (T16.re);
  T29 = (T27.re);
  T30 = (T28+T29);
  T31 = (T16.im);
  T32 = (T27.im);
  T33 = (T31+T32);
  T34.re = 0.0;
  T34.im = 0.0;
  T35 = T34;
  T35.re = T30;
  T35.im = T33;
  T36 = (T5._value);
  T37 = (T36->origin);
  T38 = (T36->blk);
  T39 = (T38.x1);
  T40 = (1*T39);
  T41 = (T37+T40);
  T42 = (T36->factoredOffs);
  T43 = (T41-T42);
  T44 = (T36->data);
  T45 = _ARRAY_GET(T44, T43);
  T46 = *(T45);
  T47 = (T5._value);
  T48 = (T47->origin);
  T49 = (T47->blk);
  T50 = (T49.x1);
  T51 = (2*T50);
  T52 = (T48+T51);
  T53 = (T47->factoredOffs);
  T54 = (T52-T53);
  T55 = (T47->data);
  T56 = _ARRAY_GET(T55, T54);
  T57 = *(T56);
  T58 = (T46.re);
  T59 = (T57.re);
  T60 = (T58-T59);
  T61 = (T46.im);
  T62 = (T57.im);
  T63 = (T61-T62);
  T64.re = 0.0;
  T64.im = 0.0;
  T65 = T64;
  T65.re = T60;
  T65.im = T63;
  T66 = (T5._value);
  T67 = (T66->origin);
  T68 = (T66->blk);
  T69 = (T68.x1);
  T70 = (3*T69);
  T71 = (T67+T70);
  T72 = (T66->factoredOffs);
  T73 = (T71-T72);
  T74 = (T66->data);
  T75 = _ARRAY_GET(T74, T73);
  T76 = *(T75);
  T77 = (T5._value);
  T78 = (T77->origin);
  T79 = (T77->blk);
  T80 = (T79.x1);
  T81 = (4*T80);
  T82 = (T78+T81);
  T83 = (T77->factoredOffs);
  T84 = (T82-T83);
  T85 = (T77->data);
  T86 = _ARRAY_GET(T85, T84);
  T87 = *(T86);
  T88 = (T76.re);
  T89 = (T87.re);
  T90 = (T88+T89);
  T91 = (T76.im);
  T92 = (T87.im);
  T93 = (T91+T92);
  T94.re = 0.0;
  T94.im = 0.0;
  T95 = T94;
  T95.re = T90;
  T95.im = T93;
  T96 = (T5._value);
  T97 = (T96->origin);
  T98 = (T96->blk);
  T99 = (T98.x1);
  T100 = (3*T99);
  T101 = (T97+T100);
  T102 = (T96->factoredOffs);
  T103 = (T101-T102);
  T104 = (T96->data);
  T105 = _ARRAY_GET(T104, T103);
  T106 = *(T105);
  T107 = (T5._value);
  T108 = (T107->origin);
  T109 = (T107->blk);
  T110 = (T109.x1);
  T111 = (4*T110);
  T112 = (T108+T111);
  T113 = (T107->factoredOffs);
  T114 = (T112-T113);
  T115 = (T107->data);
  T116 = _ARRAY_GET(T115, T114);
  T117 = *(T116);
  T118 = (T106.re);
  T119 = (T117.re);
  T120 = (T118-T119);
  T121 = (T106.im);
  T122 = (T117.im);
  T123 = (T121-T122);
  T124.re = 0.0;
  T124.im = 0.0;
  T125 = T124;
  T125.re = T120;
  T125.im = T123;
  T126 = (T125.im);
  T127 = (-T126);
  T128 = ((_real64)(1));
  T129 = (T127*T128);
  T130 = (T125.re);
  T131 = ((_real64)(1));
  T132 = (T130*T131);
  T133.re = 0.0;
  T133.im = 0.0;
  T134 = T133;
  T134.re = T129;
  T134.im = T132;
  T135 = (T5._value);
  T136 = (T135->origin);
  T137 = (T135->blk);
  T138 = (T137.x1);
  T139 = (1*T138);
  T140 = (T136+T139);
  T141 = (T135->factoredOffs);
  T142 = (T140-T141);
  T143 = (T135->data);
  T144 = _ARRAY_GET(T143, T142);
  T145 = (T35.re);
  T146 = (T95.re);
  T147 = (T145+T146);
  T148 = (T35.im);
  T149 = (T95.im);
  T150 = (T148+T149);
  T151.re = 0.0;
  T151.im = 0.0;
  T152 = T151;
  T152.re = T147;
  T152.im = T150;
  (*T144) = T152;
  T153 = (T35.re);
  T154 = (T95.re);
  T155 = (T153-T154);
  T156 = (T35.im);
  T157 = (T95.im);
  T158 = (T156-T157);
  T159.re = 0.0;
  T159.im = 0.0;
  T160 = T159;
  T160.re = T155;
  T160.im = T158;
  T161 = (T5._value);
  T162 = (T161->origin);
  T163 = (T161->blk);
  T164 = (T163.x1);
  T165 = (3*T164);
  T166 = (T162+T165);
  T167 = (T161->factoredOffs);
  T168 = (T166-T167);
  T169 = (T161->data);
  T170 = _ARRAY_GET(T169, T168);
  T171 = ((*wk2).re);
  T172 = (T160.re);
  T173 = (T171*T172);
  T174 = ((*wk2).im);
  T175 = (T160.im);
  T176 = (T174*T175);
  T177 = (T173-T176);
  T178 = ((*wk2).im);
  T179 = (T160.re);
  T180 = (T178*T179);
  T181 = ((*wk2).re);
  T182 = (T160.im);
  T183 = (T181*T182);
  T184 = (T180+T183);
  T185.re = 0.0;
  T185.im = 0.0;
  T186 = T185;
  T186.re = T177;
  T186.im = T184;
  (*T170) = T186;
  T187 = (T65.re);
  T188 = (T134.re);
  T189 = (T187+T188);
  T190 = (T65.im);
  T191 = (T134.im);
  T192 = (T190+T191);
  T193.re = 0.0;
  T193.im = 0.0;
  T194 = T193;
  T194.re = T189;
  T194.im = T192;
  T195 = (T5._value);
  T196 = (T195->origin);
  T197 = (T195->blk);
  T198 = (T197.x1);
  T199 = (2*T198);
  T200 = (T196+T199);
  T201 = (T195->factoredOffs);
  T202 = (T200-T201);
  T203 = (T195->data);
  T204 = _ARRAY_GET(T203, T202);
  T205 = ((*wk1).re);
  T206 = (T194.re);
  T207 = (T205*T206);
  T208 = ((*wk1).im);
  T209 = (T194.im);
  T210 = (T208*T209);
  T211 = (T207-T210);
  T212 = ((*wk1).im);
  T213 = (T194.re);
  T214 = (T212*T213);
  T215 = ((*wk1).re);
  T216 = (T194.im);
  T217 = (T215*T216);
  T218 = (T214+T217);
  T219.re = 0.0;
  T219.im = 0.0;
  T220 = T219;
  T220.re = T211;
  T220.im = T218;
  (*T204) = T220;
  T221 = (T65.re);
  T222 = (T134.re);
  T223 = (T221-T222);
  T224 = (T65.im);
  T225 = (T134.im);
  T226 = (T224-T225);
  T227.re = 0.0;
  T227.im = 0.0;
  T228 = T227;
  T228.re = T223;
  T228.im = T226;
  T229 = (T5._value);
  T230 = (T229->origin);
  T231 = (T229->blk);
  T232 = (T231.x1);
  T233 = (4*T232);
  T234 = (T230+T233);
  T235 = (T229->factoredOffs);
  T236 = (T234-T235);
  T237 = (T229->data);
  T238 = _ARRAY_GET(T237, T236);
  T239 = ((*wk3).re);
  T240 = (T228.re);
  T241 = (T239*T240);
  T242 = ((*wk3).im);
  T243 = (T228.im);
  T244 = (T242*T243);
  T245 = (T241-T244);
  T246 = ((*wk3).im);
  T247 = (T228.re);
  T248 = (T246*T247);
  T249 = ((*wk3).re);
  T250 = (T228.im);
  T251 = (T249*T250);
  T252 = (T248+T251);
  T253.re = 0.0;
  T253.im = 0.0;
  T254 = T253;
  T254.re = T245;
  T254.im = T252;
  (*T238) = T254;
  chpl_free(T5._value, 0, 0);
  return;
}

/* fft-nocopy.chpl:146 */
void _butterfly_627300(_real64 wk1, _real64 wk2, _real64 wk3, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1* const A) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T1;
  _array_int32_t__complex128_1_SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T5;
  range_int32_t_bounded_0 T2;
  _domain_1_SingleLocaleArithmeticDomain_1_int32_t_0 T3;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_1 T4;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T6 = NULL;
  int32_t T7;
  _tuple_1_int32_t T8;
  int32_t T9;
  int32_t T10;
  int32_t T11;
  int32_t T12;
  int32_t T13;
  _ddata__complex128 T14 = NULL;
  _complex128 T16;
  _ref__complex128 T15 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T17 = NULL;
  int32_t T18;
  _tuple_1_int32_t T19;
  int32_t T20;
  int32_t T21;
  int32_t T22;
  int32_t T23;
  int32_t T24;
  _ddata__complex128 T25 = NULL;
  _complex128 T27;
  _ref__complex128 T26 = NULL;
  _real64 T28;
  _real64 T29;
  _real64 T30;
  _real64 T31;
  _real64 T32;
  _real64 T33;
  _complex128 T34;
  _complex128 T35;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T36 = NULL;
  int32_t T37;
  _tuple_1_int32_t T38;
  int32_t T39;
  int32_t T40;
  int32_t T41;
  int32_t T42;
  int32_t T43;
  _ddata__complex128 T44 = NULL;
  _complex128 T46;
  _ref__complex128 T45 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T47 = NULL;
  int32_t T48;
  _tuple_1_int32_t T49;
  int32_t T50;
  int32_t T51;
  int32_t T52;
  int32_t T53;
  int32_t T54;
  _ddata__complex128 T55 = NULL;
  _complex128 T57;
  _ref__complex128 T56 = NULL;
  _real64 T58;
  _real64 T59;
  _real64 T60;
  _real64 T61;
  _real64 T62;
  _real64 T63;
  _complex128 T64;
  _complex128 T65;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T66 = NULL;
  int32_t T67;
  _tuple_1_int32_t T68;
  int32_t T69;
  int32_t T70;
  int32_t T71;
  int32_t T72;
  int32_t T73;
  _ddata__complex128 T74 = NULL;
  _complex128 T76;
  _ref__complex128 T75 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T77 = NULL;
  int32_t T78;
  _tuple_1_int32_t T79;
  int32_t T80;
  int32_t T81;
  int32_t T82;
  int32_t T83;
  int32_t T84;
  _ddata__complex128 T85 = NULL;
  _complex128 T87;
  _ref__complex128 T86 = NULL;
  _real64 T88;
  _real64 T89;
  _real64 T90;
  _real64 T91;
  _real64 T92;
  _real64 T93;
  _complex128 T94;
  _complex128 T95;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T96 = NULL;
  int32_t T97;
  _tuple_1_int32_t T98;
  int32_t T99;
  int32_t T100;
  int32_t T101;
  int32_t T102;
  int32_t T103;
  _ddata__complex128 T104 = NULL;
  _complex128 T106;
  _ref__complex128 T105 = NULL;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T107 = NULL;
  int32_t T108;
  _tuple_1_int32_t T109;
  int32_t T110;
  int32_t T111;
  int32_t T112;
  int32_t T113;
  int32_t T114;
  _ddata__complex128 T115 = NULL;
  _complex128 T117;
  _ref__complex128 T116 = NULL;
  _real64 T118;
  _real64 T119;
  _real64 T120;
  _real64 T121;
  _real64 T122;
  _real64 T123;
  _complex128 T124;
  _complex128 T125;
  _real64 T126;
  _real64 T127;
  _real64 T128;
  _real64 T129;
  _real64 T130;
  _real64 T131;
  _real64 T132;
  _complex128 T133;
  _complex128 T134;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T135 = NULL;
  int32_t T136;
  _tuple_1_int32_t T137;
  int32_t T138;
  int32_t T139;
  int32_t T140;
  int32_t T141;
  int32_t T142;
  _ddata__complex128 T143 = NULL;
  _ref__complex128 T144 = NULL;
  _real64 T145;
  _real64 T146;
  _real64 T147;
  _real64 T148;
  _real64 T149;
  _real64 T150;
  _complex128 T151;
  _complex128 T152;
  _real64 T153;
  _real64 T154;
  _real64 T155;
  _real64 T156;
  _real64 T157;
  _real64 T158;
  _complex128 T159;
  _complex128 T160;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T161 = NULL;
  int32_t T162;
  _tuple_1_int32_t T163;
  int32_t T164;
  int32_t T165;
  int32_t T166;
  int32_t T167;
  int32_t T168;
  _ddata__complex128 T169 = NULL;
  _ref__complex128 T170 = NULL;
  _real64 T171;
  _real64 T172;
  _real64 T173;
  _real64 T174;
  _complex128 T175;
  _complex128 T176;
  _real64 T177;
  _real64 T178;
  _real64 T179;
  _real64 T180;
  _real64 T181;
  _real64 T182;
  _complex128 T183;
  _complex128 T184;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T185 = NULL;
  int32_t T186;
  _tuple_1_int32_t T187;
  int32_t T188;
  int32_t T189;
  int32_t T190;
  int32_t T191;
  int32_t T192;
  _ddata__complex128 T193 = NULL;
  _ref__complex128 T194 = NULL;
  _real64 T195;
  _real64 T196;
  _real64 T197;
  _real64 T198;
  _complex128 T199;
  _complex128 T200;
  _real64 T201;
  _real64 T202;
  _real64 T203;
  _real64 T204;
  _real64 T205;
  _real64 T206;
  _complex128 T207;
  _complex128 T208;
  SingleLocaleArithmeticArray__complex128_int32_t_1_1_0 T209 = NULL;
  int32_t T210;
  _tuple_1_int32_t T211;
  int32_t T212;
  int32_t T213;
  int32_t T214;
  int32_t T215;
  int32_t T216;
  _ddata__complex128 T217 = NULL;
  _ref__complex128 T218 = NULL;
  _real64 T219;
  _real64 T220;
  _real64 T221;
  _real64 T222;
  _complex128 T223;
  _complex128 T224;
  T1 = (*A);
  T2 = _build_range(1, 4);
  T3 = _build_domain(&(T2), 146, "fft/fft-nocopy.chpl");
  T4 = T1;
  T5 = reindex(&(T4), &(T3), 146, "fft/fft-nocopy.chpl");
  chpl_free(T3._value->dist, 0, 0);
  chpl_free(T3._value, 0, 0);
  T6 = (T5._value);
  T7 = (T6->origin);
  T8 = (T6->blk);
  T9 = (T8.x1);
  T10 = (1*T9);
  T11 = (T7+T10);
  T12 = (T6->factoredOffs);
  T13 = (T11-T12);
  T14 = (T6->data);
  T15 = _ARRAY_GET(T14, T13);
  T16 = *(T15);
  T17 = (T5._value);
  T18 = (T17->origin);
  T19 = (T17->blk);
  T20 = (T19.x1);
  T21 = (2*T20);
  T22 = (T18+T21);
  T23 = (T17->factoredOffs);
  T24 = (T22-T23);
  T25 = (T17->data);
  T26 = _ARRAY_GET(T25, T24);
  T27 = *(T26);
  T28 = (T16.re);
  T29 = (T27.re);
  T30 = (T28+T29);
  T31 = (T16.im);
  T32 = (T27.im);
  T33 = (T31+T32);
  T34.re = 0.0;
  T34.im = 0.0;
  T35 = T34;
  T35.re = T30;
  T35.im = T33;
  T36 = (T5._value);
  T37 = (T36->origin);
  T38 = (T36->blk);
  T39 = (T38.x1);
  T40 = (1*T39);
  T41 = (T37+T40);
  T42 = (T36->factoredOffs);
  T43 = (T41-T42);
  T44 = (T36->data);
  T45 = _ARRAY_GET(T44, T43);
  T46 = *(T45);
  T47 = (T5._value);
  T48 = (T47->origin);
  T49 = (T47->blk);
  T50 = (T49.x1);
  T51 = (2*T50);
  T52 = (T48+T51);
  T53 = (T47->factoredOffs);
  T54 = (T52-T53);
  T55 = (T47->data);
  T56 = _ARRAY_GET(T55, T54);
  T57 = *(T56);
  T58 = (T46.re);
  T59 = (T57.re);
  T60 = (T58-T59);
  T61 = (T46.im);
  T62 = (T57.im);
  T63 = (T61-T62);
  T64.re = 0.0;
  T64.im = 0.0;
  T65 = T64;
  T65.re = T60;
  T65.im = T63;
  T66 = (T5._value);
  T67 = (T66->origin);
  T68 = (T66->blk);
  T69 = (T68.x1);
  T70 = (3*T69);
  T71 = (T67+T70);
  T72 = (T66->factoredOffs);
  T73 = (T71-T72);
  T74 = (T66->data);
  T75 = _ARRAY_GET(T74, T73);
  T76 = *(T75);
  T77 = (T5._value);
  T78 = (T77->origin);
  T79 = (T77->blk);
  T80 = (T79.x1);
  T81 = (4*T80);
  T82 = (T78+T81);
  T83 = (T77->factoredOffs);
  T84 = (T82-T83);
  T85 = (T77->data);
  T86 = _ARRAY_GET(T85, T84);
  T87 = *(T86);
  T88 = (T76.re);
  T89 = (T87.re);
  T90 = (T88+T89);
  T91 = (T76.im);
  T92 = (T87.im);
  T93 = (T91+T92);
  T94.re = 0.0;
  T94.im = 0.0;
  T95 = T94;
  T95.re = T90;
  T95.im = T93;
  T96 = (T5._value);
  T97 = (T96->origin);
  T98 = (T96->blk);
  T99 = (T98.x1);
  T100 = (3*T99);
  T101 = (T97+T100);
  T102 = (T96->factoredOffs);
  T103 = (T101-T102);
  T104 = (T96->data);
  T105 = _ARRAY_GET(T104, T103);
  T106 = *(T105);
  T107 = (T5._value);
  T108 = (T107->origin);
  T109 = (T107->blk);
  T110 = (T109.x1);
  T111 = (4*T110);
  T112 = (T108+T111);
  T113 = (T107->factoredOffs);
  T114 = (T112-T113);
  T115 = (T107->data);
  T116 = _ARRAY_GET(T115, T114);
  T117 = *(T116);
  T118 = (T106.re);
  T119 = (T117.re);
  T120 = (T118-T119);
  T121 = (T106.im);
  T122 = (T117.im);
  T123 = (T121-T122);
  T124.re = 0.0;
  T124.im = 0.0;
  T125 = T124;
  T125.re = T120;
  T125.im = T123;
  T126 = (T125.im);
  T127 = (-T126);
  T128 = ((_real64)(1));
  T129 = (T127*T128);
  T130 = (T125.re);
  T131 = ((_real64)(1));
  T132 = (T130*T131);
  T133.re = 0.0;
  T133.im = 0.0;
  T134 = T133;
  T134.re = T129;
  T134.im = T132;
  T135 = (T5._value);
  T136 = (T135->origin);
  T137 = (T135->blk);
  T138 = (T137.x1);
  T139 = (1*T138);
  T140 = (T136+T139);
  T141 = (T135->factoredOffs);
  T142 = (T140-T141);
  T143 = (T135->data);
  T144 = _ARRAY_GET(T143, T142);
  T145 = (T35.re);
  T146 = (T95.re);
  T147 = (T145+T146);
  T148 = (T35.im);
  T149 = (T95.im);
  T150 = (T148+T149);
  T151.re = 0.0;
  T151.im = 0.0;
  T152 = T151;
  T152.re = T147;
  T152.im = T150;
  (*T144) = T152;
  T153 = (T35.re);
  T154 = (T95.re);
  T155 = (T153-T154);
  T156 = (T35.im);
  T157 = (T95.im);
  T158 = (T156-T157);
  T159.re = 0.0;
  T159.im = 0.0;
  T160 = T159;
  T160.re = T155;
  T160.im = T158;
  T161 = (T5._value);
  T162 = (T161->origin);
  T163 = (T161->blk);
  T164 = (T163.x1);
  T165 = (3*T164);
  T166 = (T162+T165);
  T167 = (T161->factoredOffs);
  T168 = (T166-T167);
  T169 = (T161->data);
  T170 = _ARRAY_GET(T169, T168);
  T171 = (T160.re);
  T172 = (wk2*T171);
  T173 = (T160.im);
  T174 = (wk2*T173);
  T175.re = 0.0;
  T175.im = 0.0;
  T176 = T175;
  T176.re = T172;
  T176.im = T174;
  (*T170) = T176;
  T177 = (T65.re);
  T178 = (T134.re);
  T179 = (T177+T178);
  T180 = (T65.im);
  T181 = (T134.im);
  T182 = (T180+T181);
  T183.re = 0.0;
  T183.im = 0.0;
  T184 = T183;
  T184.re = T179;
  T184.im = T182;
  T185 = (T5._value);
  T186 = (T185->origin);
  T187 = (T185->blk);
  T188 = (T187.x1);
  T189 = (2*T188);
  T190 = (T186+T189);
  T191 = (T185->factoredOffs);
  T192 = (T190-T191);
  T193 = (T185->data);
  T194 = _ARRAY_GET(T193, T192);
  T195 = (T184.re);
  T196 = (wk1*T195);
  T197 = (T184.im);
  T198 = (wk1*T197);
  T199.re = 0.0;
  T199.im = 0.0;
  T200 = T199;
  T200.re = T196;
  T200.im = T198;
  (*T194) = T200;
  T201 = (T65.re);
  T202 = (T134.re);
  T203 = (T201-T202);
  T204 = (T65.im);
  T205 = (T134.im);
  T206 = (T204-T205);
  T207.re = 0.0;
  T207.im = 0.0;
  T208 = T207;
  T208.re = T203;
  T208.im = T206;
  T209 = (T5._value);
  T210 = (T209->origin);
  T211 = (T209->blk);
  T212 = (T211.x1);
  T213 = (4*T212);
  T214 = (T210+T213);
  T215 = (T209->factoredOffs);
  T216 = (T214-T215);
  T217 = (T209->data);
  T218 = _ARRAY_GET(T217, T216);
  T219 = (T208.re);
  T220 = (wk3*T219);
  T221 = (T208.im);
  T222 = (wk3*T221);
  T223.re = 0.0;
  T223.im = 0.0;
  T224 = T223;
  T224.re = T220;
  T224.im = T222;
  (*T218) = T224;
  chpl_free(T5._value, 0, 0);
  return;
}

/* fft-nocopy.chpl:162 */
int32_t log4(int64_t x) {
  int32_t T2;
  int32_t T1;
  T1 = logBasePow2(x, 2, 162, "fft/fft-nocopy.chpl");
  T2 = T1;
  return T2;
}

/* fft-nocopy.chpl:165 */
chpl_bool verifyResults(_array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const z, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Z, _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0* const Twiddles) {
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T2;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T1;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T4;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T3;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T6;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T5;
  chpl_bool T96;
  _complex128 T7;
  _real64 T8;
  _complex128 T9;
  _domain_1_SingleLocaleArithmeticDomain_1_int64_t_0 T11;
  _array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T10;
  _complex128 T12;
  _real64 T13;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T15 = NULL;
  int64_t T21;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T14 = NULL;
  SingleLocaleArithmeticDomain_1_int64_t_0 T16 = NULL;
  _tuple_1_range_int64_t_bounded_0 T17;
  range_int64_t_bounded_0 T18;
  range_int64_t_bounded_0 T19;
  int64_t T20;
  SingleLocaleArithmeticDomain_1_int64_t_0 T22 = NULL;
  range_int64_t_bounded_0 T24;
  _tuple_1_range_int64_t_bounded_0 T23;
  range_int64_t_bounded_0 T25;
  int64_t T26;
  int64_t T28;
  int64_t T27;
  int64_t T30;
  int64_t T29;
  _ref_int64_t T31 = NULL;
  _ref_int64_t T33 = NULL;
  int64_t T32;
  int64_t T34;
  int64_t T35;
  int64_t T36;
  int64_t T37;
  int32_t T38;
  _ddata__complex128 T39 = NULL;
  _complex128 T41;
  _ref__complex128 T40 = NULL;
  _real64 T42;
  _real64 T43;
  _real64 T44;
  _complex128 T45;
  _complex128 T46;
  _real64 T47;
  _real64 T48;
  _real64 T49;
  _real64 T50;
  _complex128 T51;
  _complex128 T52;
  SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T53 = NULL;
  int64_t T54;
  int64_t T55;
  int64_t T56;
  int64_t T57;
  int32_t T58;
  _ddata__complex128 T59 = NULL;
  _ref__complex128 T60 = NULL;
  int64_t T61;
  _ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T62 = NULL;
  _ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T63 = NULL;
  _ic__HYPHEN_ T64 = NULL;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T65;
  _tuple_2_int32_t_int32_t T66;
  _ic__ASTERISK__ASTERISK_ T67 = NULL;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T68;
  _tuple_2_int32_t_int32_t T69;
  _ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T70 = NULL;
  _ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0 T71 = NULL;
  __ic__HYPHEN__641876 T72 = NULL;
  _tuple_2__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T73;
  _tuple_2_int32_t_int32_t T74;
  __ic__ASTERISK__ASTERISK__642456 T75 = NULL;
  _tuple_2__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T76;
  _tuple_2_int32_t_int32_t T77;
  _ic__PLUS_ T78 = NULL;
  _tuple_2__ic__ASTERISK__ASTERISK__int32_t T79;
  _tuple_2_int32_t_int32_t T80;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T81;
  _tuple_2_int32_t_int32_t T82;
  _ic_sqrt T83 = NULL;
  _tuple_2__ic__ASTERISK__ASTERISK__int32_t T84;
  _tuple_2_int32_t_int32_t T85;
  _tuple_2__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0_int32_t T86;
  _tuple_2_int32_t_int32_t T87;
  _max__real64 T90 = NULL;
  _max__real64 T88 = NULL;
  _real64 T89;
  _real64 T91;
  _real64 T92;
  _real64 T93;
  _real64 T94;
  chpl_bool T95;
  T1 = (*Twiddles);
  T2 = T1;
  T3 = (*Z);
  T4 = T3;
  T5 = (*z);
  T6 = T5;
  if (printArrays) {
    _writeln_528639("After FFT, Z is: ", &(T4), "\n", 166, "fft/fft-nocopy.chpl");
  }
  T7.re = 0.0;
  T7.im = 0.0;
  T8 = ((_real64)(m));
  T9.re = 0.0;
  T9.im = 0.0;
  T10 = T4;
  T11 = __dom_470951(&(T10), 168, "fft/fft-nocopy.chpl");
  T12.re = 0.0;
  T12.im = 0.0;
  T13 = T8;
  T14 = (T4._value);
  T15 = T14;
  T16 = (T14->dom);
  T17 = (T16->ranges);
  T18 = (T17.x1);
  T19 = __copy_429953(&(T18));
  T20 = (T19._low);
  T21 = T20;
  T22 = (T11._value);
  T23 = (T22->ranges);
  T24 = (T23.x1);
  T25 = __copy_429953(&(T24));
  T26 = 0;
  T27 = (T25._low);
  T28 = T27;
  T29 = (T25._high);
  T30 = T29;
  for (T26 = T28; T26 <= T30; T26 += 1) {
    T31 = &(T26);
    T32 = T21;
    T33 = &(T32);
    T34 = (T15->origin);
    T35 = (T34+T32);
    T36 = (T15->factoredOffs);
    T37 = (T35-T36);
    T38 = ((int32_t)(T37));
    T39 = (T15->data);
    T40 = _ARRAY_GET(T39, T38);
    T41 = *(T40);
    T42 = (T41.re);
    T43 = (T41.im);
    T44 = (-T43);
    T45.re = 0.0;
    T45.im = 0.0;
    T46 = T45;
    T46.re = T42;
    T46.im = T44;
    T47 = (T46.re);
    T48 = (T47/T13);
    T49 = (T46.im);
    T50 = (T49/T13);
    T51.re = 0.0;
    T51.im = 0.0;
    T52 = T51;
    T52.re = T48;
    T52.im = T50;
    T53 = (T4._value);
    T54 = (T53->origin);
    T55 = (T54+T26);
    T56 = (T53->factoredOffs);
    T57 = (T55-T56);
    T58 = ((int32_t)(T57));
    T59 = (T53->data);
    T60 = _ARRAY_GET(T59, T58);
    (*T60) = T52;
    T61 = (T32+1);
    T21 = T61;
  }
  bitReverseShuffle(&(T4));
  dfft(&(T4), &(T2));
  if (printArrays) {
    _writeln_528639("After inverse FFT, Z is: ", &(T4), "\n", 172, "fft/fft-nocopy.chpl");
  }
  T62 = (_ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "fft/fft-nocopy.chpl");
  T62->_0_this = T6;
  T62->_2_this = nil;
  T62->_3_i = 0;
  T62->_4__tmp = 0;
  T62->_5__tmp = 0;
  T63 = (_ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_re__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "fft/fft-nocopy.chpl");
  T63->_0_this = T4;
  T63->_2_this = nil;
  T63->_3_i = 0;
  T63->_4__tmp = 0;
  T63->_5__tmp = 0;
  T64 = (_ic__HYPHEN_)chpl_alloc(sizeof(__ic__HYPHEN_), "iterator class", 174, "fft/fft-nocopy.chpl");
  T64->_0_a = T62;
  T64->_1_b = T63;
  T64->_2__ret__HYPHEN_ = 0.0;
  T65.x1 = nil;
  T65.x2 = 0;
  T64->_3_ic = T65;
  T66.x1 = 0;
  T66.x2 = 0;
  T64->_4_c = T66;
  T64->_5_this = nil;
  T64->_6_i = 0;
  T64->_7__tmp = 0;
  T64->_8__tmp = 0;
  T67 = (_ic__ASTERISK__ASTERISK_)chpl_alloc(sizeof(__ic__ASTERISK__ASTERISK_), "iterator class", 174, "fft/fft-nocopy.chpl");
  T67->_0_a = T64;
  T67->_1_b = 2;
  T67->_2__ret__ASTERISK__ASTERISK_ = 0.0;
  T68.x1 = nil;
  T68.x2 = 0;
  T67->_3_ic = T68;
  T69.x1 = 0;
  T69.x2 = 0;
  T67->_4_c = T69;
  T67->_5_this = nil;
  T67->_6_i = 0;
  T67->_7__tmp = 0;
  T67->_8__tmp = 0;
  T70 = (_ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "fft/fft-nocopy.chpl");
  T70->_0_this = T6;
  T70->_2_this = nil;
  T70->_3_i = 0;
  T70->_4__tmp = 0;
  T70->_5__tmp = 0;
  T71 = (_ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0)chpl_alloc(sizeof(__ic_im__ref__array_int64_t__complex128_1_SingleLocaleArithmeticArray__complex128_int64_t_0_1_0), "iterator class", 174, "fft/fft-nocopy.chpl");
  T71->_0_this = T4;
  T71->_2_this = nil;
  T71->_3_i = 0;
  T71->_4__tmp = 0;
  T71->_5__tmp = 0;
  T72 = (__ic__HYPHEN__641876)chpl_alloc(sizeof(___ic__HYPHEN__641876), "iterator class", 174, "fft/fft-nocopy.chpl");
  T72->_0_a = T70;
  T72->_1_b = T71;
  T72->_2__ret__HYPHEN_ = 0.0;
  T73.x1 = nil;
  T73.x2 = 0;
  T72->_3_ic = T73;
  T74.x1 = 0;
  T74.x2 = 0;
  T72->_4_c = T74;
  T72->_5_this = nil;
  T72->_6_i = 0;
  T72->_7__tmp = 0;
  T72->_8__tmp = 0;
  T75 = (__ic__ASTERISK__ASTERISK__642456)chpl_alloc(sizeof(___ic__ASTERISK__ASTERISK__642456), "iterator class", 174, "fft/fft-nocopy.chpl");
  T75->_0_a = T72;
  T75->_1_b = 2;
  T75->_2__ret__ASTERISK__ASTERISK_ = 0.0;
  T76.x1 = nil;
  T76.x2 = 0;
  T75->_3_ic = T76;
  T77.x1 = 0;
  T77.x2 = 0;
  T75->_4_c = T77;
  T75->_5_this = nil;
  T75->_6_i = 0;
  T75->_7__tmp = 0;
  T75->_8__tmp = 0;
  T78 = (_ic__PLUS_)chpl_alloc(sizeof(__ic__PLUS_), "iterator class", 174, "fft/fft-nocopy.chpl");
  T78->_0_a = T67;
  T78->_1_b = T75;
  T78->_2__ret__PLUS_ = 0.0;
  T79.x1 = nil;
  T79.x2 = 0;
  T78->_3_ic = T79;
  T80.x1 = 0;
  T80.x2 = 0;
  T78->_4_c = T80;
  T78->_5_b = 0;
  T81.x1 = nil;
  T81.x2 = 0;
  T78->_6_ic = T81;
  T82.x1 = 0;
  T82.x2 = 0;
  T78->_7_c = T82;
  T78->_8_this = nil;
  T78->_9_i = 0;
  T78->_10__tmp = 0;
  T78->_11__tmp = 0;
  T83 = (_ic_sqrt)chpl_alloc(sizeof(__ic_sqrt), "iterator class", 174, "fft/fft-nocopy.chpl");
  T83->_0_x = T78;
  T83->_1__ret_sqrt = 0.0;
  T84.x1 = nil;
  T84.x2 = 0;
  T83->_2_ic = T84;
  T85.x1 = 0;
  T85.x2 = 0;
  T83->_3_c = T85;
  T83->_4_b = 0;
  T86.x1 = nil;
  T86.x2 = 0;
  T83->_5_ic = T86;
  T87.x1 = 0;
  T87.x2 = 0;
  T83->_6_c = T87;
  T83->_7_this = nil;
  T83->_8_i = 0;
  T83->_9__tmp = 0;
  T83->_10__tmp = 0;
  T88 = (_max__real64)chpl_alloc(sizeof(__max__real64), "instance of class _unknown", 174, "fft/fft-nocopy.chpl");
  ((object)T88)->_cid = _e__max__real64;
  T88->value = 0.0;
  T89 = min();
  T88->value = T89;
  T90 = _construct__max(T89, T88, 174, "fft/fft-nocopy.chpl");
  T91 = __reduce_648116(T90, T83, 174, "fft/fft-nocopy.chpl");
  T92 = ((_real64)(n));
  T93 = (epsilon*T92);
  T94 = (T91/T93);
  if (printStats) {
    _writeln_425807("error = ", T94, 176, "fft/fft-nocopy.chpl");
  }
  T95 = (T94<threshold);
  T96 = T95;
  return T96;
}

/* fft-nocopy.chpl:182 */
void printResults(chpl_bool successful, _real64 execTime) {
  _string T1;
  int64_t T2;
  _real64 T3;
  _real64 T4;
  _real64 T5;
  _real64 T6;
  _real64 T7;
  if (successful) {
    T1 = "SUCCESS";
  } else {
    T1 = "FAILURE";
  }
  _writeln_649732("Validation: ", T1, 183, "fft/fft-nocopy.chpl");
  if (printStats) {
    _writeln_425807("Execution time = ", execTime, 185, "fft/fft-nocopy.chpl");
    T2 = (m*n);
    T3 = ((_real64)(T2));
    T4 = (T3/execTime);
    T5 = ((_real64)(5));
    T6 = (T5*T4);
    T7 = (T6*1e-9);
    _writeln_425807("Performance (Gflop/s) = ", T7, 186, "fft/fft-nocopy.chpl");
  }
  return;
}

