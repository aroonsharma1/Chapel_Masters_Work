# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -*- Makefile -*-
#
# Copyright (c)      2012  Sandia Corporation
#
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = hello_world$(EXEEXT) aligned_prodcons$(EXEEXT) \
	hello_world_multi$(EXEEXT) syncvar_prodcons$(EXEEXT) \
	reinitialization$(EXEEXT) qthread_cas$(EXEEXT) \
	qthread_cacheline$(EXEEXT) qthread_readstate$(EXEEXT) \
	qthread_id$(EXEEXT) qthread_incr$(EXEEXT) \
	qthread_fincr$(EXEEXT) qthread_dincr$(EXEEXT) \
	qthread_stackleft$(EXEEXT) qthread_migrate_to$(EXEEXT) \
	qthread_disable_shepherd$(EXEEXT) qtimer$(EXEEXT) \
	queue$(EXEEXT) qthread_fork_precond$(EXEEXT) qalloc$(EXEEXT) \
	arbitrary_blocking_operation$(EXEEXT) sinc_null$(EXEEXT) \
	sinc$(EXEEXT) tasklocal_data$(EXEEXT) \
	tasklocal_data_no_default$(EXEEXT) \
	tasklocal_data_no_argcopy$(EXEEXT) external_fork$(EXEEXT) \
	external_syncvar$(EXEEXT) read$(EXEEXT) test_teams$(EXEEXT) \
	test_subteams$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1)
@HAVE_PROG_TIMELIMIT_TRUE@am__append_1 = @timelimit_path@ -T 1
@WANT_SINGLE_WORKER_SCHEDULER_TRUE@am__append_2 = env QT_NUM_SHEPHERDS=2 QT_NUM_WORKERS_PER_SHEPHERD=1
subdir = test/basics
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ax_c_restrict.m4 \
	$(top_srcdir)/config/ax_check_16aligned_malloc.m4 \
	$(top_srcdir)/config/ax_check_page_aligned_malloc.m4 \
	$(top_srcdir)/config/ax_create_stdint_h.m4 \
	$(top_srcdir)/config/ax_openmp.m4 \
	$(top_srcdir)/config/ax_tls.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/ompi_check_package.m4 \
	$(top_srcdir)/config/ompi_check_withdir.m4 \
	$(top_srcdir)/config/orte_check_pmi.m4 \
	$(top_srcdir)/config/qthread_builtin_expect.m4 \
	$(top_srcdir)/config/qthread_builtin_trap.m4 \
	$(top_srcdir)/config/qthread_check_FUNCTION.m4 \
	$(top_srcdir)/config/qthread_check_altix_timer.m4 \
	$(top_srcdir)/config/qthread_check_assembly.m4 \
	$(top_srcdir)/config/qthread_check_assert.m4 \
	$(top_srcdir)/config/qthread_check_atomics.m4 \
	$(top_srcdir)/config/qthread_check_attributes.m4 \
	$(top_srcdir)/config/qthread_check_bitfield_order.m4 \
	$(top_srcdir)/config/qthread_check_hwloc.m4 \
	$(top_srcdir)/config/qthread_check_liblgrp.m4 \
	$(top_srcdir)/config/qthread_check_libnuma.m4 \
	$(top_srcdir)/config/qthread_check_linux.m4 \
	$(top_srcdir)/config/qthread_check_machtopo.m4 \
	$(top_srcdir)/config/qthread_check_makecontext.m4 \
	$(top_srcdir)/config/qthread_check_plpa.m4 \
	$(top_srcdir)/config/qthread_check_portals4.m4 \
	$(top_srcdir)/config/qthread_check_pthreads.m4 \
	$(top_srcdir)/config/qthread_check_qsort.m4 \
	$(top_srcdir)/config/qthread_check_swapcontext.m4 \
	$(top_srcdir)/config/qthread_check_syscalltypes.m4 \
	$(top_srcdir)/config/qthread_check_tiletopo.m4 \
	$(top_srcdir)/config/qthread_check_ucstack_ssflags.m4 \
	$(top_srcdir)/config/qthread_check_working_valloc.m4 \
	$(top_srcdir)/config/qthread_cond_define.m4 \
	$(top_srcdir)/config/qthread_detect_compiler_type.m4 \
	$(top_srcdir)/config/qthread_vamacros.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/qthread/common.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = hello_world$(EXEEXT) aligned_prodcons$(EXEEXT) \
	hello_world_multi$(EXEEXT) syncvar_prodcons$(EXEEXT) \
	reinitialization$(EXEEXT) qthread_cas$(EXEEXT) \
	qthread_cacheline$(EXEEXT) qthread_readstate$(EXEEXT) \
	qthread_id$(EXEEXT) qthread_incr$(EXEEXT) \
	qthread_fincr$(EXEEXT) qthread_dincr$(EXEEXT) \
	qthread_stackleft$(EXEEXT) qthread_migrate_to$(EXEEXT) \
	qthread_disable_shepherd$(EXEEXT) qtimer$(EXEEXT) \
	queue$(EXEEXT) qthread_fork_precond$(EXEEXT) qalloc$(EXEEXT) \
	arbitrary_blocking_operation$(EXEEXT) sinc_null$(EXEEXT) \
	sinc$(EXEEXT) tasklocal_data$(EXEEXT) \
	tasklocal_data_no_default$(EXEEXT) \
	tasklocal_data_no_argcopy$(EXEEXT) external_fork$(EXEEXT) \
	external_syncvar$(EXEEXT) read$(EXEEXT) test_teams$(EXEEXT) \
	test_subteams$(EXEEXT)
am_aligned_prodcons_OBJECTS = aligned_prodcons.$(OBJEXT)
aligned_prodcons_OBJECTS = $(am_aligned_prodcons_OBJECTS)
aligned_prodcons_LDADD = $(LDADD)
aligned_prodcons_DEPENDENCIES = $(qthreadlib)
am_arbitrary_blocking_operation_OBJECTS =  \
	arbitrary_blocking_operation.$(OBJEXT)
arbitrary_blocking_operation_OBJECTS =  \
	$(am_arbitrary_blocking_operation_OBJECTS)
arbitrary_blocking_operation_LDADD = $(LDADD)
arbitrary_blocking_operation_DEPENDENCIES = $(qthreadlib)
am_external_fork_OBJECTS = external_fork.$(OBJEXT)
external_fork_OBJECTS = $(am_external_fork_OBJECTS)
external_fork_LDADD = $(LDADD)
external_fork_DEPENDENCIES = $(qthreadlib)
am_external_syncvar_OBJECTS = external_syncvar.$(OBJEXT)
external_syncvar_OBJECTS = $(am_external_syncvar_OBJECTS)
external_syncvar_LDADD = $(LDADD)
external_syncvar_DEPENDENCIES = $(qthreadlib)
am_hello_world_OBJECTS = hello_world.$(OBJEXT)
hello_world_OBJECTS = $(am_hello_world_OBJECTS)
hello_world_LDADD = $(LDADD)
hello_world_DEPENDENCIES = $(qthreadlib)
am_hello_world_multi_OBJECTS = hello_world_multi.$(OBJEXT)
hello_world_multi_OBJECTS = $(am_hello_world_multi_OBJECTS)
hello_world_multi_LDADD = $(LDADD)
hello_world_multi_DEPENDENCIES = $(qthreadlib)
am_qalloc_OBJECTS = qalloc.$(OBJEXT)
qalloc_OBJECTS = $(am_qalloc_OBJECTS)
qalloc_LDADD = $(LDADD)
qalloc_DEPENDENCIES = $(qthreadlib)
am_qthread_cacheline_OBJECTS = qthread_cacheline.$(OBJEXT)
qthread_cacheline_OBJECTS = $(am_qthread_cacheline_OBJECTS)
qthread_cacheline_LDADD = $(LDADD)
qthread_cacheline_DEPENDENCIES = $(qthreadlib)
am_qthread_cas_OBJECTS = qthread_cas.$(OBJEXT)
qthread_cas_OBJECTS = $(am_qthread_cas_OBJECTS)
qthread_cas_LDADD = $(LDADD)
qthread_cas_DEPENDENCIES = $(qthreadlib)
am_qthread_dincr_OBJECTS = qthread_dincr.$(OBJEXT)
qthread_dincr_OBJECTS = $(am_qthread_dincr_OBJECTS)
qthread_dincr_LDADD = $(LDADD)
qthread_dincr_DEPENDENCIES = $(qthreadlib)
am_qthread_disable_shepherd_OBJECTS =  \
	qthread_disable_shepherd.$(OBJEXT)
qthread_disable_shepherd_OBJECTS =  \
	$(am_qthread_disable_shepherd_OBJECTS)
qthread_disable_shepherd_LDADD = $(LDADD)
qthread_disable_shepherd_DEPENDENCIES = $(qthreadlib)
am_qthread_fincr_OBJECTS = qthread_fincr.$(OBJEXT)
qthread_fincr_OBJECTS = $(am_qthread_fincr_OBJECTS)
qthread_fincr_LDADD = $(LDADD)
qthread_fincr_DEPENDENCIES = $(qthreadlib)
am_qthread_fork_precond_OBJECTS = qthread_fork_precond.$(OBJEXT)
qthread_fork_precond_OBJECTS = $(am_qthread_fork_precond_OBJECTS)
qthread_fork_precond_LDADD = $(LDADD)
qthread_fork_precond_DEPENDENCIES = $(qthreadlib)
am_qthread_id_OBJECTS = qthread_id.$(OBJEXT)
qthread_id_OBJECTS = $(am_qthread_id_OBJECTS)
qthread_id_LDADD = $(LDADD)
qthread_id_DEPENDENCIES = $(qthreadlib)
am_qthread_incr_OBJECTS = qthread_incr.$(OBJEXT)
qthread_incr_OBJECTS = $(am_qthread_incr_OBJECTS)
qthread_incr_LDADD = $(LDADD)
qthread_incr_DEPENDENCIES = $(qthreadlib)
am_qthread_migrate_to_OBJECTS = qthread_migrate_to.$(OBJEXT)
qthread_migrate_to_OBJECTS = $(am_qthread_migrate_to_OBJECTS)
qthread_migrate_to_LDADD = $(LDADD)
qthread_migrate_to_DEPENDENCIES = $(qthreadlib)
qthread_readstate_SOURCES = qthread_readstate.c
qthread_readstate_OBJECTS = qthread_readstate.$(OBJEXT)
qthread_readstate_LDADD = $(LDADD)
qthread_readstate_DEPENDENCIES = $(qthreadlib)
am_qthread_stackleft_OBJECTS = qthread_stackleft.$(OBJEXT)
qthread_stackleft_OBJECTS = $(am_qthread_stackleft_OBJECTS)
qthread_stackleft_LDADD = $(LDADD)
qthread_stackleft_DEPENDENCIES = $(qthreadlib)
am_qtimer_OBJECTS = qtimer.$(OBJEXT)
qtimer_OBJECTS = $(am_qtimer_OBJECTS)
qtimer_LDADD = $(LDADD)
qtimer_DEPENDENCIES = $(qthreadlib)
am_queue_OBJECTS = queue.$(OBJEXT)
queue_OBJECTS = $(am_queue_OBJECTS)
queue_LDADD = $(LDADD)
queue_DEPENDENCIES = $(qthreadlib)
am_read_OBJECTS = read.$(OBJEXT)
read_OBJECTS = $(am_read_OBJECTS)
read_LDADD = $(LDADD)
read_DEPENDENCIES = $(qthreadlib)
am_reinitialization_OBJECTS = reinitialization.$(OBJEXT)
reinitialization_OBJECTS = $(am_reinitialization_OBJECTS)
reinitialization_LDADD = $(LDADD)
reinitialization_DEPENDENCIES = $(qthreadlib)
am_sinc_OBJECTS = sinc.$(OBJEXT)
sinc_OBJECTS = $(am_sinc_OBJECTS)
sinc_LDADD = $(LDADD)
sinc_DEPENDENCIES = $(qthreadlib)
am_sinc_null_OBJECTS = sinc_null.$(OBJEXT)
sinc_null_OBJECTS = $(am_sinc_null_OBJECTS)
sinc_null_LDADD = $(LDADD)
sinc_null_DEPENDENCIES = $(qthreadlib)
am_syncvar_prodcons_OBJECTS = syncvar_prodcons.$(OBJEXT)
syncvar_prodcons_OBJECTS = $(am_syncvar_prodcons_OBJECTS)
syncvar_prodcons_LDADD = $(LDADD)
syncvar_prodcons_DEPENDENCIES = $(qthreadlib)
am_tasklocal_data_OBJECTS = tasklocal_data.$(OBJEXT)
tasklocal_data_OBJECTS = $(am_tasklocal_data_OBJECTS)
tasklocal_data_LDADD = $(LDADD)
tasklocal_data_DEPENDENCIES = $(qthreadlib)
am_tasklocal_data_no_argcopy_OBJECTS =  \
	tasklocal_data_no_argcopy.$(OBJEXT)
tasklocal_data_no_argcopy_OBJECTS =  \
	$(am_tasklocal_data_no_argcopy_OBJECTS)
tasklocal_data_no_argcopy_LDADD = $(LDADD)
tasklocal_data_no_argcopy_DEPENDENCIES = $(qthreadlib)
am_tasklocal_data_no_default_OBJECTS =  \
	tasklocal_data_no_default.$(OBJEXT)
tasklocal_data_no_default_OBJECTS =  \
	$(am_tasklocal_data_no_default_OBJECTS)
tasklocal_data_no_default_LDADD = $(LDADD)
tasklocal_data_no_default_DEPENDENCIES = $(qthreadlib)
am_test_subteams_OBJECTS = test_subteams.$(OBJEXT)
test_subteams_OBJECTS = $(am_test_subteams_OBJECTS)
test_subteams_LDADD = $(LDADD)
test_subteams_DEPENDENCIES = $(qthreadlib)
am_test_teams_OBJECTS = test_teams.$(OBJEXT)
test_teams_OBJECTS = $(am_test_teams_OBJECTS)
test_teams_LDADD = $(LDADD)
test_teams_DEPENDENCIES = $(qthreadlib)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include -I$(top_builddir)/include/qthread@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(aligned_prodcons_SOURCES) \
	$(arbitrary_blocking_operation_SOURCES) \
	$(external_fork_SOURCES) $(external_syncvar_SOURCES) \
	$(hello_world_SOURCES) $(hello_world_multi_SOURCES) \
	$(qalloc_SOURCES) $(qthread_cacheline_SOURCES) \
	$(qthread_cas_SOURCES) $(qthread_dincr_SOURCES) \
	$(qthread_disable_shepherd_SOURCES) $(qthread_fincr_SOURCES) \
	$(qthread_fork_precond_SOURCES) $(qthread_id_SOURCES) \
	$(qthread_incr_SOURCES) $(qthread_migrate_to_SOURCES) \
	qthread_readstate.c $(qthread_stackleft_SOURCES) \
	$(qtimer_SOURCES) $(queue_SOURCES) $(read_SOURCES) \
	$(reinitialization_SOURCES) $(sinc_SOURCES) \
	$(sinc_null_SOURCES) $(syncvar_prodcons_SOURCES) \
	$(tasklocal_data_SOURCES) $(tasklocal_data_no_argcopy_SOURCES) \
	$(tasklocal_data_no_default_SOURCES) $(test_subteams_SOURCES) \
	$(test_teams_SOURCES)
DIST_SOURCES = $(aligned_prodcons_SOURCES) \
	$(arbitrary_blocking_operation_SOURCES) \
	$(external_fork_SOURCES) $(external_syncvar_SOURCES) \
	$(hello_world_SOURCES) $(hello_world_multi_SOURCES) \
	$(qalloc_SOURCES) $(qthread_cacheline_SOURCES) \
	$(qthread_cas_SOURCES) $(qthread_dincr_SOURCES) \
	$(qthread_disable_shepherd_SOURCES) $(qthread_fincr_SOURCES) \
	$(qthread_fork_precond_SOURCES) $(qthread_id_SOURCES) \
	$(qthread_incr_SOURCES) $(qthread_migrate_to_SOURCES) \
	qthread_readstate.c $(qthread_stackleft_SOURCES) \
	$(qtimer_SOURCES) $(queue_SOURCES) $(read_SOURCES) \
	$(reinitialization_SOURCES) $(sinc_SOURCES) \
	$(sinc_null_SOURCES) $(syncvar_prodcons_SOURCES) \
	$(tasklocal_data_SOURCES) $(tasklocal_data_no_argcopy_SOURCES) \
	$(tasklocal_data_no_default_SOURCES) $(test_subteams_SOURCES) \
	$(test_teams_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHPL_HOME = @CHPL_HOME@
CHPL_OPTS = @CHPL_OPTS@
CLEANFILES = @CLEANFILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTRA_DISTCHECK_OPTIONS = @EXTRA_DISTCHECK_OPTIONS@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPICC = @MPICC@
MPICXX = @MPICXX@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TBB_LIBS = @TBB_LIBS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qthread_topo = @qthread_topo@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
timelimit_path = @timelimit_path@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
with_barrier = @with_barrier@
with_dict = @with_dict@
with_scheduler = @with_scheduler@
with_sinc = @with_sinc@
yod = @yod@
TESTS_ENVIRONMENT = $(am__append_1) $(am__append_2)
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/test/
qthreadlib = $(top_builddir)/src/libqthread.la
LDADD = $(qthreadlib)
hello_world_SOURCES = hello_world.c
aligned_prodcons_SOURCES = aligned_prodcons.c
hello_world_multi_SOURCES = hello_world_multi.c
syncvar_prodcons_SOURCES = syncvar_prodcons.c
reinitialization_SOURCES = reinitialization.c
qthread_cas_SOURCES = qthread_cas.c
qthread_cacheline_SOURCES = qthread_cacheline.c
qthread_id_SOURCES = qthread_id.c
qthread_incr_SOURCES = qthread_incr.c
qthread_fincr_SOURCES = qthread_fincr.c
qthread_dincr_SOURCES = qthread_dincr.c
qthread_stackleft_SOURCES = qthread_stackleft.c
qthread_migrate_to_SOURCES = qthread_migrate_to.c
qthread_disable_shepherd_SOURCES = qthread_disable_shepherd.c
qtimer_SOURCES = qtimer.c
queue_SOURCES = queue.c
qthread_fork_precond_SOURCES = qthread_fork_precond.c
qalloc_SOURCES = qalloc.c
arbitrary_blocking_operation_SOURCES = arbitrary_blocking_operation.c
sinc_null_SOURCES = sinc_null.c
sinc_SOURCES = sinc.c
tasklocal_data_SOURCES = tasklocal_data.c
tasklocal_data_no_default_SOURCES = tasklocal_data_no_default.c
tasklocal_data_no_argcopy_SOURCES = tasklocal_data_no_argcopy.c
external_fork_SOURCES = external_fork.c
external_syncvar_SOURCES = external_syncvar.c
read_SOURCES = read.c
test_teams_SOURCES = test_teams.c
test_subteams_SOURCES = test_subteams.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  test/basics/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  test/basics/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
aligned_prodcons$(EXEEXT): $(aligned_prodcons_OBJECTS) $(aligned_prodcons_DEPENDENCIES) 
	@rm -f aligned_prodcons$(EXEEXT)
	$(LINK) $(aligned_prodcons_OBJECTS) $(aligned_prodcons_LDADD) $(LIBS)
arbitrary_blocking_operation$(EXEEXT): $(arbitrary_blocking_operation_OBJECTS) $(arbitrary_blocking_operation_DEPENDENCIES) 
	@rm -f arbitrary_blocking_operation$(EXEEXT)
	$(LINK) $(arbitrary_blocking_operation_OBJECTS) $(arbitrary_blocking_operation_LDADD) $(LIBS)
external_fork$(EXEEXT): $(external_fork_OBJECTS) $(external_fork_DEPENDENCIES) 
	@rm -f external_fork$(EXEEXT)
	$(LINK) $(external_fork_OBJECTS) $(external_fork_LDADD) $(LIBS)
external_syncvar$(EXEEXT): $(external_syncvar_OBJECTS) $(external_syncvar_DEPENDENCIES) 
	@rm -f external_syncvar$(EXEEXT)
	$(LINK) $(external_syncvar_OBJECTS) $(external_syncvar_LDADD) $(LIBS)
hello_world$(EXEEXT): $(hello_world_OBJECTS) $(hello_world_DEPENDENCIES) 
	@rm -f hello_world$(EXEEXT)
	$(LINK) $(hello_world_OBJECTS) $(hello_world_LDADD) $(LIBS)
hello_world_multi$(EXEEXT): $(hello_world_multi_OBJECTS) $(hello_world_multi_DEPENDENCIES) 
	@rm -f hello_world_multi$(EXEEXT)
	$(LINK) $(hello_world_multi_OBJECTS) $(hello_world_multi_LDADD) $(LIBS)
qalloc$(EXEEXT): $(qalloc_OBJECTS) $(qalloc_DEPENDENCIES) 
	@rm -f qalloc$(EXEEXT)
	$(LINK) $(qalloc_OBJECTS) $(qalloc_LDADD) $(LIBS)
qthread_cacheline$(EXEEXT): $(qthread_cacheline_OBJECTS) $(qthread_cacheline_DEPENDENCIES) 
	@rm -f qthread_cacheline$(EXEEXT)
	$(LINK) $(qthread_cacheline_OBJECTS) $(qthread_cacheline_LDADD) $(LIBS)
qthread_cas$(EXEEXT): $(qthread_cas_OBJECTS) $(qthread_cas_DEPENDENCIES) 
	@rm -f qthread_cas$(EXEEXT)
	$(LINK) $(qthread_cas_OBJECTS) $(qthread_cas_LDADD) $(LIBS)
qthread_dincr$(EXEEXT): $(qthread_dincr_OBJECTS) $(qthread_dincr_DEPENDENCIES) 
	@rm -f qthread_dincr$(EXEEXT)
	$(LINK) $(qthread_dincr_OBJECTS) $(qthread_dincr_LDADD) $(LIBS)
qthread_disable_shepherd$(EXEEXT): $(qthread_disable_shepherd_OBJECTS) $(qthread_disable_shepherd_DEPENDENCIES) 
	@rm -f qthread_disable_shepherd$(EXEEXT)
	$(LINK) $(qthread_disable_shepherd_OBJECTS) $(qthread_disable_shepherd_LDADD) $(LIBS)
qthread_fincr$(EXEEXT): $(qthread_fincr_OBJECTS) $(qthread_fincr_DEPENDENCIES) 
	@rm -f qthread_fincr$(EXEEXT)
	$(LINK) $(qthread_fincr_OBJECTS) $(qthread_fincr_LDADD) $(LIBS)
qthread_fork_precond$(EXEEXT): $(qthread_fork_precond_OBJECTS) $(qthread_fork_precond_DEPENDENCIES) 
	@rm -f qthread_fork_precond$(EXEEXT)
	$(LINK) $(qthread_fork_precond_OBJECTS) $(qthread_fork_precond_LDADD) $(LIBS)
qthread_id$(EXEEXT): $(qthread_id_OBJECTS) $(qthread_id_DEPENDENCIES) 
	@rm -f qthread_id$(EXEEXT)
	$(LINK) $(qthread_id_OBJECTS) $(qthread_id_LDADD) $(LIBS)
qthread_incr$(EXEEXT): $(qthread_incr_OBJECTS) $(qthread_incr_DEPENDENCIES) 
	@rm -f qthread_incr$(EXEEXT)
	$(LINK) $(qthread_incr_OBJECTS) $(qthread_incr_LDADD) $(LIBS)
qthread_migrate_to$(EXEEXT): $(qthread_migrate_to_OBJECTS) $(qthread_migrate_to_DEPENDENCIES) 
	@rm -f qthread_migrate_to$(EXEEXT)
	$(LINK) $(qthread_migrate_to_OBJECTS) $(qthread_migrate_to_LDADD) $(LIBS)
qthread_readstate$(EXEEXT): $(qthread_readstate_OBJECTS) $(qthread_readstate_DEPENDENCIES) 
	@rm -f qthread_readstate$(EXEEXT)
	$(LINK) $(qthread_readstate_OBJECTS) $(qthread_readstate_LDADD) $(LIBS)
qthread_stackleft$(EXEEXT): $(qthread_stackleft_OBJECTS) $(qthread_stackleft_DEPENDENCIES) 
	@rm -f qthread_stackleft$(EXEEXT)
	$(LINK) $(qthread_stackleft_OBJECTS) $(qthread_stackleft_LDADD) $(LIBS)
qtimer$(EXEEXT): $(qtimer_OBJECTS) $(qtimer_DEPENDENCIES) 
	@rm -f qtimer$(EXEEXT)
	$(LINK) $(qtimer_OBJECTS) $(qtimer_LDADD) $(LIBS)
queue$(EXEEXT): $(queue_OBJECTS) $(queue_DEPENDENCIES) 
	@rm -f queue$(EXEEXT)
	$(LINK) $(queue_OBJECTS) $(queue_LDADD) $(LIBS)
read$(EXEEXT): $(read_OBJECTS) $(read_DEPENDENCIES) 
	@rm -f read$(EXEEXT)
	$(LINK) $(read_OBJECTS) $(read_LDADD) $(LIBS)
reinitialization$(EXEEXT): $(reinitialization_OBJECTS) $(reinitialization_DEPENDENCIES) 
	@rm -f reinitialization$(EXEEXT)
	$(LINK) $(reinitialization_OBJECTS) $(reinitialization_LDADD) $(LIBS)
sinc$(EXEEXT): $(sinc_OBJECTS) $(sinc_DEPENDENCIES) 
	@rm -f sinc$(EXEEXT)
	$(LINK) $(sinc_OBJECTS) $(sinc_LDADD) $(LIBS)
sinc_null$(EXEEXT): $(sinc_null_OBJECTS) $(sinc_null_DEPENDENCIES) 
	@rm -f sinc_null$(EXEEXT)
	$(LINK) $(sinc_null_OBJECTS) $(sinc_null_LDADD) $(LIBS)
syncvar_prodcons$(EXEEXT): $(syncvar_prodcons_OBJECTS) $(syncvar_prodcons_DEPENDENCIES) 
	@rm -f syncvar_prodcons$(EXEEXT)
	$(LINK) $(syncvar_prodcons_OBJECTS) $(syncvar_prodcons_LDADD) $(LIBS)
tasklocal_data$(EXEEXT): $(tasklocal_data_OBJECTS) $(tasklocal_data_DEPENDENCIES) 
	@rm -f tasklocal_data$(EXEEXT)
	$(LINK) $(tasklocal_data_OBJECTS) $(tasklocal_data_LDADD) $(LIBS)
tasklocal_data_no_argcopy$(EXEEXT): $(tasklocal_data_no_argcopy_OBJECTS) $(tasklocal_data_no_argcopy_DEPENDENCIES) 
	@rm -f tasklocal_data_no_argcopy$(EXEEXT)
	$(LINK) $(tasklocal_data_no_argcopy_OBJECTS) $(tasklocal_data_no_argcopy_LDADD) $(LIBS)
tasklocal_data_no_default$(EXEEXT): $(tasklocal_data_no_default_OBJECTS) $(tasklocal_data_no_default_DEPENDENCIES) 
	@rm -f tasklocal_data_no_default$(EXEEXT)
	$(LINK) $(tasklocal_data_no_default_OBJECTS) $(tasklocal_data_no_default_LDADD) $(LIBS)
test_subteams$(EXEEXT): $(test_subteams_OBJECTS) $(test_subteams_DEPENDENCIES) 
	@rm -f test_subteams$(EXEEXT)
	$(LINK) $(test_subteams_OBJECTS) $(test_subteams_LDADD) $(LIBS)
test_teams$(EXEEXT): $(test_teams_OBJECTS) $(test_teams_DEPENDENCIES) 
	@rm -f test_teams$(EXEEXT)
	$(LINK) $(test_teams_OBJECTS) $(test_teams_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aligned_prodcons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arbitrary_blocking_operation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/external_fork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/external_syncvar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hello_world.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hello_world_multi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_cacheline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_cas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_dincr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_disable_shepherd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_fincr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_fork_precond.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_id.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_incr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_migrate_to.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_readstate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qthread_stackleft.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qtimer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reinitialization.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sinc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sinc_null.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/syncvar_prodcons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasklocal_data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasklocal_data_no_argcopy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasklocal_data_no_default.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_subteams.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_teams.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	mv -f $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	mv -f $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	mv -f $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


.PHONY: buildall buildtests buildextra

buildall: $(TESTS)

buildtests: $(TESTS)

buildextra: $(TESTS)

$(qthreadlib):
	$(MAKE) -C $(top_builddir)/src libqthread.la
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
